<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf" x:Class="ComputoWpf.ComputoCtrl"
             xmlns:commons="clr-namespace:Commons;assembly=DigiCorp.Commons"
             xmlns:TemplateSelectors="clr-namespace:MasterDetailView;assembly=DigiCorp.MasterDetailView"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:dz="clr-namespace:DevZest.Windows.DataVirtualization;assembly=DigiCorp.DataVirtualization"
             xmlns:computowpf="clr-namespace:ComputoWpf"
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
            xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
            xmlns:commonResources="clr-namespace:CommonResources;assembly=DigiCorp.CommonResources"
            xmlns:gif="http://wpfanimatedgif.codeplex.com" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
            lex:LocalizeDictionary.OutputMissingKeys="True"
             lex:LocalizeDictionary.DesignCulture="en"
             lex:ResxLocalizationProvider.DefaultAssembly="DigiCorp.CommonResources"
             lex:ResxLocalizationProvider.DefaultDictionary="Strings"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             
            >
    
    <!--DataContext="{StaticResource ComputoViewKey}"-->
    <!--xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"-->
    <UserControl.Resources>
            <commons:IntegerToIndentationConverter x:Key="IntToIndConverter"/>
            <commons:StaticResourceConverter x:Key="StaticResourceConverter"/>
        
            <Style TargetType="{x:Type Control}" x:Key="baseStyle">
                <Setter Property="FontSize" Value="12" />
            </Style>
            <!--<Style TargetType="{x:Type Button}" BasedOn="{StaticResource baseStyle}"></Style>-->
            <Style TargetType="{x:Type Label}" BasedOn="{StaticResource baseStyle}"></Style>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource baseStyle}"></Style>
            <Style TargetType="{x:Type ListView}" BasedOn="{StaticResource baseStyle}"></Style>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="12"/>
            </Style>

            <!--VALOREVIEW CONTROLS-->
            <DataTemplate x:Key="templateTesto">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Testo, Mode=TwoWay}" Foreground="Black" VerticalAlignment="Top" TextWrapping="Wrap" Grid.Column="0" KeyDown="TextBox_KeyDown" MouseDoubleClick="ValoreAttributo_HandleMouseDoubleClick" IsReadOnly="{Binding IsReadOnly}" Background="{Binding Background}" BorderThickness="0,0,0,1"/>
                    <Grid Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <ToggleButton x:Name="PreviewButton" Grid.Column="1" Command="{Binding PreviewCommand}" IsTabStop="False" Visibility="{Binding IsPreviewable, Converter={StaticResource VisibilityConverter}}" ToolTip="{lex:Loc VisualizzaStruttura}"
                                            Content="&#xe080;" Style="{StaticResource detailListViewItemToggleButtonStyle}"/>
                    </Grid>
            </Grid>
            </DataTemplate>
            <DataTemplate x:Key="templateContabilita">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{Binding Numero}" Foreground="{Binding ResultForeground}" VerticalAlignment="Top" Grid.Column="0" ToolTip="{Binding ResultDescription}"/>
                    <TextBox Text="{Binding Formula,Mode=TwoWay}" TextWrapping="Wrap" InputScope="CurrencyAmount" 
                             Foreground="{Binding Foreground}" Background="{Binding Background}" 
                             VerticalAlignment="Top" KeyDown="TextBox_KeyDown" PreviewKeyDown="TextBox_PreviewKeyDown" 
                             IsReadOnly="{Binding IsReadOnly}" Grid.Column="1" 
                             MouseDoubleClick="ValoreAttributo_HandleMouseDoubleClick"  BorderThickness="0,0,0,1"/>
                    <Button Name="HelpButton" Grid.Column="2" Content="&#xe057;" Command="{Binding HelpCommand}"
                                        Width="Auto" HorizontalAlignment="Left" Style="{StaticResource detailListViewItemButtonStyle}"
                                        ToolTip="{lex:Loc Funzioni e operatori utilizzabili}"/>
            </Grid>
                <!--<TextBox Text="{Binding Numero, Mode=TwoWay}" Foreground="Black" TextWrapping="Wrap" InputScope="CurrencyAmount" Height="20" VerticalAlignment="Top" KeyDown="TextBox_KeyDown" Margin="0,0,20,0"/>-->
            </DataTemplate>
            <DataTemplate x:Key="templateReale">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Numero}" Foreground="{Binding ResultForeground}" VerticalAlignment="Top" Grid.Column="0" ToolTip="{Binding ResultDescription}"/>
                    <TextBox Text="{Binding Formula,Mode=TwoWay}" TextWrapping="Wrap" Foreground="Black" Background="{Binding Background}" VerticalAlignment="Top" KeyDown="TextBox_KeyDown" PreviewKeyDown="TextBox_PreviewKeyDown" IsReadOnly="{Binding IsReadOnly}" Grid.Column="1" MouseDoubleClick="ValoreAttributo_HandleMouseDoubleClick" BorderThickness="0,0,0,1"/>
                    <Button Name="HelpButton" Grid.Column="2" Content="&#xe057;" Command="{Binding HelpCommand}"
                                    Width="Auto" HorizontalAlignment="Left" Style="{StaticResource detailListViewItemButtonStyle}"
                                    ToolTip="{lex:Loc Funzioni e operatori utilizzabili}"/>

            </Grid>
                <!--<TextBox Text="{Binding Numero, Mode=TwoWay}" Foreground="Black" TextWrapping="Wrap" InputScope="CurrencyAmount" Height="20" VerticalAlignment="Top" KeyDown="TextBox_KeyDown" Margin="0,0,20,0"/>-->
            </DataTemplate>
            <!--<DataTemplate x:Key="templateDataOld">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <DatePicker SelectedDate="{Binding Data, Mode=TwoWay}"  Grid.Column="0" Foreground="Black" Background="{Binding Background}" VerticalAlignment="Top" MouseDoubleClick="ValoreAttributo_HandleMouseDoubleClick" IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseConverter}}" BorderThickness="0,0,0,1"/>
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="templateGuidOld">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                </Grid>
            </DataTemplate>-->
        <!--<DataTemplate x:Key="templateDivisione">
                <Button Content ="{Binding Testo}" Command="{Binding SelectCategoriaCommand}" Background="Transparent" MouseDoubleClick="ValoreAttributo_HandleMouseDoubleClick" HorizontalContentAlignment="Left" VerticalAlignment="Top" BorderThickness="0" Height="25"/>
        </DataTemplate>-->
            <TemplateSelectors:ValoreAttributoTemplateSelector x:Key="ValoreAttributoTemplateSelector" />
            <TemplateSelectors:RightSplitPaneTemplateSelector x:Key="RightSplitPaneTemplateSelector" />
            <commons:DataGridGroupColumnDescriptionConverter x:Key="DataGridGroupColumnDescriptionConverter" />

        <!--</ResourceDictionary>-->
    </UserControl.Resources>

    <Grid PreviewMouseWheel="Grid_PreviewMouseWheel" PreviewMouseDown="Grid_PreviewMouseDown">
        <Grid.LayoutTransform>
            <ScaleTransform x:Name="MasterDetailScale" CenterX="0" CenterY="0" ScaleX="1" ScaleY="1"/>
        </Grid.LayoutTransform>
        <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <!--<ColumnDefinition Width="5"/>-->
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid Name="MainGrid" Grid.Row="0" Style="{StaticResource mainGridStyle}" Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="400" MinWidth="200"/>
                </Grid.ColumnDefinitions>
                <Grid Name="MasterGrid" Grid.Column="0">
                    <Grid.InputBindings>
                        <KeyBinding Key="Escape" Command="{Binding ComputoItemsView.EscapeCommand}"/>
                    </Grid.InputBindings>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Style="{StaticResource menuStackPanelStyle}">
                        <Button ToolTip="{lex:Loc AggiornaVociComputo}" 
                                            Command="{Binding ComputoItemsView.RecalculateComputoItemsCommand}"
                                            Visibility="{Binding ComputoItemsView.IsRecalculateItemsCommandAllowed, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"
                                            IsEnabled="{Binding ComputoItemsView.IsRecalculateItemsNeeded}"
                                            Content="&#xE0CA;" Style="{StaticResource menuButtonStyle}"
                                            Foreground="{Binding ComputoItemsView.RecalculateItemsCommandColor}"
                                />
                        <Button x:Name="AddEntity" Command="{Binding ComputoItemsView.AddEntityCommand}" ToolTipService.ToolTip="{Binding ComputoItemsView.AddEntityToolTip}"
                                    Style="{StaticResource menuButtonStyle}" Content="&#xe02d;"
                                    Visibility="{Binding ComputoItemsView.IsAddEntityEnabled, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"/>
                        <Button x:Name="PrezzarioItemAdd" Command="{Binding AddComputoItemsCommand}" ToolTip="{lex:Loc Aggiungi articolo}"
                                Style="{StaticResource menuButtonStyle}" Content="&#xe02b;"
                                Visibility="{Binding ComputoItemsView.IsPrezzarioItemAddEnabled, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"/>
                        <Button x:Name="MoveEntities" Command="{Binding ComputoItemsView.MoveEntitiesCommand}" ToolTipService.ToolTip="{lex:Loc Sposta}" 
                                Style="{StaticResource menuButtonStyle}"
                                Visibility="{Binding ComputoItemsView.IsMoveEntitiesEnabled, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
                            <Grid>
                                <TextBlock Text="&#xe032;" Style="{StaticResource menuTextBlockStyle}"/>
                                <commons:NotificationCtrl Text="{Binding ComputoItemsView.ReadyToPasteEntitiesCount}" Visibility="{Binding ComputoItemsView.IsMoveEntitiesNotificationEnabled, Converter={StaticResource VisibilityConverter}}"/>
                            </Grid>
                        </Button>
                        <dxe:FlyoutControl IsOpen="{Binding ItemsView.IsMoveEntitiesWaitingForTarget, Mode=OneWay}" 
				                           PlacementTarget="{Binding ElementName=MoveEntities}"
				                           Style="{StaticResource flyoutControlStyle}">
                            <dxe:FlyoutControl.Settings>
                                <dxe:FlyoutSettings ShowIndicator="True" Placement="Top" IndicatorHorizontalAlignment="Center">
                                </dxe:FlyoutSettings>
                            </dxe:FlyoutControl.Settings>
                            <TextBlock Text="{lex:Loc SelezionareDestinazione}"/>
                        </dxe:FlyoutControl>
                        <Button x:Name="CopyEntities" Command="{Binding ComputoItemsView.CopyEntitiesCommand}" ToolTipService.ToolTip="{lex:Loc Copia2}" 
                                    Style="{StaticResource menuButtonStyle}" 
                                    Visibility="{Binding ComputoItemsView.IsCopyEntitiesEnabled, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
                                <Grid>                                           
                                    <TextBlock Text="&#xe03d;" Style="{StaticResource menuTextBlockStyle}"/>
                                    <commons:NotificationCtrl Text="{Binding ComputoItemsView.ReadyToPasteEntitiesCount}" Visibility="{Binding ComputoItemsView.IsCopyEntitiesNotificationEnabled, Converter={StaticResource VisibilityConverter}}"/>
                                </Grid>   
                        </Button>
                        <Button x:Name="MoveEntitiesAfter" Command="{Binding ComputoItemsView.PasteEntitiesCommand}"  ToolTipService.ToolTip="{Binding ComputoItemsView.PasteEntitiesToolTip, Mode=TwoWay}"
                                Style="{StaticResource menuButtonStyle}" Content="&#xe030;"
                                Visibility="{Binding ComputoItemsView.IsMoveEntitiesAfterEnabled, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"/>
                        <Button x:Name="Escape" Command="{Binding ComputoItemsView.EscapeCommand}"
                                Style="{StaticResource menuButtonStyle}" Content="&#xe037;"
                                ToolTipService.ToolTip="{lex:Loc Annulla}"
                                Visibility="{Binding ComputoItemsView.IsEscapeEnabled, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"/>
                        <Button x:Name="DeleteEntities" Command="{Binding ComputoItemsView.DeleteCheckedCommand}" ToolTip="{lex:Loc Elimina}" 
                                Style="{StaticResource menuButtonStyle}" Content="&#xe03a;"
                                Visibility="{Binding ComputoItemsView.IsDeleteEntitiesEnabled, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"/>
                        <Button x:Name="ColumnChooser" Click="ColumnChooser_Click" ToolTip="{lex:Loc Imposta colonne}"
                                Style="{StaticResource menuButtonStyle}" Content="&#xe05d;"
                                Visibility="{Binding ComputoItemsView.IsColumnChooserEnabled, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"/>
                        <Button x:Name="ExpandCheckedEntities" Command="{Binding ComputoItemsView.ExpandCheckedEntitiesCommand}" ToolTipService.ToolTip="{lex:Loc Espandi selezione}"
                                Style="{StaticResource menuButtonStyle}" Content="&#xe051;"
                                Visibility="{Binding ComputoItemsView.IsExpandAllEnabled, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"/>
                        <Button x:Name="CollapseAll" Command="{Binding ComputoItemsView.CollapseAllCommand}" ToolTipService.ToolTip="{lex:Loc Collassa tutto}" 
                                Style="{StaticResource menuButtonStyle}" Content="&#xe052;"
                                Visibility="{Binding ComputoItemsView.IsCollapseAllEnabled, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"/>
                        <Button x:Name="CheckAll" Command="{Binding ComputoItemsView.CheckAllCommand}" ToolTipService.ToolTip="{lex:Loc Seleziona tutto}" 
                                Style="{StaticResource menuButtonStyle}" Content="&#xE09A;"
                                Visibility="{Binding ComputoItemsView.IsCollapseAllEnabled, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"/>
                        <Button x:Name="SelectInModel3d" Command="{Binding SelectInModel3dCommand}" ToolTipService.ToolTip="{lex:Loc SelezionaSuModello3d}" 
                                Style="{StaticResource menuButtonStyle}" Content="&#xe095;"
                                Visibility="{Binding ComputoItemsView.IsSelectInModel3dEnabled, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"/>
                        <ToggleButton x:Name="MultiModify" IsChecked="{Binding ComputoItemsView.IsMultipleModify, Mode=TwoWay}"  ToolTipService.ToolTip="{lex:Loc Modifica Multipla}"
                                Style="{StaticResource menuToggleButtonStyle}"
                                Visibility="{Binding ComputoItemsView.IsMultipleModifyEnabled, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
                            <Grid>
                                <TextBlock Text="&#xe041;" Style="{StaticResource menuTextBlockStyle}"/>
                                <commons:NotificationCtrl Text="{Binding ComputoItemsView.ReadyToPasteEntitiesCount}" Visibility="{Binding ComputoItemsView.IsMultipleModifyNotificationEnabled, Converter={StaticResource VisibilityConverter}}"/>
                            </Grid>
                        </ToggleButton>
                        <Button x:Name="ExportExcel" Click="ExportExcel_Click" ToolTipService.ToolTip="{lex:Loc ExportExcelComputo}" 
                                    Style="{StaticResource menuButtonStyle}" Content="&#xE0A3;"
                                    Visibility="{Binding ComputoItemsView.IsExportExcelEnabled, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"
                                />
                        <!--<Button x:Name="ImportItems" Command="{Binding ItemsView.ImportItemsCommand}"
                                Style="{StaticResource menuButtonStyle}" Content="&#xE0BA;"
                                ToolTip="{lex:Loc ImportItemsComputo}"
                                Visibility="{Binding ComputoItemsView.IsImportItemsEnabled, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"
                                />-->
                        <commonResources:ButtonsBarDropDownButton x:Name="ImportItems" Content="&#xE0BA;" Style="{StaticResource dropDownButtonStyle}"
                                                          ToolTip="{lex:Loc ImportaArticoli}" FontSize="20"
                                                          DesideredVisibility="{Binding ComputoItemsView.IsImportItemsEnabled, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"
                                                          OtherText="{lex:Loc Importa}">
                            <commonResources:ButtonsBarDropDownButton.DropDownContent>
                                <StackPanel Orientation="Vertical" Width="40">
                                    <commonResources:ButtonsBarButton ToolTip="{lex:Loc ImportaDaFileJoin}"
                                                Command="{Binding ComputoItemsView.ImportItemsCommand}"
                                                Content="&#xE0C3;" Style="{StaticResource dropDownContentButtonStyle}"
                                                OtherText="{lex:Loc ImportaDaFileJoin}"/>
                                    <commonResources:ButtonsBarButton ToolTip="{lex:Loc ImportaDaFileXlsx}"
                                                Command="{Binding ComputoItemsView.ImportXlsxCommand}"
                                                Content="&#xE134;" Style="{StaticResource dropDownContentButtonStyle}"
                                                OtherText="{lex:Loc ImportaDaFileXlsx}" />
                                </StackPanel>
                            </commonResources:ButtonsBarDropDownButton.DropDownContent>
                        </commonResources:ButtonsBarDropDownButton>
                        <Button x:Name="EntityHighlighters" Command="{Binding ItemsView.EntityHighlightersCommand}" 
                                            Style="{StaticResource menuButtonStyle}"
                                            ToolTipService.ToolTip="{lex:Loc Evidenziatori}" Content="&#xe113;"
                                            Visibility="{Binding ItemsView.IsEntityHighlightersEnabled, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"
                                            />

                    </StackPanel>
                    <StackPanel Grid.Column="1" Style="{StaticResource menuStackPanelStyle}">
                        <TextBlock Text="{Binding ComputoItemsView.CheckedEntitiesCount, Mode=OneWay}" VerticalAlignment="Center" Margin="5,0,5,0"/>
                        <Button Name="AlertButton" Content="!" Visibility="{Binding ComputoItemsView.IsAlertVisible, Converter={StaticResource VisibilityConverter}}" VerticalAlignment="Center"
                                   FontSize="40" FontWeight="Bold" Foreground="{StaticResource AlertColor}" Style="{StaticResource menuButtonStyle}"
                                Command="{Binding ComputoItemsView.ShowAlertCommand}" Width="20">
                        </Button>
                        <dxe:FlyoutControl IsOpen="{Binding ComputoItemsView.IsAlertOpen}"
										   PlacementTarget="{Binding ElementName=AlertButton}"
                                           Style="{StaticResource flyoutControlStyle}" Background="{StaticResource AlertColor}"
                                           >
                            <dxmvvm:Interaction.Behaviors>
                                <dxmvvm:EventToCommand EventName="Closing" Command="{Binding ComputoItemsView.AlertCloseCommand}" />
                            </dxmvvm:Interaction.Behaviors>
                            <dxe:FlyoutControl.Settings>
                                <dxe:FlyoutSettings ShowIndicator="True" Placement="Top" IndicatorHorizontalAlignment="Center">
                                </dxe:FlyoutSettings>
                            </dxe:FlyoutControl.Settings>
                            <ListView ItemsSource="{Binding ComputoItemsView.AlertItems}" BorderThickness="0" Background="Transparent">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="Focusable" Value="false"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Padding" Value="0"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Background="{StaticResource AlertColor}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="50"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Text="{Binding AlertText}"/>
                                            <Button Grid.Column="1" Command="{Binding AlertSelectEntitiesCommand}" 
                                                    Visibility="{Binding AnyEntities, Converter={StaticResource VisibilityConverter}}" 
                                                    Margin="5,0,5,0" Padding="2"
                                                    Style="{StaticResource smallButtonStyle}" Content="&#xe07f;"
                                                    ToolTip="{lex:Loc SelezionaVoci}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </dxe:FlyoutControl>
                    </StackPanel>
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <ToggleButton Content="{lex:Loc _Nessuno}"  IsChecked="{Binding ComputoItemsView.IsNoSelectionChecked, Mode=TwoWay}" Visibility="{Binding ComputoItemsView.AllowNoSelection, Converter={StaticResource VisibilityConverter}}" FontSize="12" Height="40" VerticalAlignment="Center" HorizontalAlignment="Stretch" BorderThickness="0" Background="Transparent">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border x:Name="border" BorderThickness="0" Padding="20,0,0,0" Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="true">
                                                        <Setter Property="Background" TargetName="border" Value="LightGray"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                    </Grid>
                    <syncfusion:SfDataGrid x:Name="MasterDataGrid"   Grid.Row="1" ItemsSource="{Binding ComputoItemsView.VirtualEntities}"
                        ShowGroupDropArea="False"  AllowFrozenGroupHeaders="True" AutoExpandGroups="False"  AllowGrouping="True" ShowColumnWhenGrouped="True"   
                        AllowEditing="True" AllowTriStateSorting="False" AllowFiltering="False" AutoGenerateColumns="False" AddNewRowPosition="None" AllowDeleting="False" AllowSorting="True"
                        SelectionMode="{Binding SelectionMode}"  
                        AllowDraggingColumns="True" AllowResizingColumns="True" 
                        ShowRowHeader="True" SelectionUnit="Row" NavigationMode="Cell"
                        AllowDraggingRows="False" AllowDrop="False"
                        CurrentItem="{Binding CurrentItem, Mode=OneWayToSource}"
                        FrozenColumnCount="1"
                        EnableDataVirtualization="False"
                        RowHeight="40"
                        ScrollViewer.IsDeferredScrollingEnabled="True"
                        GridCopyOption="CopyData,IncludeHeaders,IncludeHiddenColumn" 
                        GridPasteOption="PasteData"
                        Loaded="MasterDataGrid_Loaded"
                        AlternatingRowStyle="{StaticResource alternatingRowStyle}" AlternationCount="2"                 
                        TableSummaryRowStyle="{StaticResource tableSummaryRowStyle}"
                        CaptionSummaryRowStyle="{StaticResource captionSummaryRowStyle}"                      
                        CaptionSummaryCellStyle="{StaticResource captionSummaryCellStyle}"
                        TableSummaryCellStyle="{StaticResource tableSummaryCellStyle}"
                        CanMaintainScrollPosition="True"
                        Style="{StaticResource sfDataGridStyle}"
                        UnBoundRowStyle="{StaticResource unBoundRowStyle}" 
                        UnBoundRowCellStyle="{StaticResource gridUnBoundRowCellStyle}"
                        
                    >
                    <syncfusion:SfDataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="{Binding ItemsView.CopyEntitiesCommand, Source={StaticResource ComputoViewKey}}" Header="{lex:Loc Copia2}" IsEnabled="{Binding ItemsView.IsAnyChecked, Source={StaticResource ComputoViewKey}}">
                                <MenuItem.Icon>
                                    <TextBlock Text="&#xe03d;" Style="{StaticResource smallTextBlockStyle}" FontSize="16" Width="16"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding ItemsView.PasteEntitiesCommand, Source={StaticResource ComputoViewKey}}" Header="{lex:Loc Incolla}" IsEnabled="{Binding ItemsView.IsAnyReadyToPaste, Source={StaticResource ComputoViewKey}}">
                                <MenuItem.Icon>
                                    <TextBlock Text="&#xe03f;" Style="{StaticResource smallTextBlockStyle}" FontSize="16" Width="16"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding ItemsView.CopyTextEntitiesCommand, Source={StaticResource ComputoViewKey}}" Header="{lex:Loc CopiaNegliAppunti}" IsEnabled="{Binding ItemsView.IsAnyChecked, Source={StaticResource ComputoViewKey}}">
                                <MenuItem.Icon>
                                    <TextBlock Text="&#xe03e;" Style="{StaticResource smallTextBlockStyle}" FontSize="16" Width="16"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </syncfusion:SfDataGrid.ContextMenu>
                    <!--SelectionUnit="{Binding SelectionUnit}"-->
                    <!--NavigationMode="Cell"-->
                    <syncfusion:SfDataGrid.Columns>



                        <syncfusion:GridTemplateColumn MappingName="Data.Icons" HeaderText="Ico" Width="30" CellStyle="{StaticResource cellNotGroupedStyle}"
                                                       AllowEditing="False" AllowGrouping="False" AllowSorting="False" AllowFiltering="False" AllowDragging="False" AllowFocus="False"
                                                       >
                            <syncfusion:GridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical" Background="{Binding Data.HighlighterColor}">
                                        <TextBlock Name="FindIcon" Style="{StaticResource smallTextBlockStyle}" Text="&#xe067;" Padding="3" Visibility="{Binding Data.IsSearched, Converter={StaticResource VisibilityConverter}}"/>
                                        <TextBlock Name="MoveIcon" Style="{StaticResource smallTextBlockStyle}" Text="&#xe032;" Padding="3" Visibility="{Binding Data.IsReadyToMove, Converter={StaticResource VisibilityConverter}}"/>
                                        <TextBlock Name="CopyIcon" Style="{StaticResource smallTextBlockStyle}" Text="&#xe03d;"  Padding="3" Visibility="{Binding Data.IsCopied, Converter={StaticResource VisibilityConverter}}"/>
                                        <TextBlock Name="MultiModifyIcon" Style="{StaticResource smallTextBlockStyle}" Text="&#xe041;" Padding="3" Visibility="{Binding Data.IsReadyToMultiModify, Converter={StaticResource VisibilityConverter}}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </syncfusion:GridTemplateColumn.CellTemplate>
                        </syncfusion:GridTemplateColumn>
                    </syncfusion:SfDataGrid.Columns>
                        
                        <!--Viene aggiunta da codice-->
                        <!--<syncfusion:SfDataGrid.TableSummaryRows >
                            <syncfusion:GridTableSummaryRow ShowSummaryInRow="False" Position="Top" >
                            </syncfusion:GridTableSummaryRow>
                        </syncfusion:SfDataGrid.TableSummaryRows>-->

                        <syncfusion:SfDataGrid.CaptionSummaryRow>
                            <syncfusion:GridSummaryRow ShowSummaryInRow="False">

                        </syncfusion:GridSummaryRow>
                        </syncfusion:SfDataGrid.CaptionSummaryRow>

                        <syncfusion:SfDataGrid.RecordContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding ItemsView.CopyEntitiesCommand, Source={StaticResource ComputoViewKey}}" Header="{lex:Loc Copia2}" IsEnabled="{Binding ItemsView.IsAnyChecked, Source={StaticResource ComputoViewKey}}">
                                    <MenuItem.Icon>
                                        <TextBlock Text="&#xe03d;" Style="{StaticResource smallTextBlockStyle}" FontSize="16" Width="16"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Command="{Binding ItemsView.PasteEntitiesCommand, Source={StaticResource ComputoViewKey}}" Header="{lex:Loc Incolla}" IsEnabled="{Binding ItemsView.IsAnyReadyToPaste, Source={StaticResource ComputoViewKey}}">
                                    <MenuItem.Icon>
                                        <TextBlock Text="&#xe03f;" Style="{StaticResource smallTextBlockStyle}" FontSize="16" Width="16"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Command="{Binding ItemsView.CopyTextEntitiesCommand, Source={StaticResource ComputoViewKey}}" Header="{lex:Loc CopiaNegliAppunti}" IsEnabled="{Binding ItemsView.IsAnyChecked, Source={StaticResource ComputoViewKey}}">
                                    <MenuItem.Icon>
                                        <TextBlock Text="&#xe03e;" Style="{StaticResource smallTextBlockStyle}" FontSize="16" Width="16"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </syncfusion:SfDataGrid.RecordContextMenu>
                        
                        <!--<syncfusion:SfDataGrid.UnBoundRows >
                            <syncfusion:GridUnBoundRow Position="Bottom" ShowBelowSummary="False" />
                            <syncfusion:GridUnBoundRow Position="Bottom" ShowBelowSummary="False"/>
                            <syncfusion:GridUnBoundRow Position="Bottom" ShowBelowSummary="False"/>
                            <syncfusion:GridUnBoundRow Position="Bottom" ShowBelowSummary="False"/>
                            <syncfusion:GridUnBoundRow Position="Bottom" ShowBelowSummary="False" />
                            <syncfusion:GridUnBoundRow Position="Bottom" ShowBelowSummary="False"/>
                            <syncfusion:GridUnBoundRow Position="Bottom" ShowBelowSummary="False"/>
                            <syncfusion:GridUnBoundRow Position="Bottom" ShowBelowSummary="False"/>
                            <syncfusion:GridUnBoundRow Position="Bottom" ShowBelowSummary="False" />
                            <syncfusion:GridUnBoundRow Position="Bottom" ShowBelowSummary="False"/>
                            <syncfusion:GridUnBoundRow Position="Bottom" ShowBelowSummary="False"/>
                            <syncfusion:GridUnBoundRow Position="Bottom" ShowBelowSummary="False"/>
                        </syncfusion:SfDataGrid.UnBoundRows>--> 
                    </syncfusion:SfDataGrid>
                    </Grid>
                </Grid>


                <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Style="{StaticResource gridSplitterStyle}" />
                <Grid Name="DetailGrid" Grid.Column="2" HorizontalAlignment="Stretch" MinWidth="200" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Style="{StaticResource menuStackPanelStyle}">
                    <Button Name="ScrollToCurrentEntity" ToolTip="{lex:Loc Vai a...}" Command="{Binding ComputoItemsView.ScrollToCurrentEntityCommand}" 
                            Style="{StaticResource menuButtonStyle}" Content="&#xe06a;"/>
                        <!--Visibility="{Binding ComputoItemsView.IsScrollToCurrentEntityEnabled, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"-->
                    <Button Name="SetAttributi" ToolTip="{lex:Loc Imposta attributi}" Click="SetAttributi_Click"
                            Style="{StaticResource menuButtonStyle}" Content="&#xe069;" IsEnabled="True"/>
                </StackPanel>
                    <ListView x:Name="DetailListView" ItemsSource="{Binding ComputoItemsView.AttributiEntities.AttributiValoriComuniView}" Margin="10" RenderTransformOrigin="0.5,0.5" Grid.Row="1"  HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="0" KeyboardNavigation.TabNavigation="Cycle" PreviewMouseLeftButtonDown="DetailListView_PreviewMouseLeftButtonDown" PreviewMouseMove="DetailListView_PreviewMouseMove" DragEnter="DetailListView_DragEnter" AllowDrop="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="False"
                              SelectedItem="{Binding ComputoItemsView.AttributiEntities.SelectedItem}">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="IsTabStop" Value="False"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid Name="DetailListViewItem" Background="Transparent">
                                    <Grid.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext.CopyAttributoSyntaxMenuItemHeader}"
							                            Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext.CopyAttributoSyntaxCommand}">
                                                <MenuItem.Icon>
                                                    <TextBlock Style="{StaticResource smallTextBlockStyle}" Text="&#xe03d;" FontSize="13"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </Grid.ContextMenu>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="3"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="20"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Name="DragRectangle" Text="{Binding Etichetta}" VerticalAlignment="Top" Grid.Column="0" Width="{Binding EtichettaWidth}">
                                        <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <!--IsHilighted-->
                                                        <DataTrigger Binding="{Binding IsHilighted}" Value="true">
                                                            <Setter Property="Background" Value="{StaticResource SelectedColor}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsHilighted}" Value="false">
                                                            <Setter Property="Background" Value="Transparent"/>
                                                        </DataTrigger>
                                                        <!--IsGuid-->
                                                        <DataTrigger Binding="{Binding IsSourceGuid}" Value="true">
                                                            <Setter Property="FontWeight" Value="Bold"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsSourceGuid}" Value="false">
                                                            <Setter Property="FontWeight" Value="Normal"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>

                                        </TextBlock>

                                    <Button x:Name="ExpandButton" Command="{Binding ExpandCommand}" Visibility="{Binding IsExpandable, Converter={StaticResource VisibilityConverter}}" Grid.Column="1" Content="{Binding Path=IsExpanded, Mode=TwoWay, Converter={StaticResource expandCollapseVerticalGlyphConverter}}" IsTabStop="False" VerticalAlignment="Top" Style="{StaticResource smallButtonStyle}" Foreground="Gray"/>
                                    </Grid>
                                <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Style="{StaticResource gridSplitterStyle}" Background="Transparent" DragCompleted="GridSplitter_DragCompleted" IsTabStop="False"/>
                                <ContentControl Name="ValoreControl" Content="{Binding ValoreView, Mode=OneWay}" Grid.Column="2" ContentTemplateSelector="{StaticResource ValoreAttributoTemplateSelector}"  Visibility="{Binding IsValoreViewVisible, Mode=TwoWay, Converter={StaticResource VisibilityConverter}}" VerticalAlignment="Top" TabIndex="{Binding TabIndex}" IsTabStop="False" Height="{Binding Height}" Padding="0"/>
                                </Grid>
                        </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.ContainerStyle>
                                    <Style TargetType="{x:Type GroupItem}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Expander IsExpanded="{Binding Items[0].IsGroupExpanded}" Style="{StaticResource expanderStyle}">
                                                        <Expander.Header>
                                                            <StackPanel Orientation="Horizontal">
                                                                <TextBlock Text="{Binding Name}" FontWeight="Bold" Foreground="Gray" FontSize="16" />
                                                            </StackPanel>
                                                        </Expander.Header>
                                                        <ItemsPresenter />
                                                    </Expander>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </GroupStyle.ContainerStyle>
                            </GroupStyle>
                        </ListView.GroupStyle>
                    </ListView>
   
                    
                </Grid>
            </Grid>
            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Style="{StaticResource gridSplitterStyle}"/>
            <Border Grid.Column="2" BorderBrush="LightGray" BorderThickness="1">
                <Grid Name="RightSplitGrid" HorizontalAlignment="Stretch">
                    <Grid Style="{StaticResource rightSplitGridStyle}" Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <ContentControl Name="RightSplitPaneControl" Content="{Binding RightPanesView.CurrentControlView, Mode=TwoWay}" 
                                    Visibility="{Binding RightPanesView.IsPaneOpen, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"
                                    ContentTemplateSelector="{StaticResource RightSplitPaneTemplateSelector}"  Grid.Column="0"  AllowDrop="True"
                                    Drop="RightSplitPaneControl_Drop" 
                                    PreviewMouseLeftButtonDown="RightSplitPaneControl_PreviewMouseLeftButtonDown"
                                    PreviewMouseMove="RightSplitPaneControl_PreviewMouseMove"
                                    Width="150">
                    </ContentControl>
                    <Grid Grid.Column="1" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="OpenPanel" IsChecked="{Binding RightPanesView.IsPaneOpen, Mode=TwoWay}" Width="50" HorizontalAlignment="Left" VerticalAlignment="Stretch" ToolTipService.ToolTip="{lex:Loc Espandi/Collassa}" AllowDrop="True" Grid.Row="0" Margin="0"
                                  Style="{StaticResource menuToggleButtonStyle}" Content="{Binding Path=RightPanesView.IsPaneOpen, Mode=TwoWay, Converter={StaticResource expandCollapseHorizontalGlyphConverter}}"/>
                        <Grid Grid.Row="1" >
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="FilterToggleButton" IsChecked="{Binding RightPanesView.IsFilterPaneOpen, Mode=TwoWay}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalContentAlignment="Center" ToolTipService.ToolTip="{lex:Loc Trova/Filtra}" AllowDrop="True" Grid.Row="0"
                                          Margin="0" Style="{StaticResource filterToggleButtonStyle}" BorderThickness="0,1,0,0" BorderBrush="Gray"
                                          Drop="FilterToggleButton_Drop">
                                <StackPanel Orientation="Vertical" FlowDirection="LeftToRight">
                                    <TextBlock Style="{StaticResource smallTextBlockStyle}" Text="&#xe07f;" FontSize="20" HorizontalAlignment="Center" />
                                    <TextBlock Text="{Binding RightPanesView.FilterView.ItemsCount}" FontSize="12" HorizontalAlignment="Center" Visibility="{Binding RightPanesView.FilterView.IsItemsCountVisible, Converter={StaticResource VisibilityConverter}}"/>
                                </StackPanel>
                            </ToggleButton>
                            <ToggleButton x:Name="SortToggleButton" IsChecked="{Binding RightPanesView.IsSortPaneOpen, Mode=TwoWay}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalContentAlignment="Center" ToolTipService.ToolTip="{lex:Loc Ordina}" Grid.Row="1" AllowDrop="True"
                                          Margin="0" Style="{StaticResource sortToggleButtonStyle}" BorderThickness="0,1,0,0" BorderBrush="Gray"
                                          Drop="SortToggleButton_Drop">
                                <StackPanel Orientation="Vertical" FlowDirection="LeftToRight">
                                    <TextBlock Style="{StaticResource smallTextBlockStyle}" Text="&#xe066;" FontSize="20" HorizontalAlignment="Center" />
                                    <TextBlock Text="{Binding RightPanesView.SortView.ItemsCount}" FontSize="12" HorizontalAlignment="Center" Visibility="{Binding RightPanesView.SortView.IsItemsCountVisible, Converter={StaticResource VisibilityConverter}}"/>
                                </StackPanel>
                            </ToggleButton>
                            <ToggleButton x:Name="GroupToggleButton" IsChecked="{Binding RightPanesView.IsGroupPaneOpen, Mode=TwoWay}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalContentAlignment="Center" ToolTipService.ToolTip="{lex:Loc Raggruppa}" Grid.Row="2" AllowDrop="True"
                                          Margin="0" Style="{StaticResource groupToggleButtonStyle}" BorderThickness="0,1,0,0" BorderBrush="Gray"
                                          Drop="GroupToggleButton_Drop">
                                <StackPanel Orientation="Vertical" FlowDirection="LeftToRight">
                                    <TextBlock Style="{StaticResource smallTextBlockStyle}" Text="&#xe068;" FontSize="20" HorizontalAlignment="Center" />
                                    <TextBlock Text="{Binding RightPanesView.GroupView.ItemsCount}" FontSize="12" HorizontalAlignment="Center" Visibility="{Binding RightPanesView.GroupView.IsItemsCountVisible, Converter={StaticResource VisibilityConverter}}" />
                                </StackPanel>
                            </ToggleButton>
                            <Rectangle HorizontalAlignment="Right" Width="50" VerticalAlignment="Stretch" Grid.Row="3"/>
                        </Grid>
                    </Grid>

                </Grid>
            </Grid>
            </Border>

    </Grid>
</UserControl>














