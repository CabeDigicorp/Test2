# events {}
# 
# http {
#     include mime.types;
# 
#     types {
#       application/wasm;
#     }
# 
#     server {
#         listen 5101;
#         index index.html;
# 
#         location / {
#             root /usr/share/nginx/html;
#             try_files $uri $uri/ /index.html =404;
#         }
#     }
# }

events {}

http {
    include /etc/nginx/mime.types;

    gzip_types text/plain text/xml text/css
               text/comma-separated-values
               text/javascript application/x-javascript
               application/atom+xml;

    types {
      application/wasm;
    }

    server {
        listen 5101 ssl;
        listen 403 ssl;
        listen [::]:5101 ssl;
        listen [::]:403 ssl;

        http2  on;
        server_name             joincloud.digicorp.it;
        #ssl_certificate         /usr/local/share/ca-certificates/nginx-selfsigned.crt;
        #ssl_certificate_key     /usr/local/share/ca-certificates/nginx-selfsigned.key;        
        
        ssl_certificate         /usr/local/share/ca-certificates/certificate.pem;
        ssl_certificate_key     /usr/local/share/ca-certificates/star.digicorp.it.key;

        index index.html;
        client_max_body_size 512M;
        access_log              /var/log/nginx/nginx_access.log;
        error_log               /var/log/nginx/nginx_error.log;

        location / {

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PATCH, OPTIONS, PUT, DELETE, HEAD';
                add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PATCH,  PUT, DELETE, HEAD';
            add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Max-Age' '1728000';

            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https; # nel caso di http usare $scheme
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # location /authentication/ {
        #     proxy_set_header X-Forwarded-Host $host:$server_port;
        #     proxy_set_header X-Forwarded-Server $host;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_pass https://joinwebui:5101;
        #     proxy_pass https://digicorp-joinweb.eu.auth0.com;
        #     proxy_http_version 1.1;
        #     proxy_pass_request_headers on;
        #     proxy_redirect off;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header auth0-forwarded-for $proxy_add_x_forwarded_for;
        #     proxy_set_header Connection "upgrade";
        # }
    }

    server {
        listen 80;
        listen [::]:80;
        server_name             joincloud.digicorp.it:80;

        access_log              /var/log/nginx/nginx_access.log;
        error_log               /var/log/nginx/nginx_error.log;

        #location /.well-known/acme-challenge/ {
        #    try_files $uri /index.html;
        #}
        location /.well-known/acme-challenge/
        {
            root /usr/share/nginx/html;
            try_files $uri /.well-known/$uri;
        }
    }
}

# typically 1 per core
# determine cores 
# --- linux: grep processor /proc/cpuinfo | wc -l
# --- mac:  sysctl -n hw.ncpu
# worker_processes 1;
# 
# error_log  /var/log/nginx/error.log  info;
# 
# events { 
#     # check limit
#     # --- mac/linux: ulimit -n
#     worker_connections 1024; 
# }
# 
# http {
# 
#     sendfile on;
#     proxy_buffer_size   128k;
#     proxy_buffers   4 256k;
#     proxy_busy_buffers_size   256k;
#     large_client_header_buffers 4 16k; 
# 
#     upstream app_servers {
#         # this must be the same name as the docker container name
#         # it's how it maps to the service
#         # you can actually add more than one here if you want to
#         # unless its in ECS then it's localhost
#         server joinapi:5000;      
#     }
# 
#     server {
#         listen 80;
#         index index.html;
#         server_name $hostname;
#         client_max_body_size 10M;                   # upload size
# 
#         # root handle blazor spa app
#         location / {
#           
#           # location of the app (html files) in the container
#           # this is defined in the Dockerfile for the spa app
#           # or in the local file system if you have it published here
#           root /usr/share/nginx/html;
#           try_files $uri $uri/ /index.html =404;
# 
#           include /etc/nginx/mime.types;
#           types {
#             application/wasm wasm;
#           }
#           default_type application/octet-stream;
# 
#           # allow for gziped items in the framework path
#           location /_framework/ {
#             gzip_static on;
#           }
# 
#           # cache buster
#           add_header Last-Modified __CACHE_BUSTER_EXPIRE_DATE_TIME; # this should be replaced by a shell script
#           add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
#           if_modified_since off;
#           expires off;
#           etag off;
# 
#         }
# 
#         # handle api requests which is in a different docker container
#         location /api {
#             proxy_pass         http://app_servers;  # references the upstream app_servers above
#             proxy_redirect     off;           
#             proxy_set_header   Connection keep-alive;
#             proxy_set_header   Host $host;
#             proxy_set_header   X-Real-IP $remote_addr;
#             proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;            
#             proxy_set_header   X-Forwarded-Host $server_name;
#             proxy_set_header   X-NginX-Proxy true;
#             
#             
#         }
#     }
# }