/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/examples/jsm/lines/Wireframe.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{InstancedInterleavedBuffer,InterleavedBufferAttribute,Mesh,Vector3,Vector4}from"three";import{LineSegmentsGeometry}from"../lines/LineSegmentsGeometry.js";import{LineMaterial}from"../lines/LineMaterial.js";const _start=new Vector3,_end=new Vector3,_viewport=new Vector4;class Wireframe extends Mesh{constructor(e=new LineSegmentsGeometry,t=new LineMaterial({color:16777215*Math.random()})){super(e,t),this.isWireframe=!0,this.type="Wireframe"}computeLineDistances(){const e=this.geometry,t=e.attributes.instanceStart,r=e.attributes.instanceEnd,n=new Float32Array(2*t.count);for(let e=0,i=0,s=t.count;e<s;e++,i+=2)_start.fromBufferAttribute(t,e),_end.fromBufferAttribute(r,e),n[i]=0===i?0:n[i-1],n[i+1]=n[i]+_start.distanceTo(_end);const i=new InstancedInterleavedBuffer(n,2,1);return e.setAttribute("instanceDistanceStart",new InterleavedBufferAttribute(i,1,0)),e.setAttribute("instanceDistanceEnd",new InterleavedBufferAttribute(i,1,1)),this}onBeforeRender(e){const t=this.material.uniforms;t&&t.resolution&&(e.getViewport(_viewport),this.material.uniforms.resolution.value.set(_viewport.z,_viewport.w))}}export{Wireframe};
//# sourceMappingURL=/sm/6d6a6be9ee1fb23085f6eca5131935142c18376bcf74d698ef94a2c6abfb792a.map