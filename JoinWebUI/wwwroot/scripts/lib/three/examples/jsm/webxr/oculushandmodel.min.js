/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/examples/jsm/webxr/OculusHandModel.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Object3D,Sphere,Box3}from"three";import{XRHandMeshModel}from"./XRHandMeshModel.js";const TOUCH_RADIUS=.01,POINTING_JOINT="index-finger-tip";class OculusHandModel extends Object3D{constructor(t,e=null,o=null){super(),this.controller=t,this.motionController=null,this.envMap=null,this.loader=e,this.onLoad=o,this.mesh=null,t.addEventListener("connected",(e=>{const o=e.data;o.hand&&!this.motionController&&(this.xrInputSource=o,this.motionController=new XRHandMeshModel(this,t,this.path,o.handedness,this.loader,this.onLoad))})),t.addEventListener("disconnected",(()=>{this.clear(),this.motionController=null}))}updateMatrixWorld(t){super.updateMatrixWorld(t),this.motionController&&this.motionController.updateMesh()}getPointerPosition(){const t=this.controller.joints[POINTING_JOINT];return t?t.position:null}intersectBoxObject(t){const e=this.getPointerPosition();if(e){const o=new Sphere(e,.01),n=(new Box3).setFromObject(t);return o.intersectsBox(n)}return!1}checkButton(t){this.intersectBoxObject(t)?t.onPress():t.onClear(),t.isPressed()&&t.whilePressed()}}export{OculusHandModel};
//# sourceMappingURL=/sm/a23d8ffdf3799d77eeb58e5a3c01473623b1e5cbf2cd2d1991f2d753b2f7d025.map