/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/examples/jsm/exporters/PLYExporter.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Matrix3,Vector3,Color,ColorManagement,SRGBColorSpace}from"three";class PLYExporter{parse(t,e,n={}){function r(e){t.traverse((function(t){if(!0===t.isMesh||t.isPoints){const n=t,r=n.geometry;!0===r.hasAttribute("position")&&e(n,r)}}))}const o=(n=Object.assign({binary:!1,excludeAttributes:[],littleEndian:!1},n)).excludeAttributes;let i=!0,l=!1,a=!1,u=!1,s=0,f=0;t.traverse((function(t){if(!0===t.isMesh){const e=t.geometry,n=e.getAttribute("position"),r=e.getAttribute("normal"),o=e.getAttribute("uv"),i=e.getAttribute("color"),c=e.getIndex();if(void 0===n)return;s+=n.count,f+=c?c.count/3:n.count/3,void 0!==r&&(l=!0),void 0!==o&&(u=!0),void 0!==i&&(a=!0)}else if(t.isPoints){const e=t.geometry,n=e.getAttribute("position"),r=e.getAttribute("normal"),o=e.getAttribute("color");s+=n.count,void 0!==r&&(l=!0),void 0!==o&&(a=!0),i=!1}}));const c=new Color;if(i=i&&-1===o.indexOf("index"),l=l&&-1===o.indexOf("normal"),a=a&&-1===o.indexOf("color"),u=u&&-1===o.indexOf("uv"),i&&f!==Math.floor(f))return console.error("PLYExporter: Failed to generate a valid PLY file with triangle indices because the number of indices is not divisible by 3."),null;let d=`ply\nformat ${n.binary?n.littleEndian?"binary_little_endian":"binary_big_endian":"ascii"} 1.0\nelement vertex ${s}\nproperty float x\nproperty float y\nproperty float z\n`;!0===l&&(d+="property float nx\nproperty float ny\nproperty float nz\n"),!0===u&&(d+="property float s\nproperty float t\n"),!0===a&&(d+="property uchar red\nproperty uchar green\nproperty uchar blue\n"),!0===i&&(d+=`element face ${f}\nproperty list uchar int vertex_index\n`),d+="end_header\n";const p=new Vector3,g=new Matrix3;let b=null;if(!0===n.binary){const t=(new TextEncoder).encode(d),e=s*(12+(l?12:0)+(a?3:0)+(u?8:0)),o=i?13*f:0,x=new DataView(new ArrayBuffer(t.length+e+o));new Uint8Array(x.buffer).set(t,0);let m=t.length,y=t.length+e,A=0;r((function(t,e){const r=e.getAttribute("position"),o=e.getAttribute("normal"),s=e.getAttribute("uv"),f=e.getAttribute("color"),d=e.getIndex();g.getNormalMatrix(t.matrixWorld);for(let e=0,i=r.count;e<i;e++)p.fromBufferAttribute(r,e),p.applyMatrix4(t.matrixWorld),x.setFloat32(m,p.x,n.littleEndian),m+=4,x.setFloat32(m,p.y,n.littleEndian),m+=4,x.setFloat32(m,p.z,n.littleEndian),m+=4,!0===l&&(null!=o?(p.fromBufferAttribute(o,e),p.applyMatrix3(g).normalize(),x.setFloat32(m,p.x,n.littleEndian),m+=4,x.setFloat32(m,p.y,n.littleEndian),m+=4,x.setFloat32(m,p.z,n.littleEndian),m+=4):(x.setFloat32(m,0,n.littleEndian),m+=4,x.setFloat32(m,0,n.littleEndian),m+=4,x.setFloat32(m,0,n.littleEndian),m+=4)),!0===u&&(null!=s?(x.setFloat32(m,s.getX(e),n.littleEndian),m+=4,x.setFloat32(m,s.getY(e),n.littleEndian),m+=4):(x.setFloat32(m,0,n.littleEndian),m+=4,x.setFloat32(m,0,n.littleEndian),m+=4)),!0===a&&(null!=f?(c.fromBufferAttribute(f,e),ColorManagement.fromWorkingColorSpace(c,SRGBColorSpace),x.setUint8(m,Math.floor(255*c.r)),m+=1,x.setUint8(m,Math.floor(255*c.g)),m+=1,x.setUint8(m,Math.floor(255*c.b)),m+=1):(x.setUint8(m,255),m+=1,x.setUint8(m,255),m+=1,x.setUint8(m,255),m+=1));if(!0===i)if(null!==d)for(let t=0,e=d.count;t<e;t+=3)x.setUint8(y,3),y+=1,x.setUint32(y,d.getX(t+0)+A,n.littleEndian),y+=4,x.setUint32(y,d.getX(t+1)+A,n.littleEndian),y+=4,x.setUint32(y,d.getX(t+2)+A,n.littleEndian),y+=4;else for(let t=0,e=r.count;t<e;t+=3)x.setUint8(y,3),y+=1,x.setUint32(y,A+t,n.littleEndian),y+=4,x.setUint32(y,A+t+1,n.littleEndian),y+=4,x.setUint32(y,A+t+2,n.littleEndian),y+=4;A+=r.count})),b=x.buffer}else{let t=0,e="",n="";r((function(r,o){const s=o.getAttribute("position"),d=o.getAttribute("normal"),b=o.getAttribute("uv"),x=o.getAttribute("color"),m=o.getIndex();g.getNormalMatrix(r.matrixWorld);for(let t=0,n=s.count;t<n;t++){p.fromBufferAttribute(s,t),p.applyMatrix4(r.matrixWorld);let n=p.x+" "+p.y+" "+p.z;!0===l&&(null!=d?(p.fromBufferAttribute(d,t),p.applyMatrix3(g).normalize(),n+=" "+p.x+" "+p.y+" "+p.z):n+=" 0 0 0"),!0===u&&(n+=null!=b?" "+b.getX(t)+" "+b.getY(t):" 0 0"),!0===a&&(null!=x?(c.fromBufferAttribute(x,t),ColorManagement.fromWorkingColorSpace(c,SRGBColorSpace),n+=" "+Math.floor(255*c.r)+" "+Math.floor(255*c.g)+" "+Math.floor(255*c.b)):n+=" 255 255 255"),e+=n+"\n"}if(!0===i){if(null!==m)for(let e=0,r=m.count;e<r;e+=3)n+=`3 ${m.getX(e+0)+t}`,n+=` ${m.getX(e+1)+t}`,n+=` ${m.getX(e+2)+t}\n`;else for(let e=0,r=s.count;e<r;e+=3)n+=`3 ${t+e} ${t+e+1} ${t+e+2}\n`;f+=m?m.count/3:s.count/3}t+=s.count})),b=`${d}${e}${i?`${n}\n`:"\n"}`}return"function"==typeof e&&requestAnimationFrame((()=>e(b))),b}}export{PLYExporter};
//# sourceMappingURL=/sm/123cfa514fb68fdc664a99ef5a331da82698d159f764e8d60aa705ab684acc07.map