/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/examples/jsm/loaders/HDRCubeTextureLoader.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{CubeTexture,DataTexture,FileLoader,FloatType,HalfFloatType,LinearFilter,LinearSRGBColorSpace,Loader}from"three";import{RGBELoader}from"../loaders/RGBELoader.js";class HDRCubeTextureLoader extends Loader{constructor(e){super(e),this.hdrLoader=new RGBELoader,this.type=HalfFloatType}load(e,t,a,r){const o=new CubeTexture;switch(o.type=this.type,o.type){case FloatType:case HalfFloatType:o.colorSpace=LinearSRGBColorSpace,o.minFilter=LinearFilter,o.magFilter=LinearFilter,o.generateMipmaps=!1}const i=this;let s=0;function p(t,a,r,p){new FileLoader(i.manager).setPath(i.path).setResponseType("arraybuffer").setWithCredentials(i.withCredentials).load(e[t],(function(e){s++;const r=i.hdrLoader.parse(e);if(r){if(void 0!==r.data){const e=new DataTexture(r.data,r.width,r.height);e.type=o.type,e.colorSpace=o.colorSpace,e.format=o.format,e.minFilter=o.minFilter,e.magFilter=o.magFilter,e.generateMipmaps=o.generateMipmaps,o.images[t]=e}6===s&&(o.needsUpdate=!0,a&&a(o))}}),r,p)}for(let o=0;o<e.length;o++)p(o,t,a,r);return o}setDataType(e){return this.type=e,this.hdrLoader.setDataType(e),this}}export{HDRCubeTextureLoader};
//# sourceMappingURL=/sm/7d1d58ffe78e6b61a133efa8a38893a27c36b1cda15170c41e1ab7ab338e019f.map