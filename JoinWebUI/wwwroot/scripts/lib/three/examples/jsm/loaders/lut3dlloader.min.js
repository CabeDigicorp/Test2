/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/examples/jsm/loaders/LUT3dlLoader.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{ClampToEdgeWrapping,Data3DTexture,FileLoader,FloatType,LinearFilter,Loader,RGBAFormat,UnsignedByteType}from"three";export class LUT3dlLoader extends Loader{constructor(e){super(e),this.type=UnsignedByteType}setType(e){if(e!==UnsignedByteType&&e!==FloatType)throw new Error("LUT3dlLoader: Unsupported type");return this.type=e,this}load(e,t,r,a){const n=new FileLoader(this.manager);n.setPath(this.path),n.setResponseType("text"),n.load(e,(r=>{try{t(this.parse(r))}catch(t){a?a(t):console.error(t),this.manager.itemError(e)}}),r,a)}parse(e){const t=/^([\d.e+-]+) +([\d.e+-]+) +([\d.e+-]+) *$/gm;let r=/^[\d ]+$/m.exec(e);if(null===r)throw new Error("LUT3dlLoader: Missing grid information");const a=r[0].trim().split(/\s+/g).map(Number),n=a[1]-a[0],o=a.length,i=o**2;for(let e=1,t=a.length;e<t;++e)if(n!==a[e]-a[e-1])throw new Error("LUT3dlLoader: Inconsistent grid size");const s=new Float32Array(o**3*4);let p=0,l=0;for(;null!==(r=t.exec(e));){const e=Number(r[1]),t=Number(r[2]),a=Number(r[3]);p=Math.max(p,e,t,a);const n=4*(l%o*i+Math.floor(l/o)%o*o+Math.floor(l/i)%o);s[n+0]=e,s[n+1]=t,s[n+2]=a,++l}const d=Math.ceil(Math.log2(p)),g=Math.pow(2,d),h=this.type===UnsignedByteType?new Uint8Array(s.length):s,m=this.type===UnsignedByteType?255:1;for(let e=0,t=h.length;e<t;e+=4){const t=e+1,r=e+2,a=e+3;h[e]=s[e]/g*m,h[t]=s[t]/g*m,h[r]=s[r]/g*m,h[a]=m}const y=new Data3DTexture;return y.image.data=h,y.image.width=o,y.image.height=o,y.image.depth=o,y.format=RGBAFormat,y.type=this.type,y.magFilter=LinearFilter,y.minFilter=LinearFilter,y.wrapS=ClampToEdgeWrapping,y.wrapT=ClampToEdgeWrapping,y.wrapR=ClampToEdgeWrapping,y.generateMipmaps=!1,y.needsUpdate=!0,{size:o,texture3D:y}}}
//# sourceMappingURL=/sm/7756e8052329fd5ff6af2bdb4b8d9ce1f36e30fff14c40dca41647fcace16c59.map