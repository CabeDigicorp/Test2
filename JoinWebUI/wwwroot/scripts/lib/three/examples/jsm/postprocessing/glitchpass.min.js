/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/examples/jsm/postprocessing/GlitchPass.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{DataTexture,FloatType,MathUtils,RedFormat,ShaderMaterial,UniformsUtils}from"three";import{Pass,FullScreenQuad}from"./Pass.js";import{DigitalGlitch}from"../shaders/DigitalGlitch.js";class GlitchPass extends Pass{constructor(t=64){super();const s=DigitalGlitch;this.uniforms=UniformsUtils.clone(s.uniforms),this.heightMap=this.generateHeightmap(t),this.uniforms.tDisp.value=this.heightMap,this.material=new ShaderMaterial({uniforms:this.uniforms,vertexShader:s.vertexShader,fragmentShader:s.fragmentShader}),this.fsQuad=new FullScreenQuad(this.material),this.goWild=!1,this.curF=0,this.generateTrigger()}render(t,s,a){this.uniforms.tDiffuse.value=a.texture,this.uniforms.seed.value=Math.random(),this.uniforms.byp.value=0,this.curF%this.randX==0||1==this.goWild?(this.uniforms.amount.value=Math.random()/30,this.uniforms.angle.value=MathUtils.randFloat(-Math.PI,Math.PI),this.uniforms.seed_x.value=MathUtils.randFloat(-1,1),this.uniforms.seed_y.value=MathUtils.randFloat(-1,1),this.uniforms.distortion_x.value=MathUtils.randFloat(0,1),this.uniforms.distortion_y.value=MathUtils.randFloat(0,1),this.curF=0,this.generateTrigger()):this.curF%this.randX<this.randX/5?(this.uniforms.amount.value=Math.random()/90,this.uniforms.angle.value=MathUtils.randFloat(-Math.PI,Math.PI),this.uniforms.distortion_x.value=MathUtils.randFloat(0,1),this.uniforms.distortion_y.value=MathUtils.randFloat(0,1),this.uniforms.seed_x.value=MathUtils.randFloat(-.3,.3),this.uniforms.seed_y.value=MathUtils.randFloat(-.3,.3)):0==this.goWild&&(this.uniforms.byp.value=1),this.curF++,this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(s),this.clear&&t.clear(),this.fsQuad.render(t))}generateTrigger(){this.randX=MathUtils.randInt(120,240)}generateHeightmap(t){const s=new Float32Array(t*t),a=t*t;for(let t=0;t<a;t++){const a=MathUtils.randFloat(0,1);s[t]=a}const i=new DataTexture(s,t,t,RedFormat,FloatType);return i.needsUpdate=!0,i}dispose(){this.material.dispose(),this.heightMap.dispose(),this.fsQuad.dispose()}}export{GlitchPass};
//# sourceMappingURL=/sm/b656f8a065679e905de1ea2c5836a7bfa425f4b953d8060404fa775c82dd17b0.map