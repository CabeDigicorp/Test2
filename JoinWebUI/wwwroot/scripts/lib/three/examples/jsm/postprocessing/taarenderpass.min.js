/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/examples/jsm/postprocessing/TAARenderPass.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{HalfFloatType,WebGLRenderTarget}from"three";import{SSAARenderPass}from"./SSAARenderPass.js";class TAARenderPass extends SSAARenderPass{constructor(e,t,r,s){super(e,t,r,s),this.sampleLevel=0,this.accumulate=!1,this.accumulateIndex=-1}render(e,t,r,s){if(!1===this.accumulate)return super.render(e,t,r,s),void(this.accumulateIndex=-1);const a=_JitterVectors[5];void 0===this.sampleRenderTarget&&(this.sampleRenderTarget=new WebGLRenderTarget(r.width,r.height,{type:HalfFloatType}),this.sampleRenderTarget.texture.name="TAARenderPass.sample"),void 0===this.holdRenderTarget&&(this.holdRenderTarget=new WebGLRenderTarget(r.width,r.height,{type:HalfFloatType}),this.holdRenderTarget.texture.name="TAARenderPass.hold"),-1===this.accumulateIndex&&(super.render(e,this.holdRenderTarget,r,s),this.accumulateIndex=0);const i=e.autoClear;e.autoClear=!1,e.getClearColor(this._oldClearColor);const l=e.getClearAlpha(),h=1/a.length;if(this.accumulateIndex>=0&&this.accumulateIndex<a.length){this.copyUniforms.opacity.value=h,this.copyUniforms.tDiffuse.value=t.texture;const s=Math.pow(2,this.sampleLevel);for(let i=0;i<s;i++){const s=a[this.accumulateIndex];if(this.camera.setViewOffset&&this.camera.setViewOffset(r.width,r.height,.0625*s[0],.0625*s[1],r.width,r.height),e.setRenderTarget(t),e.setClearColor(this.clearColor,this.clearAlpha),e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(this.sampleRenderTarget),0===this.accumulateIndex&&(e.setClearColor(0,0),e.clear()),this.fsQuad.render(e),this.accumulateIndex++,this.accumulateIndex>=a.length)break}this.camera.clearViewOffset&&this.camera.clearViewOffset()}e.setClearColor(this.clearColor,this.clearAlpha);const o=this.accumulateIndex*h;o>0&&(this.copyUniforms.opacity.value=1,this.copyUniforms.tDiffuse.value=this.sampleRenderTarget.texture,e.setRenderTarget(t),e.clear(),this.fsQuad.render(e)),o<1&&(this.copyUniforms.opacity.value=1-o,this.copyUniforms.tDiffuse.value=this.holdRenderTarget.texture,e.setRenderTarget(t),this.fsQuad.render(e)),e.autoClear=i,e.setClearColor(this._oldClearColor,l)}dispose(){super.dispose(),this.holdRenderTarget&&this.holdRenderTarget.dispose()}}const _JitterVectors=[[[0,0]],[[4,4],[-4,-4]],[[-2,-6],[6,-2],[-6,2],[2,6]],[[1,-3],[-1,3],[5,1],[-3,-5],[-5,5],[-7,-1],[3,7],[7,-7]],[[1,1],[-1,-3],[-3,2],[4,-1],[-5,-2],[2,5],[5,3],[3,-5],[-2,6],[0,-7],[-4,-6],[-6,4],[-8,0],[7,-4],[6,7],[-7,-8]],[[-4,-7],[-7,-5],[-3,-5],[-5,-4],[-1,-4],[-2,-2],[-6,-1],[-4,0],[-7,1],[-1,2],[-6,3],[-3,3],[-7,6],[-3,6],[-5,7],[-1,7],[5,-7],[1,-6],[6,-5],[4,-4],[2,-3],[7,-2],[1,-1],[4,-1],[2,1],[6,2],[0,4],[4,4],[2,5],[7,5],[5,6],[3,7]]];export{TAARenderPass};
//# sourceMappingURL=/sm/d0d83f27e8190368c30501f28fd02e06c85af4ef5fe5fb78337a4651c9ab0b5a.map