/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/examples/jsm/tsl/display/TRAAPassNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Color,Vector2,PostProcessingUtils,NearestFilter,Matrix4}from"three";import{add,float,If,Loop,int,Fn,min,max,clamp,nodeObject,PassNode,QuadMesh,texture,NodeMaterial,uniform,uv,vec2,vec4,luminance}from"three/tsl";const _quadMesh=new QuadMesh,_size=new Vector2;let _rendererState;class TRAAPassNode extends PassNode{static get type(){return"TRAAPassNode"}constructor(e,t){super(PassNode.COLOR,e,t),this.isTRAAPassNode=!0,this.clearColor=new Color(0),this.clearAlpha=0,this._jitterIndex=0,this._originalProjectionMatrix=new Matrix4,this._invSize=uniform(new Vector2),this._sampleRenderTarget=null,this._historyRenderTarget=null,this._resolveMaterial=new NodeMaterial,this._resolveMaterial.name="TRAA.Resolve"}setSize(e,t){super.setSize(e,t);let r=!1;return this.renderTarget.width===this._sampleRenderTarget.width&&this.renderTarget.height===this._sampleRenderTarget.height||(this._sampleRenderTarget.setSize(this.renderTarget.width,this.renderTarget.height),this._historyRenderTarget.setSize(this.renderTarget.width,this.renderTarget.height),this._invSize.value.set(1/this.renderTarget.width,1/this.renderTarget.height),r=!0),r}updateBefore(e){const{renderer:t}=e,{scene:r,camera:s}=this;_rendererState=PostProcessingUtils.resetRendererAndSceneState(t,r,_rendererState),this._pixelRatio=t.getPixelRatio();const i=t.getSize(_size),a=this.setSize(i.width,i.height);s.updateProjectionMatrix(),this._originalProjectionMatrix.copy(s.projectionMatrix),this._cameraNear.value=s.near,this._cameraFar.value=s.far;const n={fullWidth:this.renderTarget.width,fullHeight:this.renderTarget.height,offsetX:0,offsetY:0,width:this.renderTarget.width,height:this.renderTarget.height},o=Object.assign({},s.view);o.enabled&&Object.assign(n,o);const d=_JitterVectors[this._jitterIndex];s.setViewOffset(n.fullWidth,n.fullHeight,n.offsetX+.0625*d[0],n.offsetY+.0625*d[1],n.width,n.height);const h=this.getMRT(),l=h.get("velocity");if(void 0===l)throw new Error("THREE:TRAAPassNode: Missing velocity output in MRT configuration.");l.setProjectionMatrix(this._originalProjectionMatrix),t.setMRT(h),t.setClearColor(this.clearColor,this.clearAlpha),t.setRenderTarget(this._sampleRenderTarget),t.render(r,s),t.setRenderTarget(null),t.setMRT(null),!0===a?(t.setRenderTarget(this._historyRenderTarget),t.clear(),t.setRenderTarget(this.renderTarget),t.clear(),t.setRenderTarget(null),t.copyTextureToTexture(this._sampleRenderTarget.texture,this._historyRenderTarget.texture),t.copyTextureToTexture(this._sampleRenderTarget.texture,this.renderTarget.texture)):(t.setRenderTarget(this.renderTarget),_quadMesh.material=this._resolveMaterial,_quadMesh.render(t),t.setRenderTarget(null),t.copyTextureToTexture(this.renderTarget.texture,this._historyRenderTarget.texture)),t.copyTextureToTexture(this._sampleRenderTarget.depthTexture,this.renderTarget.depthTexture),this._jitterIndex++,this._jitterIndex=this._jitterIndex%(_JitterVectors.length-1),o.enabled?s.setViewOffset(o.fullWidth,o.fullHeight,o.offsetX,o.offsetY,o.width,o.height):s.clearViewOffset(),l.setProjectionMatrix(null),PostProcessingUtils.restoreRendererAndSceneState(t,r,_rendererState)}setup(e){if(null===this._sampleRenderTarget){this._sampleRenderTarget=this.renderTarget.clone(),this._historyRenderTarget=this.renderTarget.clone(),this._sampleRenderTarget.texture.minFiler=NearestFilter,this._sampleRenderTarget.texture.magFilter=NearestFilter;const e=this._sampleRenderTarget.texture.clone();e.isRenderTargetTexture=!0,e.name="velocity",this._sampleRenderTarget.textures.push(e)}const t=texture(this._historyRenderTarget.texture),r=texture(this._sampleRenderTarget.textures[0]),s=texture(this._sampleRenderTarget.textures[1]),i=texture(this._sampleRenderTarget.depthTexture),a=Fn((()=>{const e=uv(),a=vec4(1e4).toVar(),n=vec4(-1e4).toVar(),o=float(1).toVar(),d=vec2(0).toVar();Loop({start:int(-1),end:int(1),type:"int",condition:"<=",name:"x"},(({x:t})=>{Loop({start:int(-1),end:int(1),type:"int",condition:"<=",name:"y"},(({y:s})=>{const h=e.add(vec2(float(t),float(s)).mul(this._invSize)).toVar(),l=max(vec4(0),r.uv(h)).toVar();a.assign(min(a,l)),n.assign(max(n,l));const g=i.uv(h).r.toVar();If(g.lessThan(o),(()=>{o.assign(g),d.assign(h)}))}))}));const h=s.uv(d).xy.mul(vec2(.5,-.5)),l=r.uv(e),g=t.uv(e.sub(h)),u=clamp(g,a,n),T=float(.05).toVar(),c=T.oneMinus().toVar(),x=l.mul(float(1).div(max(max(l.r,l.g),l.b).add(1))),m=u.mul(float(1).div(max(max(u.r,u.g),u.b).add(1))),p=luminance(x.rgb),_=luminance(m.rgb);return T.mulAssign(float(1).div(p.add(1))),c.mulAssign(float(1).div(_.add(1))),add(l.mul(T),u.mul(c)).div(max(T.add(c),1e-5))}));return this._resolveMaterial.fragmentNode=a(),super.setup(e)}dispose(){super.dispose(),null!==this._sampleRenderTarget&&(this._sampleRenderTarget.dispose(),this._historyRenderTarget.dispose()),this._resolveMaterial.dispose()}}export default TRAAPassNode;const _JitterVectors=[[-4,-7],[-7,-5],[-3,-5],[-5,-4],[-1,-4],[-2,-2],[-6,-1],[-4,0],[-7,1],[-1,2],[-6,3],[-3,3],[-7,6],[-3,6],[-5,7],[-1,7],[5,-7],[1,-6],[6,-5],[4,-4],[2,-3],[7,-2],[1,-1],[4,-1],[2,1],[6,2],[0,4],[4,4],[2,5],[7,5],[5,6],[3,7]];export const traaPass=(e,t)=>nodeObject(new TRAAPassNode(e,t));
//# sourceMappingURL=/sm/83d9d7fa683bc62a8d4614ca2888ad81adb60081abf95abf65974ca122f5f9ea.map