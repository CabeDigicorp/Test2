/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/examples/jsm/tsl/display/AnaglyphPassNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Matrix3}from"three";import{clamp,nodeObject,Fn,vec4,uv,uniform,max,NodeMaterial}from"three/tsl";import StereoCompositePassNode from"./StereoCompositePassNode.js";class AnaglyphPassNode extends StereoCompositePassNode{static get type(){return"AnaglyphPassNode"}constructor(t,e){super(t,e),this.isAnaglyphPassNode=!0,this._colorMatrixLeft=uniform((new Matrix3).fromArray([.4561,-.0400822,-.0152161,.500484,-.0378246,-.0205971,.176381,-.0157589,-.00546856])),this._colorMatrixRight=uniform((new Matrix3).fromArray([-.0434706,.378476,-.0721527,-.0879388,.73364,-.112961,-.00155529,-.0184503,1.2264]))}setup(t){const e=uv(),r=Fn((()=>{const t=this._mapLeft.uv(e),r=this._mapRight.uv(e),a=clamp(this._colorMatrixLeft.mul(t.rgb).add(this._colorMatrixRight.mul(r.rgb)));return vec4(a.rgb,max(t.a,r.a))})),a=this._material||(this._material=new NodeMaterial);return a.fragmentNode=r().context(t.getSharedContext()),a.name="Anaglyph",a.needsUpdate=!0,super.setup(t)}}export default AnaglyphPassNode;export const anaglyphPass=(t,e)=>nodeObject(new AnaglyphPassNode(t,e));
//# sourceMappingURL=/sm/09b26d30cb493f6018034d946b2257555ecf829c347eceb0a17ddf8ed5548c61.map