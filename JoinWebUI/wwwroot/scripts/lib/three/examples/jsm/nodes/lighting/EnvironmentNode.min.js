/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.160.1/examples/jsm/nodes/lighting/EnvironmentNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import LightingNode from"./LightingNode.js";import{cache}from"../core/CacheNode.js";import{context}from"../core/ContextNode.js";import{maxMipLevel}from"../utils/MaxMipLevelNode.js";import{roughness,clearcoatRoughness}from"../core/PropertyNode.js";import{equirectUV}from"../utils/EquirectUVNode.js";import{specularMIPLevel}from"../utils/SpecularMIPLevelNode.js";import{cameraViewMatrix}from"../accessors/CameraNode.js";import{transformedClearcoatNormalView,transformedNormalView,transformedNormalWorld}from"../accessors/NormalNode.js";import{positionViewDirection}from"../accessors/PositionNode.js";import{addNodeClass}from"../core/Node.js";import{vec2}from"../shadernode/ShaderNode.js";import{cubeTexture}from"../accessors/CubeTextureNode.js";import{reference}from"../accessors/ReferenceNode.js";const envNodeCache=new WeakMap;class EnvironmentNode extends LightingNode{constructor(e=null){super(),this.envNode=e}setup(e){let r=this.envNode;if(r.isTextureNode&&!0!==r.value.isCubeTexture){let o=envNodeCache.get(r.value);if(void 0===o){const t=r.value,a=e.renderer,n=e.getCubeRenderTarget(512).fromEquirectangularTexture(a,t);o=cubeTexture(n.texture),envNodeCache.set(r.value,o)}r=o}const o=reference("envMapIntensity","float",e.material),t=context(r,createRadianceContext(roughness,transformedNormalView)).mul(o),a=context(r,createIrradianceContext(transformedNormalWorld)).mul(Math.PI).mul(o),n=cache(t);e.context.radiance.addAssign(n),e.context.iblIrradiance.addAssign(a);const i=e.context.lightingModel.clearcoatRadiance;if(i){const e=context(r,createRadianceContext(clearcoatRoughness,transformedClearcoatNormalView)).mul(o),t=cache(e);i.addAssign(t)}}}const createRadianceContext=(e,r)=>{let o=null,t=null;return{getUV:a=>{let n=null;return null===o&&(o=positionViewDirection.negate().reflect(r),o=e.mul(e).mix(o,r).normalize(),o=o.transformDirection(cameraViewMatrix)),a.isCubeTextureNode?n=o:a.isTextureNode&&(null===t&&(t=equirectUV(o)),n=t),n},getTextureLevel:()=>e,getTextureLevelAlgorithm:(e,r)=>specularMIPLevel(e,r)}},createIrradianceContext=e=>{let r=null;return{getUV:o=>{let t=null;return o.isCubeTextureNode?t=e:o.isTextureNode&&(null===r&&(r=equirectUV(e),r=vec2(r.x,r.y.oneMinus())),t=r),t},getTextureLevel:e=>maxMipLevel(e)}};export default EnvironmentNode;addNodeClass("EnvironmentNode",EnvironmentNode);
//# sourceMappingURL=/sm/d7f23480da85ffe0b984283cabab2a3c937ab13816a8e6ab0da0e800edd7fa0e.map