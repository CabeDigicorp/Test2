/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.160.1/examples/jsm/nodes/core/StackNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Node,{addNodeClass}from"./Node.js";import{cond}from"../math/CondNode.js";import{ShaderNode,nodeProxy,getCurrentStack,setCurrentStack}from"../shadernode/ShaderNode.js";class StackNode extends Node{constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this.isStackNode=!0}getNodeType(e){return this.outputNode?this.outputNode.getNodeType(e):"void"}add(e){return this.nodes.push(e),this}if(e,t){const o=new ShaderNode(t);return this._currentCond=cond(e,o),this.add(this._currentCond)}elseif(e,t){const o=new ShaderNode(t),d=cond(e,o);return this._currentCond.elseNode=d,this._currentCond=d,this}else(e){return this._currentCond.elseNode=new ShaderNode(e),this}build(e,...t){const o=getCurrentStack();setCurrentStack(this);for(const t of this.nodes)t.build(e,"void");return setCurrentStack(o),this.outputNode?this.outputNode.build(e,...t):super.build(e,...t)}}export default StackNode;export const stack=nodeProxy(StackNode);addNodeClass("StackNode",StackNode);
//# sourceMappingURL=/sm/13c853148ca6dc28fd0ea22edf8751e01df20aa66de3ba0237dd1e4f5849a4a7.map