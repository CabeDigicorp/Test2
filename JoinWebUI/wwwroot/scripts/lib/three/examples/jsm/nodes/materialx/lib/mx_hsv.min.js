/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.160.1/examples/jsm/nodes/materialx/lib/mx_hsv.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{int,float,vec3,If,tslFn}from"../../shadernode/ShaderNode.js";import{add,sub,mul}from"../../math/OperatorNode.js";import{floor,trunc,max,min}from"../../math/MathNode.js";const mx_hsvtorgb=tslFn((([t])=>{const a=vec3(t).toVar(),s=float(a.x).toVar(),e=float(a.y).toVar(),o=float(a.z).toVar();If(e.lessThan(1e-4),(()=>vec3(o,o,o))).else((()=>{s.assign(mul(6,s.sub(floor(s))));const t=int(trunc(s)).toVar(),a=float(s.sub(float(t))).toVar(),r=float(o.mul(sub(1,e))).toVar(),l=float(o.mul(sub(1,e.mul(a)))).toVar(),n=float(o.mul(sub(1,e.mul(sub(1,a))))).toVar();return If(t.equal(int(0)),(()=>vec3(o,n,r))).elseif(t.equal(int(1)),(()=>vec3(l,o,r))).elseif(t.equal(int(2)),(()=>vec3(r,o,n))).elseif(t.equal(int(3)),(()=>vec3(r,l,o))).elseif(t.equal(int(4)),(()=>vec3(n,r,o))),vec3(o,r,l)}))})),mx_rgbtohsv=tslFn((([t])=>{const a=vec3(t).toVar(),s=float(a.x).toVar(),e=float(a.y).toVar(),o=float(a.z).toVar(),r=float(min(s,min(e,o))).toVar(),l=float(max(s,max(e,o))).toVar(),n=float(l.sub(r)).toVar(),f=float().toVar(),u=float().toVar(),i=float().toVar();return i.assign(l),If(l.greaterThan(0),(()=>{u.assign(n.div(l))})).else((()=>{u.assign(0)})),If(u.lessThanEqual(0),(()=>{f.assign(0)})).else((()=>{If(s.greaterThanEqual(l),(()=>{f.assign(e.sub(o).div(n))})).elseif(e.greaterThanEqual(l),(()=>{f.assign(add(2,o.sub(s).div(n)))})).else((()=>{f.assign(add(4,s.sub(e).div(n)))})),f.mulAssign(1/6),If(f.lessThan(0),(()=>{f.addAssign(1)}))})),vec3(f,u,i)}));mx_hsvtorgb.setLayout({name:"mx_hsvtorgb",type:"vec3",inputs:[{name:"hsv",type:"vec3"}]}),mx_rgbtohsv.setLayout({name:"mx_rgbtohsv",type:"vec3",inputs:[{name:"c",type:"vec3"}]});export{mx_hsvtorgb,mx_rgbtohsv};
//# sourceMappingURL=/sm/a672b95fc2c3631239b28c70683200024d0dc64d2472f5609ac992f07b5058f2.map