/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.160.1/examples/jsm/nodes/materials/SpriteNodeMaterial.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import NodeMaterial,{addNodeMaterial}from"./NodeMaterial.js";import{uniform}from"../core/UniformNode.js";import{cameraProjectionMatrix}from"../accessors/CameraNode.js";import{materialRotation}from"../accessors/MaterialNode.js";import{modelViewMatrix,modelWorldMatrix}from"../accessors/ModelNode.js";import{positionLocal}from"../accessors/PositionNode.js";import{float,vec2,vec3,vec4}from"../shadernode/ShaderNode.js";import{SpriteMaterial}from"three";const defaultValues=new SpriteMaterial;class SpriteNodeMaterial extends NodeMaterial{constructor(e){super(),this.isSpriteNodeMaterial=!0,this.lights=!1,this.normals=!1,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.setDefaultValues(defaultValues),this.setValues(e)}setupPosition({object:e,context:o}){const{positionNode:t,rotationNode:r,scaleNode:i}=this,a=positionLocal;let s=modelViewMatrix.mul(vec3(t||0)),l=vec2(modelWorldMatrix[0].xyz.length(),modelWorldMatrix[1].xyz.length());null!==i&&(l=l.mul(i));let d=a.xy;e.center&&!0===e.center.isVector2&&(d=d.sub(uniform(e.center).sub(.5))),d=d.mul(l);const c=float(r||materialRotation),n=c.cos(),m=c.sin(),N=vec2(vec2(n,m.negate()).dot(d),vec2(m,n).dot(d));s=vec4(s.xy.add(N),s.zw);const p=cameraProjectionMatrix.mul(s);return o.vertex=a,p}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}}export default SpriteNodeMaterial;addNodeMaterial("SpriteNodeMaterial",SpriteNodeMaterial);
//# sourceMappingURL=/sm/39a6508554b49c8f320b922a788c58a11fc1276b266296dcf06799b108329b7f.map