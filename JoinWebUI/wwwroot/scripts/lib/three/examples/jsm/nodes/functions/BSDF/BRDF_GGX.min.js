/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.160.1/examples/jsm/nodes/functions/BSDF/BRDF_GGX.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import F_Schlick from"./F_Schlick.js";import V_GGX_SmithCorrelated from"./V_GGX_SmithCorrelated.js";import D_GGX from"./D_GGX.js";import{transformedNormalView}from"../../accessors/NormalNode.js";import{positionViewDirection}from"../../accessors/PositionNode.js";import{iridescence}from"../../core/PropertyNode.js";import{tslFn}from"../../shadernode/ShaderNode.js";const BRDF_GGX=tslFn((o=>{const{lightDirection:i,f0:r,f90:e,roughness:t,iridescenceFresnel:s}=o,m=o.normalView||transformedNormalView,c=t.pow2(),d=i.add(positionViewDirection).normalize(),n=m.dot(i).clamp(),l=m.dot(positionViewDirection).clamp(),a=m.dot(d).clamp(),p=positionViewDirection.dot(d).clamp();let G=F_Schlick({f0:r,f90:e,dotVH:p});s&&(G=iridescence.mix(G,s));const f=V_GGX_SmithCorrelated({alpha:c,dotNL:n,dotNV:l}),_=D_GGX({alpha:c,dotNH:a});return G.mul(f).mul(_)}));export default BRDF_GGX;
//# sourceMappingURL=/sm/caf5dee036777261a01886a87fe8fd839bb35516cfbe59d05bca24cfdc84d06e.map