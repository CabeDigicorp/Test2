/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.160.1/examples/jsm/nodes/functions/PhongLightingModel.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import LightingModel from"../core/LightingModel.js";import F_Schlick from"./BSDF/F_Schlick.js";import BRDF_Lambert from"./BSDF/BRDF_Lambert.js";import{diffuseColor}from"../core/PropertyNode.js";import{transformedNormalView}from"../accessors/NormalNode.js";import{materialSpecularStrength}from"../accessors/MaterialNode.js";import{shininess,specularColor}from"../core/PropertyNode.js";import{positionViewDirection}from"../accessors/PositionNode.js";import{tslFn,float}from"../shadernode/ShaderNode.js";const G_BlinnPhong_Implicit=()=>float(.25),D_BlinnPhong=tslFn((({dotNH:o})=>shininess.mul(.5/Math.PI).add(1).mul(o.pow(shininess)))),BRDF_BlinnPhong=tslFn((({lightDirection:o})=>{const i=o.add(positionViewDirection).normalize(),r=transformedNormalView.dot(i).clamp(),e=positionViewDirection.dot(i).clamp(),t=F_Schlick({f0:specularColor,f90:1,dotVH:e}),s=float(.25),l=D_BlinnPhong({dotNH:r});return t.mul(s).mul(l)}));class PhongLightingModel extends LightingModel{constructor(o=!0){super(),this.specular=o}direct({lightDirection:o,lightColor:i,reflectedLight:r}){const e=transformedNormalView.dot(o).clamp().mul(i);r.directDiffuse.addAssign(e.mul(BRDF_Lambert({diffuseColor:diffuseColor.rgb}))),!0===this.specular&&r.directSpecular.addAssign(e.mul(BRDF_BlinnPhong({lightDirection:o})).mul(materialSpecularStrength))}indirectDiffuse({irradiance:o,reflectedLight:i}){i.indirectDiffuse.addAssign(o.mul(BRDF_Lambert({diffuseColor:diffuseColor})))}}export default PhongLightingModel;
//# sourceMappingURL=/sm/9a9637d512333b0be8edc4a250b21e84dfa739112b516e7523c912070e3d28f4.map