/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.160.1/examples/jsm/nodes/code/FunctionNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import CodeNode from"./CodeNode.js";import{addNodeClass}from"../core/Node.js";import{nodeObject}from"../shadernode/ShaderNode.js";class FunctionNode extends CodeNode{constructor(e="",o=[],t=""){super(e,o,t),this.keywords={}}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const o=e.getDataFromNode(this);let t=o.nodeFunction;return void 0===t&&(t=e.parser.parseFunction(this.code),o.nodeFunction=t),t}generate(e,o){super.generate(e);const t=this.getNodeFunction(e),n=t.name,s=t.type,d=e.getCodeFromNode(this,s);""!==n&&(d.name=n);const r=e.getPropertyName(d);let c=this.getNodeFunction(e).getCode(r);const i=this.keywords,u=Object.keys(i);if(u.length>0)for(const o of u){const t=new RegExp(`\\b${o}\\b`,"g"),n=i[o].build(e,"property");c=c.replace(t,n)}return d.code=c+"\n","property"===o?r:e.format(`${r}()`,s,o)}}export default FunctionNode;const nativeFn=(e,o=[],t="")=>{for(let e=0;e<o.length;e++){const t=o[e];"function"==typeof t&&(o[e]=t.functionNode)}const n=nodeObject(new FunctionNode(e,o,t)),s=(...e)=>n.call(...e);return s.functionNode=n,s};export const glslFn=(e,o)=>nativeFn(e,o,"glsl");export const wgslFn=(e,o)=>nativeFn(e,o,"wgsl");export const func=(e,o)=>(console.warn("TSL: func() is deprecated. Use nativeFn(), wgslFn() or glslFn() instead."),nodeObject(new FunctionNode(e,o)));addNodeClass("FunctionNode",FunctionNode);
//# sourceMappingURL=/sm/95b218de157906df8add1f1be551d73b21ed554a54edbda258ecce8effcf087d.map