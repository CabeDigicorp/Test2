/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.160.1/examples/jsm/nodes/functions/PhysicalLightingModel.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import BRDF_Lambert from"./BSDF/BRDF_Lambert.js";import BRDF_GGX from"./BSDF/BRDF_GGX.js";import DFGApprox from"./BSDF/DFGApprox.js";import EnvironmentBRDF from"./BSDF/EnvironmentBRDF.js";import F_Schlick from"./BSDF/F_Schlick.js";import Schlick_to_F0 from"./BSDF/Schlick_to_F0.js";import BRDF_Sheen from"./BSDF/BRDF_Sheen.js";import LightingModel from"../core/LightingModel.js";import{diffuseColor,specularColor,roughness,clearcoat,clearcoatRoughness,sheen,sheenRoughness,iridescence,iridescenceIOR,iridescenceThickness}from"../core/PropertyNode.js";import{transformedNormalView,transformedClearcoatNormalView}from"../accessors/NormalNode.js";import{positionViewDirection}from"../accessors/PositionNode.js";import{tslFn,float,vec3,mat3}from"../shadernode/ShaderNode.js";import{cond}from"../math/CondNode.js";import{mix,smoothstep}from"../math/MathNode.js";const XYZ_TO_REC709=mat3(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),Fresnel0ToIor=e=>{const t=e.sqrt();return vec3(1).add(t).div(vec3(1).sub(t))},IorToFresnel0=(e,t)=>e.sub(t).div(e.add(t)).pow2(),evalSensitivity=(e,t)=>{const s=e.mul(2*Math.PI*1e-9),i=vec3(54856e-17,44201e-17,52481e-17),c=vec3(1681e3,1795300,2208400),o=vec3(43278e5,93046e5,66121e5),r=float(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(s.mul(2239900).add(t.x).cos()).mul(s.pow2().mul(-45282e5).exp());let a=i.mul(o.mul(2*Math.PI).sqrt()).mul(c.mul(s).add(t).cos()).mul(s.pow2().negate().mul(o).exp());a=vec3(a.x.add(r),a.y,a.z).div(1.0685e-7);return XYZ_TO_REC709.mul(a)},evalIridescence=tslFn((({outsideIOR:e,eta2:t,cosTheta1:s,thinFilmThickness:i,baseF0:c})=>{const o=mix(e,t,smoothstep(0,.03,i)),r=e.div(o).pow2().mul(float(1).sub(s.pow2())),a=float(1).sub(r).sqrt(),l=IorToFresnel0(o,e),n=F_Schlick({f0:l,f90:1,dotVH:s}),d=n.oneMinus(),u=o.lessThan(e).cond(Math.PI,0),m=float(Math.PI).sub(u),h=Fresnel0ToIor(c.clamp(0,.9999)),p=IorToFresnel0(h,o.vec3()),f=F_Schlick({f0:p,f90:1,dotVH:a}),F=vec3(h.x.lessThan(o).cond(Math.PI,0),h.y.lessThan(o).cond(Math.PI,0),h.z.lessThan(o).cond(Math.PI,0)),g=o.mul(i,a,2),D=vec3(m).add(F),S=n.mul(f).clamp(1e-5,.9999),v=S.sqrt(),I=d.pow2().mul(f).div(vec3(1).sub(S));let R=n.add(I),w=I.sub(d);for(let e=1;e<=2;++e){w=w.mul(v);const t=evalSensitivity(float(e).mul(g),float(e).mul(D)).mul(2);R=R.add(w.mul(t))}return R.max(vec3(0))})).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),IBLSheenBRDF=tslFn((({normal:e,viewDir:t,roughness:s})=>{const i=e.dot(t).saturate(),c=s.pow2(),o=cond(s.lessThan(.25),float(-339.2).mul(c).add(float(161.4).mul(s)).sub(25.9),float(-8.48).mul(c).add(float(14.3).mul(s)).sub(9.95)),r=cond(s.lessThan(.25),float(44).mul(c).sub(float(23.7).mul(s)).add(3.26),float(1.97).mul(c).sub(float(3.27).mul(s)).add(.72));return cond(s.lessThan(.25),0,float(.1).mul(s).sub(.025)).add(o.mul(i).add(r).exp()).mul(1/Math.PI).saturate()})),clearcoatF0=vec3(.04),clearcoatF90=vec3(1);class PhysicalLightingModel extends LightingModel{constructor(e=!1,t=!1,s=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=s,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(){if(!0===this.clearcoat&&(this.clearcoatRadiance=vec3().temp("clearcoatRadiance"),this.clearcoatSpecularDirect=vec3().temp("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=vec3().temp("clearcoatSpecularIndirect")),!0===this.sheen&&(this.sheenSpecularDirect=vec3().temp("sheenSpecularDirect"),this.sheenSpecularIndirect=vec3().temp("sheenSpecularIndirect")),!0===this.iridescence){const e=transformedNormalView.dot(positionViewDirection).clamp();this.iridescenceFresnel=evalIridescence({outsideIOR:float(1),eta2:iridescenceIOR,cosTheta1:e,thinFilmThickness:iridescenceThickness,baseF0:specularColor}),this.iridescenceF0=Schlick_to_F0({f:this.iridescenceFresnel,f90:1,dotVH:e})}}computeMultiscattering(e,t,s=float(1)){const i=transformedNormalView.dot(positionViewDirection).clamp(),c=DFGApprox({roughness:roughness,dotNV:i}),o=(this.iridescenceF0?iridescence.mix(specularColor,this.iridescenceF0):specularColor).mul(c.x).add(s.mul(c.y)),r=c.x.add(c.y).oneMinus(),a=specularColor.add(specularColor.oneMinus().mul(.047619)),l=o.mul(a).div(r.mul(a).oneMinus());e.addAssign(o),t.addAssign(l.mul(r))}direct({lightDirection:e,lightColor:t,reflectedLight:s}){const i=transformedNormalView.dot(e).clamp().mul(t);if(!0===this.sheen&&this.sheenSpecularDirect.addAssign(i.mul(BRDF_Sheen({lightDirection:e}))),!0===this.clearcoat){const s=transformedClearcoatNormalView.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(s.mul(BRDF_GGX({lightDirection:e,f0:clearcoatF0,f90:clearcoatF90,roughness:clearcoatRoughness,normalView:transformedClearcoatNormalView})))}s.directDiffuse.addAssign(i.mul(BRDF_Lambert({diffuseColor:diffuseColor.rgb}))),s.directSpecular.addAssign(i.mul(BRDF_GGX({lightDirection:e,f0:specularColor,f90:1,roughness:roughness,iridescence:this.iridescence,iridescenceFresnel:this.iridescenceFresnel})))}indirectDiffuse({irradiance:e,reflectedLight:t}){t.indirectDiffuse.addAssign(e.mul(BRDF_Lambert({diffuseColor:diffuseColor})))}indirectSpecular({radiance:e,iblIrradiance:t,reflectedLight:s}){if(!0===this.sheen&&this.sheenSpecularIndirect.addAssign(t.mul(sheen,IBLSheenBRDF({normal:transformedNormalView,viewDir:positionViewDirection,roughness:sheenRoughness}))),!0===this.clearcoat){const e=transformedClearcoatNormalView.dot(positionViewDirection).clamp(),t=EnvironmentBRDF({dotNV:e,specularColor:clearcoatF0,specularF90:clearcoatF90,roughness:clearcoatRoughness});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(t))}const i=vec3().temp("singleScattering"),c=vec3().temp("multiScattering"),o=t.mul(1/Math.PI);this.computeMultiscattering(i,c);const r=i.add(c),a=diffuseColor.mul(r.r.max(r.g).max(r.b).oneMinus());s.indirectSpecular.addAssign(e.mul(i)),s.indirectSpecular.addAssign(c.mul(o)),s.indirectDiffuse.addAssign(a.mul(o))}ambientOcclusion({ambientOcclusion:e,reflectedLight:t}){const s=transformedNormalView.dot(positionViewDirection).clamp().add(e),i=roughness.mul(-16).oneMinus().negate().exp2(),c=e.sub(s.pow(i).oneMinus()).clamp();!0===this.clearcoat&&this.clearcoatSpecularIndirect.mulAssign(e),!0===this.sheen&&this.sheenSpecularIndirect.mulAssign(e),t.indirectDiffuse.mulAssign(e),t.indirectSpecular.mulAssign(c)}finish(e){const{outgoingLight:t}=e;if(!0===this.clearcoat){const e=transformedClearcoatNormalView.dot(positionViewDirection).clamp(),s=F_Schlick({dotVH:e,f0:clearcoatF0,f90:clearcoatF90}),i=t.mul(clearcoat.mul(s).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(clearcoat));t.assign(i)}if(!0===this.sheen){const e=sheen.r.max(sheen.g).max(sheen.b).mul(.157).oneMinus(),s=t.mul(e).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(s)}}}export default PhysicalLightingModel;
//# sourceMappingURL=/sm/03428532e2fe157cef90a2d9aea81e2a6411db1b684c33941757ad2dc4880ec8.map