/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.160.1/examples/jsm/nodes/materials/MeshPhysicalNodeMaterial.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{addNodeMaterial}from"./NodeMaterial.js";import{transformedClearcoatNormalView}from"../accessors/NormalNode.js";import{clearcoat,clearcoatRoughness,sheen,sheenRoughness,iridescence,iridescenceIOR,iridescenceThickness}from"../core/PropertyNode.js";import{materialClearcoat,materialClearcoatRoughness,materialClearcoatNormal,materialSheen,materialSheenRoughness,materialIridescence,materialIridescenceIOR,materialIridescenceThickness}from"../accessors/MaterialNode.js";import{float,vec3}from"../shadernode/ShaderNode.js";import PhysicalLightingModel from"../functions/PhysicalLightingModel.js";import MeshStandardNodeMaterial from"./MeshStandardNodeMaterial.js";import{MeshPhysicalMaterial}from"three";const defaultValues=new MeshPhysicalMaterial;class MeshPhysicalNodeMaterial extends MeshStandardNodeMaterial{constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.setDefaultValues(defaultValues),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||null!==this.clearcoatNode}get useIridescence(){return this.iridescence>0||null!==this.iridescenceNode}get useSheen(){return this.sheen>0||null!==this.sheenNode}setupLightingModel(){return new PhysicalLightingModel(this.useClearcoat,this.useSheen,this.useIridescence)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const e=this.clearcoatNode?float(this.clearcoatNode):materialClearcoat,s=this.clearcoatRoughnessNode?float(this.clearcoatRoughnessNode):materialClearcoatRoughness;clearcoat.assign(e),clearcoatRoughness.assign(s)}if(this.useSheen){const e=this.sheenNode?vec3(this.sheenNode):materialSheen,s=this.sheenRoughnessNode?float(this.sheenRoughnessNode):materialSheenRoughness;sheen.assign(e),sheenRoughness.assign(s)}if(this.useIridescence){const e=this.iridescenceNode?float(this.iridescenceNode):materialIridescence,s=this.iridescenceIORNode?float(this.iridescenceIORNode):materialIridescenceIOR,i=this.iridescenceThicknessNode?float(this.iridescenceThicknessNode):materialIridescenceThickness;iridescence.assign(e),iridescenceIOR.assign(s),iridescenceThickness.assign(i)}}setupNormal(e){super.setupNormal(e);const s=this.clearcoatNormalNode?vec3(this.clearcoatNormalNode):materialClearcoatNormal;transformedClearcoatNormalView.assign(s)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,super.copy(e)}}export default MeshPhysicalNodeMaterial;addNodeMaterial("MeshPhysicalNodeMaterial",MeshPhysicalNodeMaterial);
//# sourceMappingURL=/sm/cf013e52ea818e5a60ab293ca5ede25d8ea09e3fac9319b3a9b7ab191f0d53a0.map