/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.160.1/examples/jsm/nodes/materialx/lib/mx_noise.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{int,uint,float,vec3,bool,uvec3,vec2,vec4,If,tslFn}from"../../shadernode/ShaderNode.js";import{cond}from"../../math/CondNode.js";import{sub,mul}from"../../math/OperatorNode.js";import{floor,abs,max,dot,min,sqrt}from"../../math/MathNode.js";import{overloadingFn}from"../../utils/FunctionOverloadingNode.js";import{loop}from"../../utils/LoopNode.js";const mx_select=tslFn((([t,a,e])=>{const n=float(e).toVar(),o=float(a).toVar(),_=bool(t).toVar();return cond(_,o,n)})),mx_negate_if=tslFn((([t,a])=>{const e=bool(a).toVar(),n=float(t).toVar();return cond(e,n.negate(),n)})),mx_floor=tslFn((([t])=>{const a=float(t).toVar();return int(floor(a))})),mx_floorfrac=tslFn((([t,a])=>{const e=float(t).toVar();return a.assign(mx_floor(e)),e.sub(float(a))})),mx_bilerp_0=tslFn((([t,a,e,n,o,_])=>{const i=float(_).toVar(),s=float(o).toVar(),r=float(n).toVar(),l=float(e).toVar(),m=float(a).toVar(),x=float(t).toVar(),c=float(sub(1,s)).toVar();return sub(1,i).mul(x.mul(c).add(m.mul(s))).add(i.mul(l.mul(c).add(r.mul(s))))})),mx_bilerp_1=tslFn((([t,a,e,n,o,_])=>{const i=float(_).toVar(),s=float(o).toVar(),r=vec3(n).toVar(),l=vec3(e).toVar(),m=vec3(a).toVar(),x=vec3(t).toVar(),c=float(sub(1,s)).toVar();return sub(1,i).mul(x.mul(c).add(m.mul(s))).add(i.mul(l.mul(c).add(r.mul(s))))})),mx_bilerp=overloadingFn([mx_bilerp_0,mx_bilerp_1]),mx_trilerp_0=tslFn((([t,a,e,n,o,_,i,s,r,l,m])=>{const x=float(m).toVar(),c=float(l).toVar(),f=float(r).toVar(),d=float(s).toVar(),u=float(i).toVar(),y=float(_).toVar(),p=float(o).toVar(),v=float(n).toVar(),V=float(e).toVar(),g=float(a).toVar(),h=float(t).toVar(),b=float(sub(1,f)).toVar(),F=float(sub(1,c)).toVar();return float(sub(1,x)).toVar().mul(F.mul(h.mul(b).add(g.mul(f))).add(c.mul(V.mul(b).add(v.mul(f))))).add(x.mul(F.mul(p.mul(b).add(y.mul(f))).add(c.mul(u.mul(b).add(d.mul(f))))))})),mx_trilerp_1=tslFn((([t,a,e,n,o,_,i,s,r,l,m])=>{const x=float(m).toVar(),c=float(l).toVar(),f=float(r).toVar(),d=vec3(s).toVar(),u=vec3(i).toVar(),y=vec3(_).toVar(),p=vec3(o).toVar(),v=vec3(n).toVar(),V=vec3(e).toVar(),g=vec3(a).toVar(),h=vec3(t).toVar(),b=float(sub(1,f)).toVar(),F=float(sub(1,c)).toVar();return float(sub(1,x)).toVar().mul(F.mul(h.mul(b).add(g.mul(f))).add(c.mul(V.mul(b).add(v.mul(f))))).add(x.mul(F.mul(p.mul(b).add(y.mul(f))).add(c.mul(u.mul(b).add(d.mul(f))))))})),mx_trilerp=overloadingFn([mx_trilerp_0,mx_trilerp_1]),mx_gradient_float_0=tslFn((([t,a,e])=>{const n=float(e).toVar(),o=float(a).toVar(),_=uint(t).toVar(),i=uint(_.bitAnd(uint(7))).toVar(),s=float(mx_select(i.lessThan(uint(4)),o,n)).toVar(),r=float(mul(2,mx_select(i.lessThan(uint(4)),n,o))).toVar();return mx_negate_if(s,bool(i.bitAnd(uint(1)))).add(mx_negate_if(r,bool(i.bitAnd(uint(2)))))})),mx_gradient_float_1=tslFn((([t,a,e,n])=>{const o=float(n).toVar(),_=float(e).toVar(),i=float(a).toVar(),s=uint(t).toVar(),r=uint(s.bitAnd(uint(15))).toVar(),l=float(mx_select(r.lessThan(uint(8)),i,_)).toVar(),m=float(mx_select(r.lessThan(uint(4)),_,mx_select(r.equal(uint(12)).or(r.equal(uint(14))),i,o))).toVar();return mx_negate_if(l,bool(r.bitAnd(uint(1)))).add(mx_negate_if(m,bool(r.bitAnd(uint(2)))))})),mx_gradient_float=overloadingFn([mx_gradient_float_0,mx_gradient_float_1]),mx_gradient_vec3_0=tslFn((([t,a,e])=>{const n=float(e).toVar(),o=float(a).toVar(),_=uvec3(t).toVar();return vec3(mx_gradient_float(_.x,o,n),mx_gradient_float(_.y,o,n),mx_gradient_float(_.z,o,n))})),mx_gradient_vec3_1=tslFn((([t,a,e,n])=>{const o=float(n).toVar(),_=float(e).toVar(),i=float(a).toVar(),s=uvec3(t).toVar();return vec3(mx_gradient_float(s.x,i,_,o),mx_gradient_float(s.y,i,_,o),mx_gradient_float(s.z,i,_,o))})),mx_gradient_vec3=overloadingFn([mx_gradient_vec3_0,mx_gradient_vec3_1]),mx_gradient_scale2d_0=tslFn((([t])=>{const a=float(t).toVar();return mul(.6616,a)})),mx_gradient_scale3d_0=tslFn((([t])=>{const a=float(t).toVar();return mul(.982,a)})),mx_gradient_scale2d_1=tslFn((([t])=>{const a=vec3(t).toVar();return mul(.6616,a)})),mx_gradient_scale2d=overloadingFn([mx_gradient_scale2d_0,mx_gradient_scale2d_1]),mx_gradient_scale3d_1=tslFn((([t])=>{const a=vec3(t).toVar();return mul(.982,a)})),mx_gradient_scale3d=overloadingFn([mx_gradient_scale3d_0,mx_gradient_scale3d_1]),mx_rotl32=tslFn((([t,a])=>{const e=int(a).toVar(),n=uint(t).toVar();return n.shiftLeft(e).bitOr(n.shiftRight(int(32).sub(e)))})),mx_bjmix=tslFn((([t,a,e])=>{t.subAssign(e),t.bitXorAssign(mx_rotl32(e,int(4))),e.addAssign(a),a.subAssign(t),a.bitXorAssign(mx_rotl32(t,int(6))),t.addAssign(e),e.subAssign(a),e.bitXorAssign(mx_rotl32(a,int(8))),a.addAssign(t),t.subAssign(e),t.bitXorAssign(mx_rotl32(e,int(16))),e.addAssign(a),a.subAssign(t),a.bitXorAssign(mx_rotl32(t,int(19))),t.addAssign(e),e.subAssign(a),e.bitXorAssign(mx_rotl32(a,int(4))),a.addAssign(t)})),mx_bjfinal=tslFn((([t,a,e])=>{const n=uint(e).toVar(),o=uint(a).toVar(),_=uint(t).toVar();return n.bitXorAssign(o),n.subAssign(mx_rotl32(o,int(14))),_.bitXorAssign(n),_.subAssign(mx_rotl32(n,int(11))),o.bitXorAssign(_),o.subAssign(mx_rotl32(_,int(25))),n.bitXorAssign(o),n.subAssign(mx_rotl32(o,int(16))),_.bitXorAssign(n),_.subAssign(mx_rotl32(n,int(4))),o.bitXorAssign(_),o.subAssign(mx_rotl32(_,int(14))),n.bitXorAssign(o),n.subAssign(mx_rotl32(o,int(24))),n})),mx_bits_to_01=tslFn((([t])=>{const a=uint(t).toVar();return float(a).div(float(uint(int(4294967295))))})),mx_fade=tslFn((([t])=>{const a=float(t).toVar();return a.mul(a.mul(a.mul(a.mul(a.mul(6).sub(15)).add(10))))})),mx_hash_int_0=tslFn((([t])=>{const a=int(t).toVar(),e=uint(uint(1)).toVar(),n=uint(uint(int(3735928559)).add(e.shiftLeft(uint(2)).add(uint(13)))).toVar();return mx_bjfinal(n.add(uint(a)),n,n)})),mx_hash_int_1=tslFn((([t,a])=>{const e=int(a).toVar(),n=int(t).toVar(),o=uint(uint(2)).toVar(),_=uint().toVar(),i=uint().toVar(),s=uint().toVar();return _.assign(i.assign(s.assign(uint(int(3735928559)).add(o.shiftLeft(uint(2)).add(uint(13)))))),_.addAssign(uint(n)),i.addAssign(uint(e)),mx_bjfinal(_,i,s)})),mx_hash_int_2=tslFn((([t,a,e])=>{const n=int(e).toVar(),o=int(a).toVar(),_=int(t).toVar(),i=uint(uint(3)).toVar(),s=uint().toVar(),r=uint().toVar(),l=uint().toVar();return s.assign(r.assign(l.assign(uint(int(3735928559)).add(i.shiftLeft(uint(2)).add(uint(13)))))),s.addAssign(uint(_)),r.addAssign(uint(o)),l.addAssign(uint(n)),mx_bjfinal(s,r,l)})),mx_hash_int_3=tslFn((([t,a,e,n])=>{const o=int(n).toVar(),_=int(e).toVar(),i=int(a).toVar(),s=int(t).toVar(),r=uint(uint(4)).toVar(),l=uint().toVar(),m=uint().toVar(),x=uint().toVar();return l.assign(m.assign(x.assign(uint(int(3735928559)).add(r.shiftLeft(uint(2)).add(uint(13)))))),l.addAssign(uint(s)),m.addAssign(uint(i)),x.addAssign(uint(_)),mx_bjmix(l,m,x),l.addAssign(uint(o)),mx_bjfinal(l,m,x)})),mx_hash_int_4=tslFn((([t,a,e,n,o])=>{const _=int(o).toVar(),i=int(n).toVar(),s=int(e).toVar(),r=int(a).toVar(),l=int(t).toVar(),m=uint(uint(5)).toVar(),x=uint().toVar(),c=uint().toVar(),f=uint().toVar();return x.assign(c.assign(f.assign(uint(int(3735928559)).add(m.shiftLeft(uint(2)).add(uint(13)))))),x.addAssign(uint(l)),c.addAssign(uint(r)),f.addAssign(uint(s)),mx_bjmix(x,c,f),x.addAssign(uint(i)),c.addAssign(uint(_)),mx_bjfinal(x,c,f)})),mx_hash_int=overloadingFn([mx_hash_int_0,mx_hash_int_1,mx_hash_int_2,mx_hash_int_3,mx_hash_int_4]),mx_hash_vec3_0=tslFn((([t,a])=>{const e=int(a).toVar(),n=int(t).toVar(),o=uint(mx_hash_int(n,e)).toVar(),_=uvec3().toVar();return _.x.assign(o.bitAnd(int(255))),_.y.assign(o.shiftRight(int(8)).bitAnd(int(255))),_.z.assign(o.shiftRight(int(16)).bitAnd(int(255))),_})),mx_hash_vec3_1=tslFn((([t,a,e])=>{const n=int(e).toVar(),o=int(a).toVar(),_=int(t).toVar(),i=uint(mx_hash_int(_,o,n)).toVar(),s=uvec3().toVar();return s.x.assign(i.bitAnd(int(255))),s.y.assign(i.shiftRight(int(8)).bitAnd(int(255))),s.z.assign(i.shiftRight(int(16)).bitAnd(int(255))),s})),mx_hash_vec3=overloadingFn([mx_hash_vec3_0,mx_hash_vec3_1]),mx_perlin_noise_float_0=tslFn((([t])=>{const a=vec2(t).toVar(),e=int().toVar(),n=int().toVar(),o=float(mx_floorfrac(a.x,e)).toVar(),_=float(mx_floorfrac(a.y,n)).toVar(),i=float(mx_fade(o)).toVar(),s=float(mx_fade(_)).toVar(),r=float(mx_bilerp(mx_gradient_float(mx_hash_int(e,n),o,_),mx_gradient_float(mx_hash_int(e.add(int(1)),n),o.sub(1),_),mx_gradient_float(mx_hash_int(e,n.add(int(1))),o,_.sub(1)),mx_gradient_float(mx_hash_int(e.add(int(1)),n.add(int(1))),o.sub(1),_.sub(1)),i,s)).toVar();return mx_gradient_scale2d(r)})),mx_perlin_noise_float_1=tslFn((([t])=>{const a=vec3(t).toVar(),e=int().toVar(),n=int().toVar(),o=int().toVar(),_=float(mx_floorfrac(a.x,e)).toVar(),i=float(mx_floorfrac(a.y,n)).toVar(),s=float(mx_floorfrac(a.z,o)).toVar(),r=float(mx_fade(_)).toVar(),l=float(mx_fade(i)).toVar(),m=float(mx_fade(s)).toVar(),x=float(mx_trilerp(mx_gradient_float(mx_hash_int(e,n,o),_,i,s),mx_gradient_float(mx_hash_int(e.add(int(1)),n,o),_.sub(1),i,s),mx_gradient_float(mx_hash_int(e,n.add(int(1)),o),_,i.sub(1),s),mx_gradient_float(mx_hash_int(e.add(int(1)),n.add(int(1)),o),_.sub(1),i.sub(1),s),mx_gradient_float(mx_hash_int(e,n,o.add(int(1))),_,i,s.sub(1)),mx_gradient_float(mx_hash_int(e.add(int(1)),n,o.add(int(1))),_.sub(1),i,s.sub(1)),mx_gradient_float(mx_hash_int(e,n.add(int(1)),o.add(int(1))),_,i.sub(1),s.sub(1)),mx_gradient_float(mx_hash_int(e.add(int(1)),n.add(int(1)),o.add(int(1))),_.sub(1),i.sub(1),s.sub(1)),r,l,m)).toVar();return mx_gradient_scale3d(x)})),mx_perlin_noise_float=overloadingFn([mx_perlin_noise_float_0,mx_perlin_noise_float_1]),mx_perlin_noise_vec3_0=tslFn((([t])=>{const a=vec2(t).toVar(),e=int().toVar(),n=int().toVar(),o=float(mx_floorfrac(a.x,e)).toVar(),_=float(mx_floorfrac(a.y,n)).toVar(),i=float(mx_fade(o)).toVar(),s=float(mx_fade(_)).toVar(),r=vec3(mx_bilerp(mx_gradient_vec3(mx_hash_vec3(e,n),o,_),mx_gradient_vec3(mx_hash_vec3(e.add(int(1)),n),o.sub(1),_),mx_gradient_vec3(mx_hash_vec3(e,n.add(int(1))),o,_.sub(1)),mx_gradient_vec3(mx_hash_vec3(e.add(int(1)),n.add(int(1))),o.sub(1),_.sub(1)),i,s)).toVar();return mx_gradient_scale2d(r)})),mx_perlin_noise_vec3_1=tslFn((([t])=>{const a=vec3(t).toVar(),e=int().toVar(),n=int().toVar(),o=int().toVar(),_=float(mx_floorfrac(a.x,e)).toVar(),i=float(mx_floorfrac(a.y,n)).toVar(),s=float(mx_floorfrac(a.z,o)).toVar(),r=float(mx_fade(_)).toVar(),l=float(mx_fade(i)).toVar(),m=float(mx_fade(s)).toVar(),x=vec3(mx_trilerp(mx_gradient_vec3(mx_hash_vec3(e,n,o),_,i,s),mx_gradient_vec3(mx_hash_vec3(e.add(int(1)),n,o),_.sub(1),i,s),mx_gradient_vec3(mx_hash_vec3(e,n.add(int(1)),o),_,i.sub(1),s),mx_gradient_vec3(mx_hash_vec3(e.add(int(1)),n.add(int(1)),o),_.sub(1),i.sub(1),s),mx_gradient_vec3(mx_hash_vec3(e,n,o.add(int(1))),_,i,s.sub(1)),mx_gradient_vec3(mx_hash_vec3(e.add(int(1)),n,o.add(int(1))),_.sub(1),i,s.sub(1)),mx_gradient_vec3(mx_hash_vec3(e,n.add(int(1)),o.add(int(1))),_,i.sub(1),s.sub(1)),mx_gradient_vec3(mx_hash_vec3(e.add(int(1)),n.add(int(1)),o.add(int(1))),_.sub(1),i.sub(1),s.sub(1)),r,l,m)).toVar();return mx_gradient_scale3d(x)})),mx_perlin_noise_vec3=overloadingFn([mx_perlin_noise_vec3_0,mx_perlin_noise_vec3_1]),mx_cell_noise_float_0=tslFn((([t])=>{const a=float(t).toVar(),e=int(mx_floor(a)).toVar();return mx_bits_to_01(mx_hash_int(e))})),mx_cell_noise_float_1=tslFn((([t])=>{const a=vec2(t).toVar(),e=int(mx_floor(a.x)).toVar(),n=int(mx_floor(a.y)).toVar();return mx_bits_to_01(mx_hash_int(e,n))})),mx_cell_noise_float_2=tslFn((([t])=>{const a=vec3(t).toVar(),e=int(mx_floor(a.x)).toVar(),n=int(mx_floor(a.y)).toVar(),o=int(mx_floor(a.z)).toVar();return mx_bits_to_01(mx_hash_int(e,n,o))})),mx_cell_noise_float_3=tslFn((([t])=>{const a=vec4(t).toVar(),e=int(mx_floor(a.x)).toVar(),n=int(mx_floor(a.y)).toVar(),o=int(mx_floor(a.z)).toVar(),_=int(mx_floor(a.w)).toVar();return mx_bits_to_01(mx_hash_int(e,n,o,_))})),mx_cell_noise_float=overloadingFn([mx_cell_noise_float_0,mx_cell_noise_float_1,mx_cell_noise_float_2,mx_cell_noise_float_3]),mx_cell_noise_vec3_0=tslFn((([t])=>{const a=float(t).toVar(),e=int(mx_floor(a)).toVar();return vec3(mx_bits_to_01(mx_hash_int(e,int(0))),mx_bits_to_01(mx_hash_int(e,int(1))),mx_bits_to_01(mx_hash_int(e,int(2))))})),mx_cell_noise_vec3_1=tslFn((([t])=>{const a=vec2(t).toVar(),e=int(mx_floor(a.x)).toVar(),n=int(mx_floor(a.y)).toVar();return vec3(mx_bits_to_01(mx_hash_int(e,n,int(0))),mx_bits_to_01(mx_hash_int(e,n,int(1))),mx_bits_to_01(mx_hash_int(e,n,int(2))))})),mx_cell_noise_vec3_2=tslFn((([t])=>{const a=vec3(t).toVar(),e=int(mx_floor(a.x)).toVar(),n=int(mx_floor(a.y)).toVar(),o=int(mx_floor(a.z)).toVar();return vec3(mx_bits_to_01(mx_hash_int(e,n,o,int(0))),mx_bits_to_01(mx_hash_int(e,n,o,int(1))),mx_bits_to_01(mx_hash_int(e,n,o,int(2))))})),mx_cell_noise_vec3_3=tslFn((([t])=>{const a=vec4(t).toVar(),e=int(mx_floor(a.x)).toVar(),n=int(mx_floor(a.y)).toVar(),o=int(mx_floor(a.z)).toVar(),_=int(mx_floor(a.w)).toVar();return vec3(mx_bits_to_01(mx_hash_int(e,n,o,_,int(0))),mx_bits_to_01(mx_hash_int(e,n,o,_,int(1))),mx_bits_to_01(mx_hash_int(e,n,o,_,int(2))))})),mx_cell_noise_vec3=overloadingFn([mx_cell_noise_vec3_0,mx_cell_noise_vec3_1,mx_cell_noise_vec3_2,mx_cell_noise_vec3_3]),mx_fractal_noise_float=tslFn((([t,a,e,n])=>{const o=float(n).toVar(),_=float(e).toVar(),i=int(a).toVar(),s=vec3(t).toVar(),r=float(0).toVar(),l=float(1).toVar();return loop({start:int(0),end:i},(({i:t})=>{r.addAssign(l.mul(mx_perlin_noise_float(s))),l.mulAssign(o),s.mulAssign(_)})),r})),mx_fractal_noise_vec3=tslFn((([t,a,e,n])=>{const o=float(n).toVar(),_=float(e).toVar(),i=int(a).toVar(),s=vec3(t).toVar(),r=vec3(0).toVar(),l=float(1).toVar();return loop({start:int(0),end:i},(({i:t})=>{r.addAssign(l.mul(mx_perlin_noise_vec3(s))),l.mulAssign(o),s.mulAssign(_)})),r})),mx_fractal_noise_vec2=tslFn((([t,a,e,n])=>{const o=float(n).toVar(),_=float(e).toVar(),i=int(a).toVar(),s=vec3(t).toVar();return vec2(mx_fractal_noise_float(s,i,_,o),mx_fractal_noise_float(s.add(vec3(int(19),int(193),int(17))),i,_,o))})),mx_fractal_noise_vec4=tslFn((([t,a,e,n])=>{const o=float(n).toVar(),_=float(e).toVar(),i=int(a).toVar(),s=vec3(t).toVar(),r=vec3(mx_fractal_noise_vec3(s,i,_,o)).toVar(),l=float(mx_fractal_noise_float(s.add(vec3(int(19),int(193),int(17))),i,_,o)).toVar();return vec4(r,l)})),mx_worley_distance_0=tslFn((([t,a,e,n,o,_,i])=>{const s=int(i).toVar(),r=float(_).toVar(),l=int(o).toVar(),m=int(n).toVar(),x=int(e).toVar(),c=int(a).toVar(),f=vec2(t).toVar(),d=vec3(mx_cell_noise_vec3(vec2(c.add(m),x.add(l)))).toVar(),u=vec2(d.x,d.y).toVar();u.subAssign(.5),u.mulAssign(r),u.addAssign(.5);const y=vec2(vec2(float(c),float(x)).add(u)).toVar(),p=vec2(y.sub(f)).toVar();return If(s.equal(int(2)),(()=>abs(p.x).add(abs(p.y)))),If(s.equal(int(3)),(()=>max(abs(p.x),abs(p.y)))),dot(p,p)})),mx_worley_distance_1=tslFn((([t,a,e,n,o,_,i,s,r])=>{const l=int(r).toVar(),m=float(s).toVar(),x=int(i).toVar(),c=int(_).toVar(),f=int(o).toVar(),d=int(n).toVar(),u=int(e).toVar(),y=int(a).toVar(),p=vec3(t).toVar(),v=vec3(mx_cell_noise_vec3(vec3(y.add(f),u.add(c),d.add(x)))).toVar();v.subAssign(.5),v.mulAssign(m),v.addAssign(.5);const V=vec3(vec3(float(y),float(u),float(d)).add(v)).toVar(),g=vec3(V.sub(p)).toVar();return If(l.equal(int(2)),(()=>abs(g.x).add(abs(g.y).add(abs(g.z))))),If(l.equal(int(3)),(()=>max(max(abs(g.x),abs(g.y)),abs(g.z)))),dot(g,g)})),mx_worley_distance=overloadingFn([mx_worley_distance_0,mx_worley_distance_1]),mx_worley_noise_float_0=tslFn((([t,a,e])=>{const n=int(e).toVar(),o=float(a).toVar(),_=vec2(t).toVar(),i=int().toVar(),s=int().toVar(),r=vec2(mx_floorfrac(_.x,i),mx_floorfrac(_.y,s)).toVar(),l=float(1e6).toVar();return loop({start:-1,end:int(1),name:"x",condition:"<="},(({x:t})=>{loop({start:-1,end:int(1),name:"y",condition:"<="},(({y:a})=>{const e=float(mx_worley_distance(r,t,a,i,s,o,n)).toVar();l.assign(min(l,e))}))})),If(n.equal(int(0)),(()=>{l.assign(sqrt(l))})),l})),mx_worley_noise_vec2_0=tslFn((([t,a,e])=>{const n=int(e).toVar(),o=float(a).toVar(),_=vec2(t).toVar(),i=int().toVar(),s=int().toVar(),r=vec2(mx_floorfrac(_.x,i),mx_floorfrac(_.y,s)).toVar(),l=vec2(1e6,1e6).toVar();return loop({start:-1,end:int(1),name:"x",condition:"<="},(({x:t})=>{loop({start:-1,end:int(1),name:"y",condition:"<="},(({y:a})=>{const e=float(mx_worley_distance(r,t,a,i,s,o,n)).toVar();If(e.lessThan(l.x),(()=>{l.y.assign(l.x),l.x.assign(e)})).elseif(e.lessThan(l.y),(()=>{l.y.assign(e)}))}))})),If(n.equal(int(0)),(()=>{l.assign(sqrt(l))})),l})),mx_worley_noise_vec3_0=tslFn((([t,a,e])=>{const n=int(e).toVar(),o=float(a).toVar(),_=vec2(t).toVar(),i=int().toVar(),s=int().toVar(),r=vec2(mx_floorfrac(_.x,i),mx_floorfrac(_.y,s)).toVar(),l=vec3(1e6,1e6,1e6).toVar();return loop({start:-1,end:int(1),name:"x",condition:"<="},(({x:t})=>{loop({start:-1,end:int(1),name:"y",condition:"<="},(({y:a})=>{const e=float(mx_worley_distance(r,t,a,i,s,o,n)).toVar();If(e.lessThan(l.x),(()=>{l.z.assign(l.y),l.y.assign(l.x),l.x.assign(e)})).elseif(e.lessThan(l.y),(()=>{l.z.assign(l.y),l.y.assign(e)})).elseif(e.lessThan(l.z),(()=>{l.z.assign(e)}))}))})),If(n.equal(int(0)),(()=>{l.assign(sqrt(l))})),l})),mx_worley_noise_float_1=tslFn((([t,a,e])=>{const n=int(e).toVar(),o=float(a).toVar(),_=vec3(t).toVar(),i=int().toVar(),s=int().toVar(),r=int().toVar(),l=vec3(mx_floorfrac(_.x,i),mx_floorfrac(_.y,s),mx_floorfrac(_.z,r)).toVar(),m=float(1e6).toVar();return loop({start:-1,end:int(1),name:"x",condition:"<="},(({x:t})=>{loop({start:-1,end:int(1),name:"y",condition:"<="},(({y:a})=>{loop({start:-1,end:int(1),name:"z",condition:"<="},(({z:e})=>{const _=float(mx_worley_distance(l,t,a,e,i,s,r,o,n)).toVar();m.assign(min(m,_))}))}))})),If(n.equal(int(0)),(()=>{m.assign(sqrt(m))})),m})),mx_worley_noise_float=overloadingFn([mx_worley_noise_float_0,mx_worley_noise_float_1]),mx_worley_noise_vec2_1=tslFn((([t,a,e])=>{const n=int(e).toVar(),o=float(a).toVar(),_=vec3(t).toVar(),i=int().toVar(),s=int().toVar(),r=int().toVar(),l=vec3(mx_floorfrac(_.x,i),mx_floorfrac(_.y,s),mx_floorfrac(_.z,r)).toVar(),m=vec2(1e6,1e6).toVar();return loop({start:-1,end:int(1),name:"x",condition:"<="},(({x:t})=>{loop({start:-1,end:int(1),name:"y",condition:"<="},(({y:a})=>{loop({start:-1,end:int(1),name:"z",condition:"<="},(({z:e})=>{const _=float(mx_worley_distance(l,t,a,e,i,s,r,o,n)).toVar();If(_.lessThan(m.x),(()=>{m.y.assign(m.x),m.x.assign(_)})).elseif(_.lessThan(m.y),(()=>{m.y.assign(_)}))}))}))})),If(n.equal(int(0)),(()=>{m.assign(sqrt(m))})),m})),mx_worley_noise_vec2=overloadingFn([mx_worley_noise_vec2_0,mx_worley_noise_vec2_1]),mx_worley_noise_vec3_1=tslFn((([t,a,e])=>{const n=int(e).toVar(),o=float(a).toVar(),_=vec3(t).toVar(),i=int().toVar(),s=int().toVar(),r=int().toVar(),l=vec3(mx_floorfrac(_.x,i),mx_floorfrac(_.y,s),mx_floorfrac(_.z,r)).toVar(),m=vec3(1e6,1e6,1e6).toVar();return loop({start:-1,end:int(1),name:"x",condition:"<="},(({x:t})=>{loop({start:-1,end:int(1),name:"y",condition:"<="},(({y:a})=>{loop({start:-1,end:int(1),name:"z",condition:"<="},(({z:e})=>{const _=float(mx_worley_distance(l,t,a,e,i,s,r,o,n)).toVar();If(_.lessThan(m.x),(()=>{m.z.assign(m.y),m.y.assign(m.x),m.x.assign(_)})).elseif(_.lessThan(m.y),(()=>{m.z.assign(m.y),m.y.assign(_)})).elseif(_.lessThan(m.z),(()=>{m.z.assign(_)}))}))}))})),If(n.equal(int(0)),(()=>{m.assign(sqrt(m))})),m})),mx_worley_noise_vec3=overloadingFn([mx_worley_noise_vec3_0,mx_worley_noise_vec3_1]);mx_select.setLayout({name:"mx_select",type:"float",inputs:[{name:"b",type:"bool"},{name:"t",type:"float"},{name:"f",type:"float"}]}),mx_negate_if.setLayout({name:"mx_negate_if",type:"float",inputs:[{name:"val",type:"float"},{name:"b",type:"bool"}]}),mx_floor.setLayout({name:"mx_floor",type:"int",inputs:[{name:"x",type:"float"}]}),mx_bilerp_0.setLayout({name:"mx_bilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"}]}),mx_bilerp_1.setLayout({name:"mx_bilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"}]}),mx_trilerp_0.setLayout({name:"mx_trilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"v4",type:"float"},{name:"v5",type:"float"},{name:"v6",type:"float"},{name:"v7",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),mx_trilerp_1.setLayout({name:"mx_trilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"v4",type:"vec3"},{name:"v5",type:"vec3"},{name:"v6",type:"vec3"},{name:"v7",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),mx_gradient_float_0.setLayout({name:"mx_gradient_float_0",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"}]}),mx_gradient_float_1.setLayout({name:"mx_gradient_float_1",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),mx_gradient_vec3_0.setLayout({name:"mx_gradient_vec3_0",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"}]}),mx_gradient_vec3_1.setLayout({name:"mx_gradient_vec3_1",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),mx_gradient_scale2d_0.setLayout({name:"mx_gradient_scale2d_0",type:"float",inputs:[{name:"v",type:"float"}]}),mx_gradient_scale3d_0.setLayout({name:"mx_gradient_scale3d_0",type:"float",inputs:[{name:"v",type:"float"}]}),mx_gradient_scale2d_1.setLayout({name:"mx_gradient_scale2d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]}),mx_gradient_scale3d_1.setLayout({name:"mx_gradient_scale3d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]}),mx_rotl32.setLayout({name:"mx_rotl32",type:"uint",inputs:[{name:"x",type:"uint"},{name:"k",type:"int"}]}),mx_bjfinal.setLayout({name:"mx_bjfinal",type:"uint",inputs:[{name:"a",type:"uint"},{name:"b",type:"uint"},{name:"c",type:"uint"}]}),mx_bits_to_01.setLayout({name:"mx_bits_to_01",type:"float",inputs:[{name:"bits",type:"uint"}]}),mx_fade.setLayout({name:"mx_fade",type:"float",inputs:[{name:"t",type:"float"}]}),mx_hash_int_0.setLayout({name:"mx_hash_int_0",type:"uint",inputs:[{name:"x",type:"int"}]}),mx_hash_int_1.setLayout({name:"mx_hash_int_1",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),mx_hash_int_2.setLayout({name:"mx_hash_int_2",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),mx_hash_int_3.setLayout({name:"mx_hash_int_3",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"}]}),mx_hash_int_4.setLayout({name:"mx_hash_int_4",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"},{name:"yy",type:"int"}]}),mx_hash_vec3_0.setLayout({name:"mx_hash_vec3_0",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),mx_hash_vec3_1.setLayout({name:"mx_hash_vec3_1",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),mx_perlin_noise_float_0.setLayout({name:"mx_perlin_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"}]}),mx_perlin_noise_float_1.setLayout({name:"mx_perlin_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"}]}),mx_perlin_noise_vec3_0.setLayout({name:"mx_perlin_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),mx_perlin_noise_vec3_1.setLayout({name:"mx_perlin_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),mx_cell_noise_float_0.setLayout({name:"mx_cell_noise_float_0",type:"float",inputs:[{name:"p",type:"float"}]}),mx_cell_noise_float_1.setLayout({name:"mx_cell_noise_float_1",type:"float",inputs:[{name:"p",type:"vec2"}]}),mx_cell_noise_float_2.setLayout({name:"mx_cell_noise_float_2",type:"float",inputs:[{name:"p",type:"vec3"}]}),mx_cell_noise_float_3.setLayout({name:"mx_cell_noise_float_3",type:"float",inputs:[{name:"p",type:"vec4"}]}),mx_cell_noise_vec3_0.setLayout({name:"mx_cell_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"float"}]}),mx_cell_noise_vec3_1.setLayout({name:"mx_cell_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),mx_cell_noise_vec3_2.setLayout({name:"mx_cell_noise_vec3_2",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),mx_cell_noise_vec3_3.setLayout({name:"mx_cell_noise_vec3_3",type:"vec3",inputs:[{name:"p",type:"vec4"}]}),mx_fractal_noise_float.setLayout({name:"mx_fractal_noise_float",type:"float",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),mx_fractal_noise_vec3.setLayout({name:"mx_fractal_noise_vec3",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),mx_fractal_noise_vec2.setLayout({name:"mx_fractal_noise_vec2",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),mx_fractal_noise_vec4.setLayout({name:"mx_fractal_noise_vec4",type:"vec4",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),mx_worley_distance_0.setLayout({name:"mx_worley_distance_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),mx_worley_distance_1.setLayout({name:"mx_worley_distance_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"zoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),mx_worley_noise_float_0.setLayout({name:"mx_worley_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),mx_worley_noise_vec2_0.setLayout({name:"mx_worley_noise_vec2_0",type:"vec2",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),mx_worley_noise_vec3_0.setLayout({name:"mx_worley_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),mx_worley_noise_float_1.setLayout({name:"mx_worley_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),mx_worley_noise_vec2_1.setLayout({name:"mx_worley_noise_vec2_1",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),mx_worley_noise_vec3_1.setLayout({name:"mx_worley_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]});export{mx_select,mx_negate_if,mx_floor,mx_floorfrac,mx_bilerp,mx_trilerp,mx_gradient_float,mx_gradient_vec3,mx_gradient_scale2d,mx_gradient_scale3d,mx_rotl32,mx_bjmix,mx_bjfinal,mx_bits_to_01,mx_fade,mx_hash_int,mx_hash_vec3,mx_perlin_noise_float,mx_perlin_noise_vec3,mx_cell_noise_float,mx_cell_noise_vec3,mx_fractal_noise_float,mx_fractal_noise_vec3,mx_fractal_noise_vec2,mx_fractal_noise_vec4,mx_worley_distance,mx_worley_noise_float,mx_worley_noise_vec2,mx_worley_noise_vec3};
//# sourceMappingURL=/sm/0acbb2f48260d641b7592409a9f030a2ea69d18b302a6d4a8e648b4fd6824ad0.map