/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.160.1/examples/jsm/nodes/lighting/PointLightNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import AnalyticLightNode from"./AnalyticLightNode.js";import{addLightNode}from"./LightsNode.js";import{getDistanceAttenuation}from"./LightUtils.js";import{uniform}from"../core/UniformNode.js";import{objectViewPosition}from"../accessors/Object3DNode.js";import{positionView}from"../accessors/PositionNode.js";import{addNodeClass}from"../core/Node.js";import{PointLight}from"three";class PointLightNode extends AnalyticLightNode{constructor(t=null){super(t),this.cutoffDistanceNode=uniform(0),this.decayExponentNode=uniform(0)}update(t){const{light:o}=this;super.update(t),this.cutoffDistanceNode.value=o.distance,this.decayExponentNode.value=o.decay}setup(t){const{colorNode:o,cutoffDistanceNode:e,decayExponentNode:i,light:n}=this,s=t.context.lightingModel,d=objectViewPosition(n).sub(positionView),c=d.normalize(),r=d.length(),a=getDistanceAttenuation({lightDistance:r,cutoffDistance:e,decayExponent:i}),h=o.mul(a),g=t.context.reflectedLight;s.direct({lightDirection:c,lightColor:h,reflectedLight:g},t.stack,t)}}export default PointLightNode;addNodeClass("PointLightNode",PointLightNode),addLightNode(PointLight,PointLightNode);
//# sourceMappingURL=/sm/526948545257372149f4d7ab03224e4bb04dcf37f802fed9e5941661f37c99b6.map