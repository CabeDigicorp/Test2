/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.160.1/examples/jsm/nodes/accessors/TextureNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import UniformNode,{uniform}from"../core/UniformNode.js";import{uv}from"./UVNode.js";import{textureSize}from"./TextureSizeNode.js";import{colorSpaceToLinear}from"../display/ColorSpaceNode.js";import{expression}from"../code/ExpressionNode.js";import{addNodeClass}from"../core/Node.js";import{maxMipLevel}from"../utils/MaxMipLevelNode.js";import{addNodeElement,nodeProxy,vec3,nodeObject}from"../shadernode/ShaderNode.js";import{NodeUpdateType}from"../core/constants.js";class TextureNode extends UniformNode{constructor(e,t=null,r=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=r,this.compareNode=null,this.depthNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=NodeUpdateType.NONE,this.setUpdateMatrix(null===t)}getUniformHash(){return this.value.uuid}getNodeType(){return!0===this.value.isDepthTexture?"float":"vec4"}getInputType(){return"texture"}getDefaultUV(){return uv(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){const t=this.value;return uniform(t.matrix).mul(vec3(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?NodeUpdateType.FRAME:NodeUpdateType.NONE,this}setupUV(e,t){const r=this.value;return!e.isFlipY()||!0!==r.isRenderTargetTexture&&!0!==r.isFramebufferTexture&&!0!==r.isDepthTexture||(t=t.setY(t.y.oneMinus())),t}setup(e){const t=e.getNodeProperties(this);let r=this.uvNode;null!==r&&!0!==e.context.forceUVContext||!e.context.getUV||(r=e.context.getUV(this)),r||(r=this.getDefaultUV()),!0===this.updateMatrix&&(r=this.getTransformedUV(r)),r=this.setupUV(e,r);let o=this.levelNode;null===o&&e.context.getTextureLevel&&(o=e.context.getTextureLevel(this)),null!==o&&void 0!==e.context.getTextureLevelAlgorithm&&(o=e.context.getTextureLevelAlgorithm(this,o)),t.uvNode=r,t.levelNode=o,t.compareNode=this.compareNode,t.depthNode=this.depthNode}generateUV(e,t){return t.build(e,!0===this.sampler?"vec2":"ivec2")}generateSnippet(e,t,r,o,s,i){const u=this.value;let n;return n=o?e.generateTextureLevel(u,t,r,o,s):i?e.generateTextureCompare(u,t,r,i,s):!1===this.sampler?e.generateTextureLoad(u,t,r,s):e.generateTexture(u,t,r,s),n}generate(e,t){const r=e.getNodeProperties(this),o=this.value;if(!o||!0!==o.isTexture)throw new Error("TextureNode: Need a three.js texture.");const s=super.generate(e,"property");if("sampler"===t)return s+"_sampler";if(e.isReference(t))return s;{const i=e.getDataFromNode(this);let u=i.propertyName;if(void 0===u){const{uvNode:t,levelNode:o,compareNode:n,depthNode:d}=r,l=this.generateUV(e,t),a=o?o.build(e,"float"):null,p=d?d.build(e,"int"):null,c=n?n.build(e,"float"):null,h=e.getVarFromNode(this);u=e.getPropertyName(h);const m=this.generateSnippet(e,s,l,a,p,c);e.addLineFlowCode(`${u} = ${m}`),!1!==e.context.tempWrite&&(i.snippet=m,i.propertyName=u)}let n=u;const d=this.getNodeType(e);return e.needsColorSpaceToLinear(o)&&(n=colorSpaceToLinear(expression(n,d),o.colorSpace).setup(e).build(e,d)),e.format(n,d,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){const t=this.clone();return t.uvNode=e,nodeObject(t)}blur(e){const t=this.clone();return t.levelNode=e.mul(maxMipLevel(t)),nodeObject(t)}level(e){const t=this.clone();return t.levelNode=e,t}size(e){return textureSize(this,e)}compare(e){const t=this.clone();return t.compareNode=nodeObject(e),nodeObject(t)}depth(e){const t=this.clone();return t.depthNode=nodeObject(e),nodeObject(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value]}update(){const e=this.value;!0===e.matrixAutoUpdate&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode);return e.sampler=this.sampler,e}}export default TextureNode;export const texture=nodeProxy(TextureNode);export const textureLoad=(...e)=>texture(...e).setSampler(!1);export const sampler=e=>(!0===e.isNode?e:texture(e)).convert("sampler");addNodeElement("texture",texture),addNodeClass("TextureNode",TextureNode);
//# sourceMappingURL=/sm/904a9fc58f06f5e259d3783d576bb994930717a778486efde31bb8b4a21369c2.map