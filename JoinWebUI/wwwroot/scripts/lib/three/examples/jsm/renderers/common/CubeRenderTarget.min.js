/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.160.1/examples/jsm/renderers/common/CubeRenderTarget.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{WebGLCubeRenderTarget,Scene,CubeCamera,BoxGeometry,Mesh,BackSide,NoBlending,LinearFilter,LinearMipmapLinearFilter}from"three";import{equirectUV}from"../../nodes/utils/EquirectUVNode.js";import{texture as TSL_Texture}from"../../nodes/accessors/TextureNode.js";import{positionWorldDirection}from"../../nodes/accessors/PositionNode.js";import{createNodeMaterialFromType}from"../../nodes/materials/NodeMaterial.js";class CubeRenderTarget extends WebGLCubeRenderTarget{constructor(e=1,r={}){super(e,r),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,r){const t=r.minFilter,i=r.generateMipmaps;r.generateMipmaps=!0,this.texture.type=r.type,this.texture.colorSpace=r.colorSpace,this.texture.generateMipmaps=r.generateMipmaps,this.texture.minFilter=r.minFilter,this.texture.magFilter=r.magFilter;const o=new BoxGeometry(5,5,5),a=equirectUV(positionWorldDirection),n=createNodeMaterialFromType("MeshBasicNodeMaterial");n.colorNode=TSL_Texture(r,a,0),n.side=BackSide,n.blending=NoBlending;const s=new Mesh(o,n),m=new Scene;m.add(s),r.minFilter===LinearMipmapLinearFilter&&(r.minFilter=LinearFilter);return new CubeCamera(1,10,this).update(e,m),r.minFilter=t,r.currentGenerateMipmaps=i,s.geometry.dispose(),s.material.dispose(),this}}export default CubeRenderTarget;
//# sourceMappingURL=/sm/befc7c254c31f1f433f0698305151265f1c5c25b7083a1cb2bcf6ea7e507f170.map