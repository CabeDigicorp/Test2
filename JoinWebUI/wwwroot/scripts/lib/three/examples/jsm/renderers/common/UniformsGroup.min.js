/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.160.1/examples/jsm/renderers/common/UniformsGroup.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import UniformBuffer from"./UniformBuffer.js";import{GPU_CHUNK_BYTES}from"./Constants.js";class UniformsGroup extends UniformBuffer{constructor(t){super(t),this.isUniformsGroup=!0,this.uniforms=[]}addUniform(t){return this.uniforms.push(t),this}removeUniform(t){const e=this.uniforms.indexOf(t);return-1!==e&&this.uniforms.splice(e,1),this}get buffer(){let t=this._buffer;if(null===t){const e=this.byteLength;t=new Float32Array(new ArrayBuffer(e)),this._buffer=t}return t}get byteLength(){let t=0;for(let e=0,r=this.uniforms.length;e<r;e++){const r=this.uniforms[e],s=t%GPU_CHUNK_BYTES;0!==s&&GPU_CHUNK_BYTES-s-r.boundary<0?t+=GPU_CHUNK_BYTES-s:s%r.boundary!=0&&(t+=s%r.boundary),r.offset=t/this.bytesPerElement,t+=r.itemSize*this.bytesPerElement}return Math.ceil(t/GPU_CHUNK_BYTES)*GPU_CHUNK_BYTES}update(){let t=!1;for(const e of this.uniforms)!0===this.updateByType(e)&&(t=!0);return t}updateByType(t){return t.isFloatUniform?this.updateNumber(t):t.isVector2Uniform?this.updateVector2(t):t.isVector3Uniform?this.updateVector3(t):t.isVector4Uniform?this.updateVector4(t):t.isColorUniform?this.updateColor(t):t.isMatrix3Uniform?this.updateMatrix3(t):t.isMatrix4Uniform?this.updateMatrix4(t):void console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",t)}updateNumber(t){let e=!1;const r=this.buffer,s=t.getValue(),o=t.offset;return r[o]!==s&&(r[o]=s,e=!0),e}updateVector2(t){let e=!1;const r=this.buffer,s=t.getValue(),o=t.offset;return r[o+0]===s.x&&r[o+1]===s.y||(r[o+0]=s.x,r[o+1]=s.y,e=!0),e}updateVector3(t){let e=!1;const r=this.buffer,s=t.getValue(),o=t.offset;return r[o+0]===s.x&&r[o+1]===s.y&&r[o+2]===s.z||(r[o+0]=s.x,r[o+1]=s.y,r[o+2]=s.z,e=!0),e}updateVector4(t){let e=!1;const r=this.buffer,s=t.getValue(),o=t.offset;return r[o+0]===s.x&&r[o+1]===s.y&&r[o+2]===s.z&&r[o+4]===s.w||(r[o+0]=s.x,r[o+1]=s.y,r[o+2]=s.z,r[o+3]=s.w,e=!0),e}updateColor(t){let e=!1;const r=this.buffer,s=t.getValue(),o=t.offset;return r[o+0]===s.r&&r[o+1]===s.g&&r[o+2]===s.b||(r[o+0]=s.r,r[o+1]=s.g,r[o+2]=s.b,e=!0),e}updateMatrix3(t){let e=!1;const r=this.buffer,s=t.getValue().elements,o=t.offset;return r[o+0]===s[0]&&r[o+1]===s[1]&&r[o+2]===s[2]&&r[o+4]===s[3]&&r[o+5]===s[4]&&r[o+6]===s[5]&&r[o+8]===s[6]&&r[o+9]===s[7]&&r[o+10]===s[8]||(r[o+0]=s[0],r[o+1]=s[1],r[o+2]=s[2],r[o+4]=s[3],r[o+5]=s[4],r[o+6]=s[5],r[o+8]=s[6],r[o+9]=s[7],r[o+10]=s[8],e=!0),e}updateMatrix4(t){let e=!1;const r=this.buffer,s=t.getValue().elements,o=t.offset;return!1===arraysEqual(r,s,o)&&(r.set(s,o),e=!0),e}}function arraysEqual(t,e,r){for(let s=0,o=e.length;s<o;s++)if(t[r+s]!==e[s])return!1;return!0}export default UniformsGroup;
//# sourceMappingURL=/sm/d88fe223a6797de860fa911715357bd19a704b8049df79a3a61ad2909cb8aa7d.map