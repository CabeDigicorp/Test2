/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.160.1/examples/jsm/renderers/webgpu/nodes/WGSLNodeFunction.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import NodeFunction from"../../../nodes/core/NodeFunction.js";import NodeFunctionInput from"../../../nodes/core/NodeFunctionInput.js";const declarationRegexp=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+)?/i,propertiesRegexp=/[a-z_0-9]+|<(.*?)>+/gi,wgslTypeLib={f32:"float"},parse=t=>{const e=(t=t.trim()).match(declarationRegexp);if(null!==e&&4===e.length){const o=e[2],n=[];let s=null;for(;null!==(s=propertiesRegexp.exec(o));)n.push(s);const i=[];let c=0;for(;c<n.length;){const t=n[c++][0];let e=n[c++][0];e=wgslTypeLib[e]||e,c<n.length&&!0===n[c][0].startsWith("<")&&c++,i.push(new NodeFunctionInput(e,t))}const r=t.substring(e[0].length),p=void 0!==e[1]?e[1]:"";return{type:e[3]||"void",inputs:i,name:p,inputsCode:o,blockCode:r}}throw new Error("FunctionNode: Function is not a WGSL code.")};class WGSLNodeFunction extends NodeFunction{constructor(t){const{type:e,inputs:o,name:n,inputsCode:s,blockCode:i}=parse(t);super(e,o,n),this.inputsCode=s,this.blockCode=i}getCode(t=this.name){const e="void"!==this.type?"-> "+this.type:"";return`fn ${t} ( ${this.inputsCode.trim()} ) ${e}`+this.blockCode}}export default WGSLNodeFunction;
//# sourceMappingURL=/sm/3a4b4fd6461da17782b8670b86fcca321339ff32c2d004f5bc00a31132df9d86.map