/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.160.1/examples/jsm/renderers/webgpu/utils/WebGPUBindingUtils.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{GPUTextureAspect,GPUTextureViewDimension,GPUBufferBindingType,GPUTextureSampleType}from"./WebGPUConstants.js";import{FloatType}from"three";class WebGPUBindingUtils{constructor(e){this.backend=e}createBindingsLayout(e){const t=this.backend.device,r=[];let i=0;for(const t of e){const e={binding:i++,visibility:t.visibility};if(t.isUniformBuffer||t.isStorageBuffer){const r={};t.isStorageBuffer&&(r.type=GPUBufferBindingType.Storage),e.buffer=r}else if(t.isSampler){const r={};t.texture.isDepthTexture&&null!==t.texture.compareFunction&&(r.type="comparison"),e.sampler=r}else if(t.isSampledTexture&&t.texture.isVideoTexture)e.externalTexture={};else if(t.isSampledTexture&&t.store){const r=this.backend.get(t.texture).texture.format;e.storageTexture={format:r}}else if(t.isSampledTexture){const r={};t.texture.isDepthTexture?r.sampleType=GPUTextureSampleType.Depth:t.texture.isDataTexture&&t.texture.type===FloatType&&(r.sampleType=GPUTextureSampleType.UnfilterableFloat),t.isSampledCubeTexture?r.viewDimension=GPUTextureViewDimension.Cube:t.texture.isDataArrayTexture&&(r.viewDimension=GPUTextureViewDimension.TwoDArray),e.texture=r}else console.error(`WebGPUBindingUtils: Unsupported binding "${t}".`);r.push(e)}return t.createBindGroupLayout({entries:r})}createBindings(e){const t=this.backend.get(e),r=this.createBindingsLayout(e),i=this.createBindGroup(e,r);t.layout=r,t.group=i,t.bindings=e}updateBinding(e){const t=this.backend,r=t.device,i=e.buffer,s=t.get(e).buffer;r.queue.writeBuffer(s,0,i,0)}createBindGroup(e,t){const r=this.backend,i=r.device;let s=0;const n=[];for(const t of e){if(t.isUniformBuffer){const e=r.get(t);if(void 0===e.buffer){const r=t.byteLength,s=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,n=i.createBuffer({label:"bindingBuffer_"+t.name,size:r,usage:s});e.buffer=n}n.push({binding:s,resource:{buffer:e.buffer}})}else if(t.isStorageBuffer){const e=r.get(t);if(void 0===e.buffer){const i=t.attribute;e.buffer=r.get(i).buffer}n.push({binding:s,resource:{buffer:e.buffer}})}else if(t.isSampler){const e=r.get(t.texture);n.push({binding:s,resource:e.sampler})}else if(t.isSampledTexture){const e=r.get(t.texture);let u,o;if(u=t.isSampledCubeTexture?GPUTextureViewDimension.Cube:t.texture.isDataArrayTexture?GPUTextureViewDimension.TwoDArray:GPUTextureViewDimension.TwoD,void 0!==e.externalTexture)o=i.importExternalTexture({source:e.externalTexture});else{const r=GPUTextureAspect.All;o=e.texture.createView({aspect:r,dimension:u,mipLevelCount:t.store?1:e.mipLevelCount})}n.push({binding:s,resource:o})}s++}return i.createBindGroup({layout:t,entries:n})}}export default WebGPUBindingUtils;
//# sourceMappingURL=/sm/962c9fced567dfcf340c86369c6712515230eab9f26b6ef2b7db73e36eaa8f08.map