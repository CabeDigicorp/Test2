/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.160.1/examples/jsm/renderers/webgl/utils/WebGLTextureUtils.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{LinearFilter,LinearMipmapLinearFilter,LinearMipmapNearestFilter,NearestFilter,NearestMipmapLinearFilter,NearestMipmapNearestFilter,FloatType,MirroredRepeatWrapping,ClampToEdgeWrapping,RepeatWrapping,SRGBColorSpace,NeverCompare,AlwaysCompare,LessCompare,LessEqualCompare,EqualCompare,GreaterEqualCompare,GreaterCompare,NotEqualCompare}from"three";let wrappingToGL,filterToGL,compareToGL,initialized=!1;class WebGLTextureUtils{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,!1===initialized&&(this._init(this.gl),initialized=!0)}_init(e){wrappingToGL={[RepeatWrapping]:e.REPEAT,[ClampToEdgeWrapping]:e.CLAMP_TO_EDGE,[MirroredRepeatWrapping]:e.MIRRORED_REPEAT},filterToGL={[NearestFilter]:e.NEAREST,[NearestMipmapNearestFilter]:e.NEAREST_MIPMAP_NEAREST,[NearestMipmapLinearFilter]:e.NEAREST_MIPMAP_LINEAR,[LinearFilter]:e.LINEAR,[LinearMipmapNearestFilter]:e.LINEAR_MIPMAP_NEAREST,[LinearMipmapLinearFilter]:e.LINEAR_MIPMAP_LINEAR},compareToGL={[NeverCompare]:e.NEVER,[AlwaysCompare]:e.ALWAYS,[LessCompare]:e.LESS,[LessEqualCompare]:e.LEQUAL,[EqualCompare]:e.EQUAL,[GreaterEqualCompare]:e.GEQUAL,[GreaterCompare]:e.GREATER,[NotEqualCompare]:e.NOTEQUAL}}filterFallback(e){const{gl:r}=this;return e===NearestFilter||e===NearestMipmapNearestFilter||e===NearestMipmapLinearFilter?r.NEAREST:r.LINEAR}getGLTextureType(e){const{gl:r}=this;let t;return t=!0===e.isCubeTexture?r.TEXTURE_CUBE_MAP:!0===e.isDataArrayTexture?r.TEXTURE_2D_ARRAY:r.TEXTURE_2D,t}getInternalFormat(e,r,t,a,i=!1){const{gl:E,extensions:T}=this;if(null!==e){if(void 0!==E[e])return E[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let _=r;return r===E.RED&&(t===E.FLOAT&&(_=E.R32F),t===E.HALF_FLOAT&&(_=E.R16F),t===E.UNSIGNED_BYTE&&(_=E.R8)),r===E.RED_INTEGER&&(t===E.UNSIGNED_BYTE&&(_=E.R8UI),t===E.UNSIGNED_SHORT&&(_=E.R16UI),t===E.UNSIGNED_INT&&(_=E.R32UI),t===E.BYTE&&(_=E.R8I),t===E.SHORT&&(_=E.R16I),t===E.INT&&(_=E.R32I)),r===E.RG&&(t===E.FLOAT&&(_=E.RG32F),t===E.HALF_FLOAT&&(_=E.RG16F),t===E.UNSIGNED_BYTE&&(_=E.RG8)),r===E.RGBA&&(t===E.FLOAT&&(_=E.RGBA32F),t===E.HALF_FLOAT&&(_=E.RGBA16F),t===E.UNSIGNED_BYTE&&(_=a===SRGBColorSpace&&!1===i?E.SRGB8_ALPHA8:E.RGBA8),t===E.UNSIGNED_SHORT_4_4_4_4&&(_=E.RGBA4),t===E.UNSIGNED_SHORT_5_5_5_1&&(_=E.RGB5_A1)),r===E.DEPTH_COMPONENT&&(t===E.UNSIGNED_INT&&(_=E.DEPTH24_STENCIL8),t===E.FLOAT&&(_=E.DEPTH_COMPONENT32F)),r===E.DEPTH_STENCIL&&t===E.UNSIGNED_INT_24_8&&(_=E.DEPTH24_STENCIL8),_!==E.R16F&&_!==E.R32F&&_!==E.RG16F&&_!==E.RG32F&&_!==E.RGBA16F&&_!==E.RGBA32F||T.get("EXT_color_buffer_float"),_}setTextureParameters(e,r){const{gl:t,extensions:a}=this;if(t.texParameteri(e,t.TEXTURE_WRAP_S,wrappingToGL[r.wrapS]),t.texParameteri(e,t.TEXTURE_WRAP_T,wrappingToGL[r.wrapT]),e!==t.TEXTURE_3D&&e!==t.TEXTURE_2D_ARRAY||t.texParameteri(e,t.TEXTURE_WRAP_R,wrappingToGL[r.wrapR]),t.texParameteri(e,t.TEXTURE_MAG_FILTER,filterToGL[r.magFilter]),t.texParameteri(e,t.TEXTURE_MIN_FILTER,filterToGL[r.minFilter]),r.compareFunction&&(t.texParameteri(e,t.TEXTURE_COMPARE_MODE,t.COMPARE_REF_TO_TEXTURE),t.texParameteri(e,t.TEXTURE_COMPARE_FUNC,compareToGL[r.compareFunction])),!0===a.has("EXT_texture_filter_anisotropic")){if(r.magFilter===NearestFilter)return;if(r.minFilter!==NearestMipmapLinearFilter&&r.minFilter!==LinearMipmapLinearFilter)return;if(r.type===FloatType&&!1===a.has("OES_texture_float_linear"))return;r.anisotropy}}async copyTextureToBuffer(e,r,t,a,i){const{backend:E,gl:T}=this,{textureGPU:_,glFormat:R,glType:n}=this.backend.get(e),p=T.createFramebuffer();T.bindFramebuffer(T.READ_FRAMEBUFFER,p),T.framebufferTexture2D(T.READ_FRAMEBUFFER,T.COLOR_ATTACHMENT0,T.TEXTURE_2D,_,0);const l=this._getTypedArrayType(n),A=a*i,o=A*this._getBytesPerTexel(R),N=T.createBuffer();T.bindBuffer(T.PIXEL_PACK_BUFFER,N),T.bufferData(T.PIXEL_PACK_BUFFER,o,T.STREAM_READ),T.readPixels(r,t,a,i,R,n,0),T.bindBuffer(T.PIXEL_PACK_BUFFER,null),await E.utils._clientWaitAsync();const s=new l(A);return T.bindBuffer(T.PIXEL_PACK_BUFFER,N),T.getBufferSubData(T.PIXEL_PACK_BUFFER,0,s),T.bindBuffer(T.PIXEL_PACK_BUFFER,null),T.deleteFramebuffer(p),s}_getTypedArrayType(e){const{gl:r}=this;return e===r.UNSIGNED_BYTE?Uint8Array:e===r.UNSIGNED_SHORT_4_4_4_4||e===r.UNSIGNED_SHORT_5_5_5_1||e===r.UNSIGNED_SHORT_5_6_5||e===r.UNSIGNED_SHORT?Uint16Array:e===r.UNSIGNED_INT?Uint32Array:e===r.UNSIGNED_FLOAT?Float32Array:void 0}_getBytesPerTexel(e){const{gl:r}=this;return e===r.RGBA?4:e===r.RGB?3:e===r.ALPHA?1:void 0}}export default WebGLTextureUtils;
//# sourceMappingURL=/sm/97ff3392c389894988df7619f3bd706d06902300ddf40edafc8dbb7c1651e745.map