/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.160.1/examples/jsm/renderers/common/Textures.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import DataMap from"./DataMap.js";import{Vector3,DepthTexture,DepthStencilFormat,UnsignedInt248Type,LinearFilter,NearestFilter,EquirectangularReflectionMapping,EquirectangularRefractionMapping,CubeReflectionMapping,CubeRefractionMapping}from"three";const _size=new Vector3;class Textures extends DataMap{constructor(e,t){super(),this.backend=e,this.info=t}updateRenderTarget(e,t=0){const i=this.get(e),r=0===e.samples?1:e.samples,s=i.depthTextureMips||(i.depthTextureMips={});let a,n;e.isWebGLMultipleRenderTargets?(n=e.texture,a=e.texture[0]):(n=[e.texture],a=e.texture);const p=this.getSize(a),d=p.width>>t,u=p.height>>t;let o=e.depthTexture||s[t],h=!1;void 0===o&&(o=new DepthTexture,o.format=DepthStencilFormat,o.type=UnsignedInt248Type,o.image.width=d,o.image.height=u,s[t]=o),i.width===p.width&&p.height===i.height||(h=!0,o.needsUpdate=!0,o.image.width=d,o.image.height=u),i.width=p.width,i.height=p.height,i.textures=n,i.depthTexture=o,i.depth=e.depthBuffer,i.stencil=e.stencilBuffer,i.sampleCount!==r&&(h=!0,o.needsUpdate=!0,i.sampleCount=r);const l={sampleCount:r};for(let e=0;e<n.length;e++){const t=n[e];h&&(t.needsUpdate=!0),this.updateTexture(t,l)}if(this.updateTexture(o,l),!0!==i.initialized){i.initialized=!0;const t=()=>{if(e.removeEventListener("dispose",t),void 0!==n)for(let e=0;e<n.length;e++)this._destroyTexture(n[e]);else this._destroyTexture(a);this._destroyTexture(o)};e.addEventListener("dispose",t)}}updateTexture(e,t={}){const i=this.get(e);if(!0===i.initialized&&i.version===e.version)return;const r=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,s=this.backend;r&&!0===i.initialized&&(s.destroySampler(e),s.destroyTexture(e));const{width:a,height:n,depth:p}=this.getSize(e);if(t.width=a,t.height=n,t.depth=p,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,a,n):1,r||!0===e.isStorageTexture)s.createSampler(e),s.createTexture(e,t);else{if(!0!==i.initialized&&s.createSampler(e),e.version>0){const r=e.image;if(void 0===r)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(!1===r.complete)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(e.images){const i=[];for(const t of e.images)i.push(t);t.images=i}else t.image=r;void 0!==i.isDefaultTexture&&!0!==i.isDefaultTexture||(s.createTexture(e,t),i.isDefaultTexture=!1),s.updateTexture(e,t),t.needsMipmaps&&0===e.mipmaps.length&&s.generateMipmaps(e)}}else s.createDefaultTexture(e),i.isDefaultTexture=!0}if(!0!==i.initialized){i.initialized=!0,this.info.memory.textures++;const t=()=>{e.removeEventListener("dispose",t),this._destroyTexture(e),this.info.memory.textures--};e.addEventListener("dispose",t)}i.version=e.version}getSize(e,t=_size){let i=e.images?e.images[0]:e.image;return i?(void 0!==i.image&&(i=i.image),t.width=i.width,t.height=i.height,t.depth=e.isCubeTexture?6:i.depth||1):t.width=t.height=t.depth=1,t}getMipLevels(e,t,i){let r;return r=e.isCompressedTexture?e.mipmaps.length:Math.floor(Math.log2(Math.max(t,i)))+1,r}needsMipmaps(e){return!!this.isEnvironmentTexture(e)||(!0===e.isCompressedTexture||e.minFilter!==NearestFilter&&e.minFilter!==LinearFilter)}isEnvironmentTexture(e){const t=e.mapping;return t===EquirectangularReflectionMapping||t===EquirectangularRefractionMapping||t===CubeReflectionMapping||t===CubeRefractionMapping}_destroyTexture(e){this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e)}}export default Textures;
//# sourceMappingURL=/sm/a66291320d04f8dba907d47f8f19559547c928397ec6178ee88c46e54f897477.map