/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/helpers/GridHelper.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{LineSegments}from"../objects/LineSegments.js";import{LineBasicMaterial}from"../materials/LineBasicMaterial.js";import{Float32BufferAttribute}from"../core/BufferAttribute.js";import{BufferGeometry}from"../core/BufferGeometry.js";import{Color}from"../math/Color.js";class GridHelper extends LineSegments{constructor(e=10,t=10,r=4473924,o=8947848){r=new Color(r),o=new Color(o);const i=t/2,s=e/t,a=e/2,n=[],f=[];for(let e=0,m=0,l=-a;e<=t;e++,l+=s){n.push(-a,0,l,a,0,l),n.push(l,0,-a,l,0,a);const t=e===i?r:o;t.toArray(f,m),m+=3,t.toArray(f,m),m+=3,t.toArray(f,m),m+=3,t.toArray(f,m),m+=3}const m=new BufferGeometry;m.setAttribute("position",new Float32BufferAttribute(n,3)),m.setAttribute("color",new Float32BufferAttribute(f,3));super(m,new LineBasicMaterial({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}export{GridHelper};
//# sourceMappingURL=/sm/55561e4f328838e50f5dbcbc49991a512a46f451c56ed91051f59fb27a319e81.map