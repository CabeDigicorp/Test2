/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/materials/nodes/MeshMatcapNodeMaterial.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import NodeMaterial from"./NodeMaterial.js";import{materialReference}from"../../nodes/accessors/MaterialReferenceNode.js";import{diffuseColor}from"../../nodes/core/PropertyNode.js";import{vec3}from"../../nodes/tsl/TSLBase.js";import{mix}from"../../nodes/math/MathNode.js";import{matcapUV}from"../../nodes/utils/MatcapUVNode.js";import{MeshMatcapMaterial}from"../MeshMatcapMaterial.js";const _defaultValues=new MeshMatcapMaterial;class MeshMatcapNodeMaterial extends NodeMaterial{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.lights=!1,this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(_defaultValues),this.setValues(e)}setupVariants(e){const a=matcapUV;let t;t=e.material.matcap?materialReference("matcap","texture").context({getUV:()=>a}):vec3(mix(.2,.8,a.y)),diffuseColor.rgb.mulAssign(t.rgb)}}export default MeshMatcapNodeMaterial;
//# sourceMappingURL=/sm/b1b968d54f14c62292aa0d4c68348be23273041c14724b39032a12174829b6f6.map