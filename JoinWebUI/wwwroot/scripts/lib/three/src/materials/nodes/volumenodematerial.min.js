/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/materials/nodes/VolumeNodeMaterial.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import NodeMaterial from"./NodeMaterial.js";import{property}from"../../nodes/core/PropertyNode.js";import{materialReference}from"../../nodes/accessors/MaterialReferenceNode.js";import{modelWorldMatrixInverse}from"../../nodes/accessors/ModelNode.js";import{cameraPosition}from"../../nodes/accessors/Camera.js";import{positionGeometry}from"../../nodes/accessors/Position.js";import{Fn,varying,float,vec2,vec3,vec4}from"../../nodes/tsl/TSLBase.js";import{min,max}from"../../nodes/math/MathNode.js";import{Loop,Break}from"../../nodes/utils/LoopNode.js";import{texture3D}from"../../nodes/accessors/Texture3DNode.js";class VolumeNodeMaterial extends NodeMaterial{static get type(){return"VolumeNodeMaterial"}constructor(e={}){super(),this.lights=!1,this.isVolumeNodeMaterial=!0,this.testNode=null,this.setValues(e)}setup(e){const o=texture3D(this.map,null,0),r=Fn((({orig:e,dir:o})=>{const r=vec3(-.5),t=vec3(.5),s=o.reciprocal(),a=r.sub(e).mul(s),i=t.sub(e).mul(s),n=min(a,i),m=max(a,i),d=max(n.x,max(n.y,n.z)),l=min(m.x,min(m.y,m.z));return vec2(d,l)}));this.fragmentNode=Fn((()=>{const e=varying(vec3(modelWorldMatrixInverse.mul(vec4(cameraPosition,1)))),t=varying(positionGeometry.sub(e)).normalize(),s=vec2(r({orig:e,dir:t})).toVar();s.x.greaterThan(s.y).discard(),s.assign(vec2(max(s.x,0),s.y));const a=vec3(e.add(s.x.mul(t))).toVar(),i=vec3(t.abs().reciprocal()).toVar(),n=float(min(i.x,min(i.y,i.z))).toVar("delta");n.divAssign(materialReference("steps","float"));const m=vec4(materialReference("base","color"),0).toVar();return Loop({type:"float",start:s.x,end:s.y,update:"+= delta"},(()=>{const e=property("float","d").assign(o.uv(a.add(.5)).r);null!==this.testNode?this.testNode({map:o,mapValue:e,probe:a,finalColor:m}).append():(m.a.assign(1),Break()),a.addAssign(t.mul(n))})),m.a.equal(0).discard(),vec4(m)}))(),super.setup(e)}}export default VolumeNodeMaterial;
//# sourceMappingURL=/sm/1a1d42a634f1ae2647493586db44a55e44c4ab7a876203636f6f54b86d1403d0.map