/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/materials/nodes/MeshPhongNodeMaterial.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import NodeMaterial from"./NodeMaterial.js";import{shininess,specularColor}from"../../nodes/core/PropertyNode.js";import{materialShininess,materialSpecular}from"../../nodes/accessors/MaterialNode.js";import{float}from"../../nodes/tsl/TSLBase.js";import BasicEnvironmentNode from"../../nodes/lighting/BasicEnvironmentNode.js";import PhongLightingModel from"../../nodes/functions/PhongLightingModel.js";import{MeshPhongMaterial}from"../MeshPhongMaterial.js";const _defaultValues=new MeshPhongMaterial;class MeshPhongNodeMaterial extends NodeMaterial{static get type(){return"MeshPhongNodeMaterial"}constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(_defaultValues),this.setValues(e)}setupEnvironment(e){const s=super.setupEnvironment(e);return s?new BasicEnvironmentNode(s):null}setupLightingModel(){return new PhongLightingModel}setupVariants(){const e=(this.shininessNode?float(this.shininessNode):materialShininess).max(1e-4);shininess.assign(e);const s=this.specularNode||materialSpecular;specularColor.assign(s)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}export default MeshPhongNodeMaterial;
//# sourceMappingURL=/sm/28a032eb5c4b07aab9adf305c5b7c5a728e264c88e4e5a8ddf1f0304b7499476.map