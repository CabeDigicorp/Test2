/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/renderers/common/RenderObject.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{hashString}from"../../nodes/core/NodeUtils.js";import ClippingContext from"./ClippingContext.js";let _id=0;function getKeys(t){const e=Object.keys(t);let i=Object.getPrototypeOf(t);for(;i;){const t=Object.getOwnPropertyDescriptors(i);for(const i in t)if(void 0!==t[i]){const s=t[i];s&&"function"==typeof s.get&&e.push(i)}i=Object.getPrototypeOf(i)}return e}export default class RenderObject{constructor(t,e,i,s,n,r,o,a,h){this._nodes=t,this._geometries=e,this.id=_id++,this.renderer=i,this.object=s,this.material=n,this.scene=r,this.camera=o,this.lightsNode=a,this.context=h,this.geometry=s.geometry,this.version=n.version,this.drawRange=null,this.attributes=null,this.pipeline=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.updateClipping(h.clippingContext),this.clippingContextVersion=this.clippingContext.version,this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.material.addEventListener("dispose",this.onMaterialDispose)}updateClipping(t){const e=this.material;let i=this.clippingContext;Array.isArray(e.clippingPlanes)?(i!==t&&i||(i=new ClippingContext,this.clippingContext=i),i.update(t,e)):this.clippingContext!==t&&(this.clippingContext=t)}get clippingNeedsUpdate(){return this.clippingContext.version!==this.clippingContextVersion&&(this.clippingContextVersion=this.clippingContext.version,!0)}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().monitor)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getIndex(){return this._geometries.getIndex(this)}getIndirect(){return this._geometries.getIndirect(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}getAttributes(){if(null!==this.attributes)return this.attributes;const t=this.getNodeBuilderState().nodeAttributes,e=this.geometry,i=[],s=new Set;for(const n of t){const t=n.node&&n.node.attribute?n.node.attribute:e.getAttribute(n.name);if(void 0===t)continue;i.push(t);const r=t.isInterleavedBufferAttribute?t.data:t;s.add(r)}return this.attributes=i,this.vertexBuffers=Array.from(s.values()),i}getVertexBuffers(){return null===this.vertexBuffers&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:t,material:e,geometry:i,group:s,drawRange:n}=this,r=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),o=this.getIndex(),a=null!==o,h=i.isInstancedBufferGeometry?i.instanceCount:t.count>1?t.count:1;if(0===h)return null;if(r.instanceCount=h,!0===t.isBatchedMesh)return r;let l=1;!0!==e.wireframe||t.isPoints||t.isLineSegments||t.isLine||t.isLineLoop||(l=2);let u=n.start*l,c=(n.start+n.count)*l;null!==s&&(u=Math.max(u,s.start*l),c=Math.min(c,(s.start+s.count)*l));const g=i.attributes.position;let d=1/0;a?d=o.count:null!=g&&(d=g.count),u=Math.max(u,0),c=Math.min(c,d);const p=c-u;return p<0||p===1/0?null:(r.vertexCount=p,r.firstVertex=u,r)}getGeometryCacheKey(){const{geometry:t}=this;let e="";for(const i of Object.keys(t.attributes).sort()){const s=t.attributes[i];e+=i+",",s.data&&(e+=s.data.stride+","),s.offset&&(e+=s.offset+","),s.itemSize&&(e+=s.itemSize+","),s.normalized&&(e+="n,")}return t.index&&(e+="index,"),e}getMaterialCacheKey(){const{object:t,material:e}=this;let i=e.customProgramCacheKey();for(const t of getKeys(e)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(t))continue;const s=e[t];let n;if(null!==s){const t=typeof s;"number"===t?n=0!==s?"1":"0":"object"===t?(n="{",s.isTexture&&(n+=s.mapping),n+="}"):n=String(s)}else n=String(s);i+=n+","}return i+=this.clippingContext.cacheKey+",",t.geometry&&(i+=this.getGeometryCacheKey()),t.skeleton&&(i+=t.skeleton.bones.length+","),t.morphTargetInfluences&&(i+=t.morphTargetInfluences.length+","),t.isBatchedMesh&&(i+=t._matricesTexture.uuid+",",null!==t._colorsTexture&&(i+=t._colorsTexture.uuid+",")),t.count>1&&(i+=t.uuid+","),hashString(i)}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let t=this._nodes.getCacheKey(this.scene,this.lightsNode);return this.object.receiveShadow&&(t+=1),t}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.onDispose()}}
//# sourceMappingURL=/sm/b31b04098663c65d0f7381779504909b4d20c6dec0337b9bd8f3d7433096142e.map