/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/renderers/common/Textures.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import DataMap from"./DataMap.js";import{Vector3}from"../../math/Vector3.js";import{DepthTexture}from"../../textures/DepthTexture.js";import{DepthStencilFormat,DepthFormat,UnsignedIntType,UnsignedInt248Type,EquirectangularReflectionMapping,EquirectangularRefractionMapping,CubeReflectionMapping,CubeRefractionMapping,UnsignedByteType}from"../../constants.js";const _size=new Vector3;class Textures extends DataMap{constructor(e,t,i){super(),this.renderer=e,this.backend=t,this.info=i}updateRenderTarget(e,t=0){const i=this.get(e),r=0===e.samples?1:e.samples,s=i.depthTextureMips||(i.depthTextureMips={}),n=e.textures,a=this.getSize(n[0]),p=a.width>>t,o=a.height>>t;let d=e.depthTexture||s[t];const u=!0===e.depthBuffer||!0===e.stencilBuffer;let h=!1;void 0===d&&u&&(d=new DepthTexture,d.format=e.stencilBuffer?DepthStencilFormat:DepthFormat,d.type=e.stencilBuffer?UnsignedInt248Type:UnsignedIntType,d.image.width=p,d.image.height=o,s[t]=d),i.width===a.width&&a.height===i.height||(h=!0,d&&(d.needsUpdate=!0,d.image.width=p,d.image.height=o)),i.width=a.width,i.height=a.height,i.textures=n,i.depthTexture=d||null,i.depth=e.depthBuffer,i.stencil=e.stencilBuffer,i.renderTarget=e,i.sampleCount!==r&&(h=!0,d&&(d.needsUpdate=!0),i.sampleCount=r);const g={sampleCount:r};for(let e=0;e<n.length;e++){const t=n[e];h&&(t.needsUpdate=!0),this.updateTexture(t,g)}if(d&&this.updateTexture(d,g),!0!==i.initialized){i.initialized=!0;const t=()=>{e.removeEventListener("dispose",t);for(let e=0;e<n.length;e++)this._destroyTexture(n[e]);d&&this._destroyTexture(d),this.delete(e)};e.addEventListener("dispose",t)}}updateTexture(e,t={}){const i=this.get(e);if(!0===i.initialized&&i.version===e.version)return;const r=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,s=this.backend;if(r&&!0===i.initialized&&(s.destroySampler(e),s.destroyTexture(e)),e.isFramebufferTexture){const t=this.renderer.getRenderTarget();e.type=t?t.texture.type:UnsignedByteType}const{width:n,height:a,depth:p}=this.getSize(e);if(t.width=n,t.height=a,t.depth=p,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,n,a):1,r||!0===e.isStorageTexture)s.createSampler(e),s.createTexture(e,t),i.generation=e.version;else{if(!0!==i.initialized&&s.createSampler(e),e.version>0){const r=e.image;if(void 0===r)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(!1===r.complete)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(e.images){const i=[];for(const t of e.images)i.push(t);t.images=i}else t.image=r;void 0!==i.isDefaultTexture&&!0!==i.isDefaultTexture||(s.createTexture(e,t),i.isDefaultTexture=!1,i.generation=e.version),!0===e.source.dataReady&&s.updateTexture(e,t),t.needsMipmaps&&0===e.mipmaps.length&&s.generateMipmaps(e)}}else s.createDefaultTexture(e),i.isDefaultTexture=!0,i.generation=e.version}if(!0!==i.initialized){i.initialized=!0,i.generation=e.version,this.info.memory.textures++;const t=()=>{e.removeEventListener("dispose",t),this._destroyTexture(e),this.info.memory.textures--};e.addEventListener("dispose",t)}i.version=e.version}getSize(e,t=_size){let i=e.images?e.images[0]:e.image;return i?(void 0!==i.image&&(i=i.image),t.width=i.width,t.height=i.height,t.depth=e.isCubeTexture?6:i.depth||1):t.width=t.height=t.depth=1,t}getMipLevels(e,t,i){let r;return r=e.isCompressedTexture?e.mipmaps.length:Math.floor(Math.log2(Math.max(t,i)))+1,r}needsMipmaps(e){return this.isEnvironmentTexture(e)||!0===e.isCompressedTexture||e.generateMipmaps}isEnvironmentTexture(e){const t=e.mapping;return t===EquirectangularReflectionMapping||t===EquirectangularRefractionMapping||t===CubeReflectionMapping||t===CubeRefractionMapping}_destroyTexture(e){this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e)}}export default Textures;
//# sourceMappingURL=/sm/aab0c7bfccd0ad1d293b876aff63c4b0d74864ee6ea3b021d3ef88ba93122685.map