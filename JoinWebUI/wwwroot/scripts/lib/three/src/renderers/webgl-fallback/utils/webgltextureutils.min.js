/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/renderers/webgl-fallback/utils/WebGLTextureUtils.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{LinearFilter,LinearMipmapLinearFilter,LinearMipmapNearestFilter,NearestFilter,NearestMipmapLinearFilter,NearestMipmapNearestFilter,FloatType,MirroredRepeatWrapping,ClampToEdgeWrapping,RepeatWrapping,SRGBColorSpace,NeverCompare,AlwaysCompare,LessCompare,LessEqualCompare,EqualCompare,GreaterEqualCompare,GreaterCompare,NotEqualCompare}from"../../../constants.js";let wrappingToGL,filterToGL,compareToGL,initialized=!1;class WebGLTextureUtils{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},!1===initialized&&(this._init(this.gl),initialized=!0)}_init(e){wrappingToGL={[RepeatWrapping]:e.REPEAT,[ClampToEdgeWrapping]:e.CLAMP_TO_EDGE,[MirroredRepeatWrapping]:e.MIRRORED_REPEAT},filterToGL={[NearestFilter]:e.NEAREST,[NearestMipmapNearestFilter]:e.NEAREST_MIPMAP_NEAREST,[NearestMipmapLinearFilter]:e.NEAREST_MIPMAP_LINEAR,[LinearFilter]:e.LINEAR,[LinearMipmapNearestFilter]:e.LINEAR_MIPMAP_NEAREST,[LinearMipmapLinearFilter]:e.LINEAR_MIPMAP_LINEAR},compareToGL={[NeverCompare]:e.NEVER,[AlwaysCompare]:e.ALWAYS,[LessCompare]:e.LESS,[LessEqualCompare]:e.LEQUAL,[EqualCompare]:e.EQUAL,[GreaterEqualCompare]:e.GEQUAL,[GreaterCompare]:e.GREATER,[NotEqualCompare]:e.NOTEQUAL}}filterFallback(e){const{gl:t}=this;return e===NearestFilter||e===NearestMipmapNearestFilter||e===NearestMipmapLinearFilter?t.NEAREST:t.LINEAR}getGLTextureType(e){const{gl:t}=this;let r;return r=!0===e.isCubeTexture?t.TEXTURE_CUBE_MAP:!0===e.isDataArrayTexture||!0===e.isCompressedArrayTexture?t.TEXTURE_2D_ARRAY:!0===e.isData3DTexture?t.TEXTURE_3D:t.TEXTURE_2D,r}getInternalFormat(e,t,r,a,i=!1){const{gl:T,extensions:E}=this;if(null!==e){if(void 0!==T[e])return T[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let R=t;return t===T.RED&&(r===T.FLOAT&&(R=T.R32F),r===T.HALF_FLOAT&&(R=T.R16F),r===T.UNSIGNED_BYTE&&(R=T.R8),r===T.UNSIGNED_SHORT&&(R=T.R16),r===T.UNSIGNED_INT&&(R=T.R32UI),r===T.BYTE&&(R=T.R8I),r===T.SHORT&&(R=T.R16I),r===T.INT&&(R=T.R32I)),t===T.RED_INTEGER&&(r===T.UNSIGNED_BYTE&&(R=T.R8UI),r===T.UNSIGNED_SHORT&&(R=T.R16UI),r===T.UNSIGNED_INT&&(R=T.R32UI),r===T.BYTE&&(R=T.R8I),r===T.SHORT&&(R=T.R16I),r===T.INT&&(R=T.R32I)),t===T.RG&&(r===T.FLOAT&&(R=T.RG32F),r===T.HALF_FLOAT&&(R=T.RG16F),r===T.UNSIGNED_BYTE&&(R=T.RG8),r===T.UNSIGNED_SHORT&&(R=T.RG16),r===T.UNSIGNED_INT&&(R=T.RG32UI),r===T.BYTE&&(R=T.RG8I),r===T.SHORT&&(R=T.RG16I),r===T.INT&&(R=T.RG32I)),t===T.RG_INTEGER&&(r===T.UNSIGNED_BYTE&&(R=T.RG8UI),r===T.UNSIGNED_SHORT&&(R=T.RG16UI),r===T.UNSIGNED_INT&&(R=T.RG32UI),r===T.BYTE&&(R=T.RG8I),r===T.SHORT&&(R=T.RG16I),r===T.INT&&(R=T.RG32I)),t===T.RGB&&(r===T.FLOAT&&(R=T.RGB32F),r===T.HALF_FLOAT&&(R=T.RGB16F),r===T.UNSIGNED_BYTE&&(R=T.RGB8),r===T.UNSIGNED_SHORT&&(R=T.RGB16),r===T.UNSIGNED_INT&&(R=T.RGB32UI),r===T.BYTE&&(R=T.RGB8I),r===T.SHORT&&(R=T.RGB16I),r===T.INT&&(R=T.RGB32I),r===T.UNSIGNED_BYTE&&(R=a===SRGBColorSpace&&!1===i?T.SRGB8:T.RGB8),r===T.UNSIGNED_SHORT_5_6_5&&(R=T.RGB565),r===T.UNSIGNED_SHORT_5_5_5_1&&(R=T.RGB5_A1),r===T.UNSIGNED_SHORT_4_4_4_4&&(R=T.RGB4),r===T.UNSIGNED_INT_5_9_9_9_REV&&(R=T.RGB9_E5)),t===T.RGB_INTEGER&&(r===T.UNSIGNED_BYTE&&(R=T.RGB8UI),r===T.UNSIGNED_SHORT&&(R=T.RGB16UI),r===T.UNSIGNED_INT&&(R=T.RGB32UI),r===T.BYTE&&(R=T.RGB8I),r===T.SHORT&&(R=T.RGB16I),r===T.INT&&(R=T.RGB32I)),t===T.RGBA&&(r===T.FLOAT&&(R=T.RGBA32F),r===T.HALF_FLOAT&&(R=T.RGBA16F),r===T.UNSIGNED_BYTE&&(R=T.RGBA8),r===T.UNSIGNED_SHORT&&(R=T.RGBA16),r===T.UNSIGNED_INT&&(R=T.RGBA32UI),r===T.BYTE&&(R=T.RGBA8I),r===T.SHORT&&(R=T.RGBA16I),r===T.INT&&(R=T.RGBA32I),r===T.UNSIGNED_BYTE&&(R=a===SRGBColorSpace&&!1===i?T.SRGB8_ALPHA8:T.RGBA8),r===T.UNSIGNED_SHORT_4_4_4_4&&(R=T.RGBA4),r===T.UNSIGNED_SHORT_5_5_5_1&&(R=T.RGB5_A1)),t===T.RGBA_INTEGER&&(r===T.UNSIGNED_BYTE&&(R=T.RGBA8UI),r===T.UNSIGNED_SHORT&&(R=T.RGBA16UI),r===T.UNSIGNED_INT&&(R=T.RGBA32UI),r===T.BYTE&&(R=T.RGBA8I),r===T.SHORT&&(R=T.RGBA16I),r===T.INT&&(R=T.RGBA32I)),t===T.DEPTH_COMPONENT&&(r===T.UNSIGNED_INT&&(R=T.DEPTH24_STENCIL8),r===T.FLOAT&&(R=T.DEPTH_COMPONENT32F)),t===T.DEPTH_STENCIL&&r===T.UNSIGNED_INT_24_8&&(R=T.DEPTH24_STENCIL8),R!==T.R16F&&R!==T.R32F&&R!==T.RG16F&&R!==T.RG32F&&R!==T.RGBA16F&&R!==T.RGBA32F||E.get("EXT_color_buffer_float"),R}setTextureParameters(e,t){const{gl:r,extensions:a,backend:i}=this;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,t.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,t.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE),r.texParameteri(e,r.TEXTURE_WRAP_S,wrappingToGL[t.wrapS]),r.texParameteri(e,r.TEXTURE_WRAP_T,wrappingToGL[t.wrapT]),e!==r.TEXTURE_3D&&e!==r.TEXTURE_2D_ARRAY||r.texParameteri(e,r.TEXTURE_WRAP_R,wrappingToGL[t.wrapR]),r.texParameteri(e,r.TEXTURE_MAG_FILTER,filterToGL[t.magFilter]);const T=void 0!==t.mipmaps&&t.mipmaps.length>0,E=t.minFilter===LinearFilter&&T?LinearMipmapLinearFilter:t.minFilter;if(r.texParameteri(e,r.TEXTURE_MIN_FILTER,filterToGL[E]),t.compareFunction&&(r.texParameteri(e,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(e,r.TEXTURE_COMPARE_FUNC,compareToGL[t.compareFunction])),!0===a.has("EXT_texture_filter_anisotropic")){if(t.magFilter===NearestFilter)return;if(t.minFilter!==NearestMipmapLinearFilter&&t.minFilter!==LinearMipmapLinearFilter)return;if(t.type===FloatType&&!1===a.has("OES_texture_float_linear"))return;if(t.anisotropy>1){const T=a.get("EXT_texture_filter_anisotropic");r.texParameterf(e,T.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,i.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:t,backend:r,defaultTextures:a}=this,i=this.getGLTextureType(e);let T=a[i];void 0===T&&(T=t.createTexture(),r.state.bindTexture(i,T),t.texParameteri(i,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(i,t.TEXTURE_MAG_FILTER,t.NEAREST),a[i]=T),r.set(e,{textureGPU:T,glTextureType:i,isDefault:!0})}createTexture(e,t){const{gl:r,backend:a}=this,{levels:i,width:T,height:E,depth:R}=t,_=a.utils.convert(e.format,e.colorSpace),n=a.utils.convert(e.type),s=this.getInternalFormat(e.internalFormat,_,n,e.colorSpace,e.isVideoTexture),u=r.createTexture(),l=this.getGLTextureType(e);a.state.bindTexture(l,u),this.setTextureParameters(l,e),e.isDataArrayTexture||e.isCompressedArrayTexture?r.texStorage3D(r.TEXTURE_2D_ARRAY,i,s,T,E,R):e.isData3DTexture?r.texStorage3D(r.TEXTURE_3D,i,s,T,E,R):e.isVideoTexture||r.texStorage2D(l,i,s,T,E),a.set(e,{textureGPU:u,glTextureType:l,glFormat:_,glType:n,glInternalFormat:s})}copyBufferToTexture(e,t){const{gl:r,backend:a}=this,{textureGPU:i,glTextureType:T,glFormat:E,glType:R}=a.get(t),{width:_,height:n}=t.source.data;r.bindBuffer(r.PIXEL_UNPACK_BUFFER,e),a.state.bindTexture(T,i),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,!1),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),r.texSubImage2D(T,0,0,0,_,n,E,R,0),r.bindBuffer(r.PIXEL_UNPACK_BUFFER,null),a.state.unbindTexture()}updateTexture(e,t){const{gl:r}=this,{width:a,height:i}=t,{textureGPU:T,glTextureType:E,glFormat:R,glType:_,glInternalFormat:n}=this.backend.get(e);if(e.isRenderTargetTexture||void 0===T)return;const s=e=>e.isDataTexture?e.image.data:e instanceof ImageBitmap||e instanceof OffscreenCanvas||e instanceof HTMLImageElement||e instanceof HTMLCanvasElement?e:e.data;if(this.backend.state.bindTexture(E,T),this.setTextureParameters(E,e),e.isCompressedTexture){const a=e.mipmaps,i=t.image;for(let t=0;t<a.length;t++){const T=a[t];e.isCompressedArrayTexture?e.format!==r.RGBA?null!==R?r.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,t,0,0,0,T.width,T.height,i.depth,R,T.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):r.texSubImage3D(r.TEXTURE_2D_ARRAY,t,0,0,0,T.width,T.height,i.depth,R,_,T.data):null!==R?r.compressedTexSubImage2D(r.TEXTURE_2D,t,0,0,T.width,T.height,R,T.data):console.warn("Unsupported compressed texture format")}}else if(e.isCubeTexture){const e=t.images;for(let t=0;t<6;t++){const T=s(e[t]);r.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,a,i,R,_,T)}}else if(e.isDataArrayTexture){const e=t.image;r.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,e.width,e.height,e.depth,R,_,e.data)}else if(e.isData3DTexture){const e=t.image;r.texSubImage3D(r.TEXTURE_3D,0,0,0,0,e.width,e.height,e.depth,R,_,e.data)}else if(e.isVideoTexture)e.update(),r.texImage2D(E,0,n,R,_,t.image);else{const e=s(t.image);r.texSubImage2D(E,0,0,0,a,i,R,_,e)}}generateMipmaps(e){const{gl:t,backend:r}=this,{textureGPU:a,glTextureType:i}=r.get(e);r.state.bindTexture(i,a),t.generateMipmap(i)}deallocateRenderBuffers(e){const{gl:t,backend:r}=this;if(e){const a=r.get(e);if(a.renderBufferStorageSetup=void 0,a.framebuffers){for(const e in a.framebuffers)t.deleteFramebuffer(a.framebuffers[e]);delete a.framebuffers}if(a.depthRenderbuffer&&(t.deleteRenderbuffer(a.depthRenderbuffer),delete a.depthRenderbuffer),a.stencilRenderbuffer&&(t.deleteRenderbuffer(a.stencilRenderbuffer),delete a.stencilRenderbuffer),a.msaaFrameBuffer&&(t.deleteFramebuffer(a.msaaFrameBuffer),delete a.msaaFrameBuffer),a.msaaRenderbuffers){for(let e=0;e<a.msaaRenderbuffers.length;e++)t.deleteRenderbuffer(a.msaaRenderbuffers[e]);delete a.msaaRenderbuffers}}}destroyTexture(e){const{gl:t,backend:r}=this,{textureGPU:a,renderTarget:i}=r.get(e);this.deallocateRenderBuffers(i),t.deleteTexture(a),r.delete(e)}copyTextureToTexture(e,t,r=null,a=null,i=0){const{gl:T,backend:E}=this,{state:R}=this.backend,{textureGPU:_,glTextureType:n,glType:s,glFormat:u}=E.get(t);let l,N,f,o,p,A;null!==r?(l=r.max.x-r.min.x,N=r.max.y-r.min.y,f=r.min.x,o=r.min.y):(l=e.image.width,N=e.image.height,f=0,o=0),null!==a?(p=a.x,A=a.y):(p=0,A=0),R.bindTexture(n,_),T.pixelStorei(T.UNPACK_ALIGNMENT,t.unpackAlignment),T.pixelStorei(T.UNPACK_FLIP_Y_WEBGL,t.flipY),T.pixelStorei(T.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),T.pixelStorei(T.UNPACK_ALIGNMENT,t.unpackAlignment);const I=T.getParameter(T.UNPACK_ROW_LENGTH),m=T.getParameter(T.UNPACK_IMAGE_HEIGHT),F=T.getParameter(T.UNPACK_SKIP_PIXELS),U=T.getParameter(T.UNPACK_SKIP_ROWS),G=T.getParameter(T.UNPACK_SKIP_IMAGES),S=e.isCompressedTexture?e.mipmaps[i]:e.image;if(T.pixelStorei(T.UNPACK_ROW_LENGTH,S.width),T.pixelStorei(T.UNPACK_IMAGE_HEIGHT,S.height),T.pixelStorei(T.UNPACK_SKIP_PIXELS,f),T.pixelStorei(T.UNPACK_SKIP_ROWS,o),e.isRenderTargetTexture||e.isDepthTexture){const r=E.get(e),a=E.get(t),i=E.get(r.renderTarget),_=E.get(a.renderTarget),n=i.framebuffers[r.cacheKey],s=_.framebuffers[a.cacheKey];R.bindFramebuffer(T.READ_FRAMEBUFFER,n),R.bindFramebuffer(T.DRAW_FRAMEBUFFER,s);let u=T.COLOR_BUFFER_BIT;e.isDepthTexture&&(u=T.DEPTH_BUFFER_BIT),T.blitFramebuffer(f,o,l,N,p,A,l,N,u,T.NEAREST),R.bindFramebuffer(T.READ_FRAMEBUFFER,null),R.bindFramebuffer(T.DRAW_FRAMEBUFFER,null)}else e.isDataTexture?T.texSubImage2D(T.TEXTURE_2D,i,p,A,l,N,u,s,S.data):e.isCompressedTexture?T.compressedTexSubImage2D(T.TEXTURE_2D,i,p,A,S.width,S.height,u,S.data):T.texSubImage2D(T.TEXTURE_2D,i,p,A,l,N,u,s,S);T.pixelStorei(T.UNPACK_ROW_LENGTH,I),T.pixelStorei(T.UNPACK_IMAGE_HEIGHT,m),T.pixelStorei(T.UNPACK_SKIP_PIXELS,F),T.pixelStorei(T.UNPACK_SKIP_ROWS,U),T.pixelStorei(T.UNPACK_SKIP_IMAGES,G),0===i&&t.generateMipmaps&&T.generateMipmap(T.TEXTURE_2D),R.unbindTexture()}copyFramebufferToTexture(e,t,r){const{gl:a}=this,{state:i}=this.backend,{textureGPU:T}=this.backend.get(e),{x:E,y:R,z:_,w:n}=r,s=!0===e.isDepthTexture||t.renderTarget&&t.renderTarget.samples>0,u=t.renderTarget?t.renderTarget.height:this.backend.gerDrawingBufferSize().y;if(s){const r=0!==E||0!==R;let s,l;if(!0===e.isDepthTexture?(s=a.DEPTH_BUFFER_BIT,l=a.DEPTH_ATTACHMENT,t.stencil&&(s|=a.STENCIL_BUFFER_BIT)):(s=a.COLOR_BUFFER_BIT,l=a.COLOR_ATTACHMENT0),r){const e=this.backend.get(t.renderTarget),r=e.framebuffers[t.getCacheKey()],l=e.msaaFrameBuffer;i.bindFramebuffer(a.DRAW_FRAMEBUFFER,r),i.bindFramebuffer(a.READ_FRAMEBUFFER,l);const N=u-R-n;a.blitFramebuffer(E,N,E+_,N+n,E,N,E+_,N+n,s,a.NEAREST),i.bindFramebuffer(a.READ_FRAMEBUFFER,r),i.bindTexture(a.TEXTURE_2D,T),a.copyTexSubImage2D(a.TEXTURE_2D,0,0,0,E,N,_,n),i.unbindTexture()}else{const e=a.createFramebuffer();i.bindFramebuffer(a.DRAW_FRAMEBUFFER,e),a.framebufferTexture2D(a.DRAW_FRAMEBUFFER,l,a.TEXTURE_2D,T,0),a.blitFramebuffer(0,0,_,n,0,0,_,n,s,a.NEAREST),a.deleteFramebuffer(e)}}else i.bindTexture(a.TEXTURE_2D,T),a.copyTexSubImage2D(a.TEXTURE_2D,0,0,0,E,u-n-R,_,n),i.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(t)}setupRenderBufferStorage(e,t){const{gl:r}=this,a=t.renderTarget,{samples:i,depthTexture:T,depthBuffer:E,stencilBuffer:R,width:_,height:n}=a;if(r.bindRenderbuffer(r.RENDERBUFFER,e),E&&!R){let t=r.DEPTH_COMPONENT24;i>0?(T&&T.isDepthTexture&&T.type===r.FLOAT&&(t=r.DEPTH_COMPONENT32F),r.renderbufferStorageMultisample(r.RENDERBUFFER,i,t,_,n)):r.renderbufferStorage(r.RENDERBUFFER,t,_,n),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,e)}else E&&R&&(i>0?r.renderbufferStorageMultisample(r.RENDERBUFFER,i,r.DEPTH24_STENCIL8,_,n):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,_,n),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,e))}async copyTextureToBuffer(e,t,r,a,i,T){const{backend:E,gl:R}=this,{textureGPU:_,glFormat:n,glType:s}=this.backend.get(e),u=R.createFramebuffer();R.bindFramebuffer(R.READ_FRAMEBUFFER,u);const l=e.isCubeTexture?R.TEXTURE_CUBE_MAP_POSITIVE_X+T:R.TEXTURE_2D;R.framebufferTexture2D(R.READ_FRAMEBUFFER,R.COLOR_ATTACHMENT0,l,_,0);const N=this._getTypedArrayType(s),f=a*i*this._getBytesPerTexel(s,n),o=R.createBuffer();R.bindBuffer(R.PIXEL_PACK_BUFFER,o),R.bufferData(R.PIXEL_PACK_BUFFER,f,R.STREAM_READ),R.readPixels(t,r,a,i,n,s,0),R.bindBuffer(R.PIXEL_PACK_BUFFER,null),await E.utils._clientWaitAsync();const p=new N(f/N.BYTES_PER_ELEMENT);return R.bindBuffer(R.PIXEL_PACK_BUFFER,o),R.getBufferSubData(R.PIXEL_PACK_BUFFER,0,p),R.bindBuffer(R.PIXEL_PACK_BUFFER,null),R.deleteFramebuffer(u),p}_getTypedArrayType(e){const{gl:t}=this;if(e===t.UNSIGNED_BYTE)return Uint8Array;if(e===t.UNSIGNED_SHORT_4_4_4_4)return Uint16Array;if(e===t.UNSIGNED_SHORT_5_5_5_1)return Uint16Array;if(e===t.UNSIGNED_SHORT_5_6_5)return Uint16Array;if(e===t.UNSIGNED_SHORT)return Uint16Array;if(e===t.UNSIGNED_INT)return Uint32Array;if(e===t.HALF_FLOAT)return Uint16Array;if(e===t.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,t){const{gl:r}=this;let a=0;return e===r.UNSIGNED_BYTE&&(a=1),e!==r.UNSIGNED_SHORT_4_4_4_4&&e!==r.UNSIGNED_SHORT_5_5_5_1&&e!==r.UNSIGNED_SHORT_5_6_5&&e!==r.UNSIGNED_SHORT&&e!==r.HALF_FLOAT||(a=2),e!==r.UNSIGNED_INT&&e!==r.FLOAT||(a=4),t===r.RGBA?4*a:t===r.RGB?3*a:t===r.ALPHA?a:void 0}}export default WebGLTextureUtils;
//# sourceMappingURL=/sm/9e4f6fc6dad7e222f859e03db47bc2f6f927c6b08d4556d346785304977d1dcf.map