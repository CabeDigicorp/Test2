/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/renderers/webgl-fallback/utils/WebGLState.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{CullFaceNone,CullFaceBack,CullFaceFront,DoubleSide,BackSide,NormalBlending,NoBlending,CustomBlending,AddEquation,AdditiveBlending,SubtractiveBlending,MultiplyBlending,SubtractEquation,ReverseSubtractEquation,ZeroFactor,OneFactor,SrcColorFactor,SrcAlphaFactor,SrcAlphaSaturateFactor,DstColorFactor,DstAlphaFactor,OneMinusSrcColorFactor,OneMinusSrcAlphaFactor,OneMinusDstColorFactor,OneMinusDstAlphaFactor,NeverDepth,AlwaysDepth,LessDepth,LessEqualDepth,EqualDepth,GreaterEqualDepth,GreaterDepth,NotEqualDepth}from"../../../constants.js";let equationToGL,factorToGL,initialized=!1;class WebGLState{constructor(t){this.backend=t,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},!1===initialized&&(this._init(this.gl),initialized=!0)}_init(t){equationToGL={[AddEquation]:t.FUNC_ADD,[SubtractEquation]:t.FUNC_SUBTRACT,[ReverseSubtractEquation]:t.FUNC_REVERSE_SUBTRACT},factorToGL={[ZeroFactor]:t.ZERO,[OneFactor]:t.ONE,[SrcColorFactor]:t.SRC_COLOR,[SrcAlphaFactor]:t.SRC_ALPHA,[SrcAlphaSaturateFactor]:t.SRC_ALPHA_SATURATE,[DstColorFactor]:t.DST_COLOR,[DstAlphaFactor]:t.DST_ALPHA,[OneMinusSrcColorFactor]:t.ONE_MINUS_SRC_COLOR,[OneMinusSrcAlphaFactor]:t.ONE_MINUS_SRC_ALPHA,[OneMinusDstColorFactor]:t.ONE_MINUS_DST_COLOR,[OneMinusDstAlphaFactor]:t.ONE_MINUS_DST_ALPHA}}enable(t){const{enabled:e}=this;!0!==e[t]&&(this.gl.enable(t),e[t]=!0)}disable(t){const{enabled:e}=this;!1!==e[t]&&(this.gl.disable(t),e[t]=!1)}setFlipSided(t){if(this.currentFlipSided!==t){const{gl:e}=this;t?e.frontFace(e.CW):e.frontFace(e.CCW),this.currentFlipSided=t}}setCullFace(t){const{gl:e}=this;t!==CullFaceNone?(this.enable(e.CULL_FACE),t!==this.currentCullFace&&(t===CullFaceBack?e.cullFace(e.BACK):t===CullFaceFront?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):this.disable(e.CULL_FACE),this.currentCullFace=t}setLineWidth(t){const{currentLineWidth:e,gl:n}=this;t!==e&&(n.lineWidth(t),this.currentLineWidth=t)}setBlending(t,e,n,r,l,i,s,c){const{gl:u}=this;if(t!==NoBlending){if(!1===this.currentBlendingEnabled&&(this.enable(u.BLEND),this.currentBlendingEnabled=!0),t===CustomBlending)l=l||e,i=i||n,s=s||r,e===this.currentBlendEquation&&l===this.currentBlendEquationAlpha||(u.blendEquationSeparate(equationToGL[e],equationToGL[l]),this.currentBlendEquation=e,this.currentBlendEquationAlpha=l),n===this.currentBlendSrc&&r===this.currentBlendDst&&i===this.currentBlendSrcAlpha&&s===this.currentBlendDstAlpha||(u.blendFuncSeparate(factorToGL[n],factorToGL[r],factorToGL[i],factorToGL[s]),this.currentBlendSrc=n,this.currentBlendDst=r,this.currentBlendSrcAlpha=i,this.currentBlendDstAlpha=s),this.currentBlending=t,this.currentPremultipledAlpha=!1;else if(t!==this.currentBlending||c!==this.currentPremultipledAlpha){if(this.currentBlendEquation===AddEquation&&this.currentBlendEquationAlpha===AddEquation||(u.blendEquation(u.FUNC_ADD),this.currentBlendEquation=AddEquation,this.currentBlendEquationAlpha=AddEquation),c)switch(t){case NormalBlending:u.blendFuncSeparate(u.ONE,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case AdditiveBlending:u.blendFunc(u.ONE,u.ONE);break;case SubtractiveBlending:u.blendFuncSeparate(u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ZERO,u.ONE);break;case MultiplyBlending:u.blendFuncSeparate(u.ZERO,u.SRC_COLOR,u.ZERO,u.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case NormalBlending:u.blendFuncSeparate(u.SRC_ALPHA,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case AdditiveBlending:u.blendFunc(u.SRC_ALPHA,u.ONE);break;case SubtractiveBlending:u.blendFuncSeparate(u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ZERO,u.ONE);break;case MultiplyBlending:u.blendFunc(u.ZERO,u.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=t,this.currentPremultipledAlpha=c}}else!0===this.currentBlendingEnabled&&(this.disable(u.BLEND),this.currentBlendingEnabled=!1)}setColorMask(t){this.currentColorMask!==t&&(this.gl.colorMask(t,t,t,t),this.currentColorMask=t)}setDepthTest(t){const{gl:e}=this;t?this.enable(e.DEPTH_TEST):this.disable(e.DEPTH_TEST)}setDepthMask(t){this.currentDepthMask!==t&&(this.gl.depthMask(t),this.currentDepthMask=t)}setDepthFunc(t){if(this.currentDepthFunc!==t){const{gl:e}=this;switch(t){case NeverDepth:e.depthFunc(e.NEVER);break;case AlwaysDepth:e.depthFunc(e.ALWAYS);break;case LessDepth:e.depthFunc(e.LESS);break;case LessEqualDepth:e.depthFunc(e.LEQUAL);break;case EqualDepth:e.depthFunc(e.EQUAL);break;case GreaterEqualDepth:e.depthFunc(e.GEQUAL);break;case GreaterDepth:e.depthFunc(e.GREATER);break;case NotEqualDepth:e.depthFunc(e.NOTEQUAL);break;default:e.depthFunc(e.LEQUAL)}this.currentDepthFunc=t}}setStencilTest(t){const{gl:e}=this;t?this.enable(e.STENCIL_TEST):this.disable(e.STENCIL_TEST)}setStencilMask(t){this.currentStencilMask!==t&&(this.gl.stencilMask(t),this.currentStencilMask=t)}setStencilFunc(t,e,n){this.currentStencilFunc===t&&this.currentStencilRef===e&&this.currentStencilFuncMask===n||(this.gl.stencilFunc(t,e,n),this.currentStencilFunc=t,this.currentStencilRef=e,this.currentStencilFuncMask=n)}setStencilOp(t,e,n){this.currentStencilFail===t&&this.currentStencilZFail===e&&this.currentStencilZPass===n||(this.gl.stencilOp(t,e,n),this.currentStencilFail=t,this.currentStencilZFail=e,this.currentStencilZPass=n)}setMaterial(t,e){const{gl:n}=this;t.side===DoubleSide?this.disable(n.CULL_FACE):this.enable(n.CULL_FACE);let r=t.side===BackSide;e&&(r=!r),this.setFlipSided(r),t.blending===NormalBlending&&!1===t.transparent?this.setBlending(NoBlending):this.setBlending(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),this.setDepthFunc(t.depthFunc),this.setDepthTest(t.depthTest),this.setDepthMask(t.depthWrite),this.setColorMask(t.colorWrite);const l=t.stencilWrite;this.setStencilTest(l),l&&(this.setStencilMask(t.stencilWriteMask),this.setStencilFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),this.setStencilOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),this.setPolygonOffset(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage&&this.backend.renderer.samples>1?this.enable(n.SAMPLE_ALPHA_TO_COVERAGE):this.disable(n.SAMPLE_ALPHA_TO_COVERAGE)}setPolygonOffset(t,e,n){const{gl:r}=this;t?(this.enable(r.POLYGON_OFFSET_FILL),this.currentPolygonOffsetFactor===e&&this.currentPolygonOffsetUnits===n||(r.polygonOffset(e,n),this.currentPolygonOffsetFactor=e,this.currentPolygonOffsetUnits=n)):this.disable(r.POLYGON_OFFSET_FILL)}useProgram(t){return this.currentProgram!==t&&(this.gl.useProgram(t),this.currentProgram=t,!0)}bindFramebuffer(t,e){const{gl:n,currentBoundFramebuffers:r}=this;return r[t]!==e&&(n.bindFramebuffer(t,e),r[t]=e,t===n.DRAW_FRAMEBUFFER&&(r[n.FRAMEBUFFER]=e),t===n.FRAMEBUFFER&&(r[n.DRAW_FRAMEBUFFER]=e),!0)}drawBuffers(t,e){const{gl:n}=this;let r=[],l=!1;if(null!==t.textures){r=this.currentDrawbuffers.get(e),void 0===r&&(r=[],this.currentDrawbuffers.set(e,r));const i=t.textures;if(r.length!==i.length||r[0]!==n.COLOR_ATTACHMENT0){for(let t=0,e=i.length;t<e;t++)r[t]=n.COLOR_ATTACHMENT0+t;r.length=i.length,l=!0}}else r[0]!==n.BACK&&(r[0]=n.BACK,l=!0);l&&n.drawBuffers(r)}activeTexture(t){const{gl:e,currentTextureSlot:n,maxTextures:r}=this;void 0===t&&(t=e.TEXTURE0+r-1),n!==t&&(e.activeTexture(t),this.currentTextureSlot=t)}bindTexture(t,e,n){const{gl:r,currentTextureSlot:l,currentBoundTextures:i,maxTextures:s}=this;void 0===n&&(n=null===l?r.TEXTURE0+s-1:l);let c=i[n];void 0===c&&(c={type:void 0,texture:void 0},i[n]=c),c.type===t&&c.texture===e||(l!==n&&(r.activeTexture(n),this.currentTextureSlot=n),r.bindTexture(t,e),c.type=t,c.texture=e)}bindBufferBase(t,e,n){const{gl:r}=this,l=`${t}-${e}`;return this.currentBoundBufferBases[l]!==n&&(r.bindBufferBase(t,e,n),this.currentBoundBufferBases[l]=n,!0)}unbindTexture(){const{gl:t,currentTextureSlot:e,currentBoundTextures:n}=this,r=n[e];void 0!==r&&void 0!==r.type&&(t.bindTexture(r.type,null),r.type=void 0,r.texture=void 0)}}export default WebGLState;
//# sourceMappingURL=/sm/b6b46423e1fb70dc1beb9291a1226fb44a88c4a34a0ea7eca0165e634402d8cf.map