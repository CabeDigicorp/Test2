/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/nodes/functions/BSDF/BRDF_GGX.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import F_Schlick from"./F_Schlick.js";import V_GGX_SmithCorrelated from"./V_GGX_SmithCorrelated.js";import V_GGX_SmithCorrelated_Anisotropic from"./V_GGX_SmithCorrelated_Anisotropic.js";import D_GGX from"./D_GGX.js";import D_GGX_Anisotropic from"./D_GGX_Anisotropic.js";import{transformedNormalView}from"../../accessors/Normal.js";import{positionViewDirection}from"../../accessors/Position.js";import{iridescence,alphaT,anisotropyT,anisotropyB}from"../../core/PropertyNode.js";import{Fn,defined}from"../../tsl/TSLBase.js";const BRDF_GGX=Fn((o=>{const{lightDirection:i,f0:t,f90:r,roughness:e,f:a,USE_IRIDESCENCE:s,USE_ANISOTROPY:p}=o,n=o.normalView||transformedNormalView,d=e.pow2(),m=i.add(positionViewDirection).normalize(),c=n.dot(i).clamp(),l=n.dot(positionViewDirection).clamp(),_=n.dot(m).clamp(),G=positionViewDirection.dot(m).clamp();let f,h,V=F_Schlick({f0:t,f90:r,dotVH:G});if(defined(s)&&(V=iridescence.mix(V,a)),defined(p)){const o=anisotropyT.dot(i),t=anisotropyT.dot(positionViewDirection),r=anisotropyT.dot(m),e=anisotropyB.dot(i),a=anisotropyB.dot(positionViewDirection),s=anisotropyB.dot(m);f=V_GGX_SmithCorrelated_Anisotropic({alphaT:alphaT,alphaB:d,dotTV:t,dotBV:a,dotTL:o,dotBL:e,dotNV:l,dotNL:c}),h=D_GGX_Anisotropic({alphaT:alphaT,alphaB:d,dotNH:_,dotTH:r,dotBH:s})}else f=V_GGX_SmithCorrelated({alpha:d,dotNL:c,dotNV:l}),h=D_GGX({alpha:d,dotNH:_});return V.mul(f).mul(h)}));export default BRDF_GGX;
//# sourceMappingURL=/sm/eae9b463a3d5605b419e461fe23c6a074346d8405e6f7261890f842773b084f9.map