/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.169.0/src/nodes/display/AfterImageNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import TempNode from"../core/TempNode.js";import{nodeObject,Fn,float,vec4}from"../tsl/TSLBase.js";import{NodeUpdateType}from"../core/constants.js";import{uv}from"../accessors/UV.js";import{texture}from"../accessors/TextureNode.js";import{passTexture}from"./PassNode.js";import{uniform}from"../core/UniformNode.js";import{sign,max}from"../math/MathNode.js";import{convertToTexture}from"../utils/RTTNode.js";import QuadMesh from"../../renderers/common/QuadMesh.js";import NodeMaterial from"../../materials/nodes/NodeMaterial.js";import{Vector2}from"../../math/Vector2.js";import{RenderTarget}from"../../core/RenderTarget.js";const _size=new Vector2,_quadMeshComp=new QuadMesh;class AfterImageNode extends TempNode{static get type(){return"AfterImageNode"}constructor(e,t=.96){super(e),this.textureNode=e,this.textureNodeOld=texture(),this.damp=uniform(t),this._compRT=new RenderTarget,this._compRT.texture.name="AfterImageNode.comp",this._oldRT=new RenderTarget,this._oldRT.texture.name="AfterImageNode.old",this._textureNode=passTexture(this,this._compRT.texture),this.updateBeforeType=NodeUpdateType.RENDER}getTextureNode(){return this._textureNode}setSize(e,t){this._compRT.setSize(e,t),this._oldRT.setSize(e,t)}updateBefore(e){const{renderer:t}=e,o=this.textureNode,r=o.value.type;this._compRT.texture.type=r,this._oldRT.texture.type=r,t.getDrawingBufferSize(_size),this.setSize(_size.x,_size.y);const s=t.getRenderTarget(),d=o.value;this.textureNodeOld.value=this._oldRT.texture,t.setRenderTarget(this._compRT),_quadMeshComp.render(t);const i=this._oldRT;this._oldRT=this._compRT,this._compRT=i,t.setRenderTarget(s),o.value=d}setup(e){const t=this.textureNode,o=this.textureNodeOld,r=t.uvNode||uv();o.uvNode=r;const s=Fn((([e,t])=>{const o=float(t).toVar(),r=vec4(e).toVar();return max(sign(r.sub(o)),0)})),d=Fn((()=>{const e=vec4(o),d=vec4((e=>t.uv(e))(r));return e.mulAssign(this.damp.mul(s(e,.1))),max(d,e)})),i=this._materialComposed||(this._materialComposed=new NodeMaterial);i.name="AfterImage",i.fragmentNode=d(),_quadMeshComp.material=i;return e.getNodeProperties(this).textureNode=t,this._textureNode}dispose(){this._compRT.dispose(),this._oldRT.dispose()}}export const afterImage=(e,t)=>nodeObject(new AfterImageNode(convertToTexture(e),t));export default AfterImageNode;
//# sourceMappingURL=/sm/75be02124e6c16d69b2880606b142ee27eb1a86aaf20db7d06ccd0a6e355bea5.map