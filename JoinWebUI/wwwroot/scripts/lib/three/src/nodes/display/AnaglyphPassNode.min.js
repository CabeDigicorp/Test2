/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.169.0/src/nodes/display/AnaglyphPassNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Fn,nodeObject,vec4}from"../tsl/TSLBase.js";import{Matrix3}from"../../math/Matrix3.js";import{uniform}from"../core/UniformNode.js";import{uv}from"../accessors/UV.js";import{clamp,max}from"../math/MathNode.js";import StereoCompositePassNode from"./StereoCompositePassNode.js";import NodeMaterial from"../../materials/nodes/NodeMaterial.js";class AnaglyphPassNode extends StereoCompositePassNode{static get type(){return"AnaglyphPassNode"}constructor(t,e){super(t,e),this.isAnaglyphPassNode=!0,this._colorMatrixLeft=uniform((new Matrix3).fromArray([.4561,-.0400822,-.0152161,.500484,-.0378246,-.0205971,.176381,-.0157589,-.00546856])),this._colorMatrixRight=uniform((new Matrix3).fromArray([-.0434706,.378476,-.0721527,-.0879388,.73364,-.112961,-.00155529,-.0184503,1.2264]))}setup(t){const e=uv(),o=Fn((()=>{const t=this._mapLeft.uv(e),o=this._mapRight.uv(e),r=clamp(this._colorMatrixLeft.mul(t.rgb).add(this._colorMatrixRight.mul(o.rgb)));return vec4(r.rgb,max(t.a,o.a))})),r=this._material||(this._material=new NodeMaterial);return r.fragmentNode=o().context(t.getSharedContext()),r.name="Anaglyph",r.needsUpdate=!0,super.setup(t)}}export default AnaglyphPassNode;export const anaglyphPass=(t,e)=>nodeObject(new AnaglyphPassNode(t,e));
//# sourceMappingURL=/sm/98aee8125fdbea789eb3e9c0cdf04225dd3b88b195a58275f8a825f26ee106c0.map