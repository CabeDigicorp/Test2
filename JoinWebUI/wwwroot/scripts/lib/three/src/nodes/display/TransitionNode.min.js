/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.169.0/src/nodes/display/TransitionNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import TempNode from"../core/TempNode.js";import{uv}from"../accessors/UV.js";import{Fn,nodeObject,float,int,vec4,If}from"../tsl/TSLBase.js";import{clamp,mix}from"../math/MathNode.js";import{sub}from"../math/OperatorNode.js";import{convertToTexture}from"../utils/RTTNode.js";class TransitionNode extends TempNode{static get type(){return"TransitionNode"}constructor(e,t,o,r,s,i){super(),this.textureNodeA=e,this.textureNodeB=t,this.mixTextureNode=o,this.mixRatioNode=r,this.thresholdNode=s,this.useTextureNode=i}setup(){const{textureNodeA:e,textureNodeB:t,mixTextureNode:o,mixRatioNode:r,thresholdNode:s,useTextureNode:i}=this,n=e=>{const t=e.uvNode||uv();return e.uv(t)};return Fn((()=>{const d=n(e),u=n(t),m=vec4().toVar();return If(i.equal(int(1)),(()=>{const e=n(o),t=r.mul(s.mul(2).add(1)).sub(s),i=clamp(sub(e.r,t).mul(float(1).div(s)),0,1);m.assign(mix(d,u,i))})).Else((()=>{m.assign(mix(u,d,r))})),m}))()}}export default TransitionNode;export const transition=(e,t,o,r=0,s=.1,i=0)=>nodeObject(new TransitionNode(convertToTexture(e),convertToTexture(t),convertToTexture(o),nodeObject(r),nodeObject(s),nodeObject(i)));
//# sourceMappingURL=/sm/1a26b6f5fa455c7cb3b0b3318481379704623b1e2b67b76d32ee66506fbeeb6d.map