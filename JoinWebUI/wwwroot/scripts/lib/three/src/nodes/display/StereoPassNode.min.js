/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.169.0/src/nodes/display/StereoPassNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{nodeObject}from"../tsl/TSLBase.js";import PassNode from"./PassNode.js";import{Vector2}from"../../math/Vector2.js";import{StereoCamera}from"../../cameras/StereoCamera.js";const _size=new Vector2;class StereoPassNode extends PassNode{static get type(){return"StereoPassNode"}constructor(e,t){super(PassNode.COLOR,e,t),this.isStereoPassNode=!0,this.stereo=new StereoCamera,this.stereo.aspect=.5}updateBefore(e){const{renderer:t}=e,{scene:s,camera:r,stereo:o,renderTarget:a}=this;this._pixelRatio=t.getPixelRatio(),o.cameraL.coordinateSystem=t.coordinateSystem,o.cameraR.coordinateSystem=t.coordinateSystem,o.update(r);const i=t.getSize(_size);this.setSize(i.width,i.height);const c=t.autoClear;t.autoClear=!1;const d=t.getRenderTarget(),h=t.getMRT();this._cameraNear.value=r.near,this._cameraFar.value=r.far;for(const e in this._previousTextures)this.toggleTexture(e);t.setRenderTarget(a),t.setMRT(this._mrt),t.clear(),a.scissorTest=!0,a.scissor.set(0,0,a.width/2,a.height),a.viewport.set(0,0,a.width/2,a.height),t.render(s,o.cameraL),a.scissor.set(a.width/2,0,a.width/2,a.height),a.viewport.set(a.width/2,0,a.width/2,a.height),t.render(s,o.cameraR),a.scissorTest=!1,t.setRenderTarget(d),t.setMRT(h),t.autoClear=c}}export default StereoPassNode;export const stereoPass=(e,t)=>nodeObject(new StereoPassNode(e,t));
//# sourceMappingURL=/sm/6f47f31f32495f6d699abcf36ed0ccf3f71a5f5608597b498b218b06f2e42ea7.map