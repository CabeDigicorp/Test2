/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.169.0/src/nodes/display/DotScreenNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import TempNode from"../core/TempNode.js";import{nodeObject,Fn,vec2,vec3,vec4}from"../tsl/TSLBase.js";import{uniform}from"../core/UniformNode.js";import{uv}from"../accessors/UV.js";import{sin,cos}from"../math/MathNode.js";import{add}from"../math/OperatorNode.js";import{screenSize}from"./ScreenNode.js";import{Vector2}from"../../math/Vector2.js";class DotScreenNode extends TempNode{static get type(){return"DotScreenNode"}constructor(e,o=new Vector2(.5,.5),t=1.57,r=1){super("vec4"),this.inputNode=e,this.center=uniform(o),this.angle=uniform(t),this.scale=uniform(r)}setup(){const e=this.inputNode,o=Fn((()=>{const e=sin(this.angle),o=cos(this.angle),t=uv().mul(screenSize).sub(this.center),r=vec2(o.mul(t.x).sub(e.mul(t.y)),e.mul(t.x).add(o.mul(t.y))).mul(this.scale);return sin(r.x).mul(sin(r.y)).mul(4)}));return Fn((()=>{const t=e,r=add(t.r,t.g,t.b).div(3);return vec4(vec3(r.mul(10).sub(5).add(o())),t.a)}))()}}export default DotScreenNode;export const dotScreen=(e,o,t,r)=>nodeObject(new DotScreenNode(nodeObject(e),o,t,r));
//# sourceMappingURL=/sm/963d289551d7daed965abdc0f1416d7aaeaafff1a5d332345db5a6777d645e12.map