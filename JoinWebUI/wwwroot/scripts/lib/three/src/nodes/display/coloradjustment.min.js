/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/nodes/display/ColorAdjustment.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{dot,max,mix}from"../math/MathNode.js";import{add}from"../math/OperatorNode.js";import{Fn,If,float,vec3,vec4}from"../tsl/TSLBase.js";import{ColorManagement}from"../../math/ColorManagement.js";import{Vector3}from"../../math/Vector3.js";import{LinearSRGBColorSpace}from"../../constants.js";export const grayscale=Fn((([o])=>luminance(o.rgb)));export const saturation=Fn((([o,e=float(1)])=>e.mix(luminance(o.rgb),o.rgb)));export const vibrance=Fn((([o,e=float(1)])=>{const r=add(o.r,o.g,o.b).div(3),t=o.r.max(o.g.max(o.b)),a=t.sub(r).mul(e).mul(-3);return mix(o.rgb,t,a)}));export const hue=Fn((([o,e=float(1)])=>{const r=vec3(.57735,.57735,.57735),t=e.cos();return vec3(o.rgb.mul(t).add(r.cross(o.rgb).mul(e.sin()).add(r.mul(dot(r,o.rgb).mul(t.oneMinus())))))}));export const luminance=(o,e=vec3(ColorManagement.getLuminanceCoefficients(new Vector3)))=>dot(o,e);export const threshold=(o,e)=>mix(vec3(0),o,luminance(o).sub(e).max(0));export const cdl=Fn((([o,e=vec3(1),r=vec3(0),t=vec3(1),a=float(1),n=vec3(ColorManagement.getLuminanceCoefficients(new Vector3,LinearSRGBColorSpace))])=>{const m=o.rgb.dot(vec3(n)),c=max(o.rgb.mul(e).add(r),0).toVar(),s=c.pow(t).toVar();return If(c.r.greaterThan(0),(()=>{c.r.assign(s.r)})),If(c.g.greaterThan(0),(()=>{c.g.assign(s.g)})),If(c.b.greaterThan(0),(()=>{c.b.assign(s.b)})),c.assign(m.add(c.sub(m).mul(a))),vec4(c.rgb,o.a)}));
//# sourceMappingURL=/sm/71bd68be62587828b06fc4262edff2ea1202c86588cadf49477ff0e1052f2897.map