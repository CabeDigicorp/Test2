/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/nodes/math/TriNoise3D.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Loop}from"../utils/LoopNode.js";import{float,vec3,Fn}from"../tsl/TSLBase.js";export const tri=Fn((([t])=>t.fract().sub(.5).abs())).setLayout({name:"tri",type:"float",inputs:[{name:"x",type:"float"}]});export const tri3=Fn((([t])=>vec3(tri(t.z.add(tri(t.y.mul(1)))),tri(t.z.add(tri(t.x.mul(1)))),tri(t.y.add(tri(t.x.mul(1))))))).setLayout({name:"tri3",type:"vec3",inputs:[{name:"p",type:"vec3"}]});export const triNoise3D=Fn((([t,o,a])=>{const e=vec3(t).toVar(),s=float(1.4).toVar(),i=float(0).toVar(),r=vec3(e).toVar();return Loop({start:float(0),end:float(3),type:"float",condition:"<="},(()=>{const t=vec3(tri3(r.mul(2))).toVar();e.addAssign(t.add(a.mul(float(.1).mul(o)))),r.mulAssign(1.8),s.mulAssign(1.5),e.mulAssign(1.2);const n=float(tri(e.z.add(tri(e.x.add(tri(e.y)))))).toVar();i.addAssign(n.div(s)),r.addAssign(.14)})),i})).setLayout({name:"triNoise3D",type:"float",inputs:[{name:"p",type:"vec3"},{name:"spd",type:"float"},{name:"time",type:"float"}]});
//# sourceMappingURL=/sm/e3e3f3462605a8258a5514325b1f2eb71427dc6eb3e5cbb7127223b8414b40c2.map