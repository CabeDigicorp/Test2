/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/nodes/lighting/SpotLightNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import AnalyticLightNode from"./AnalyticLightNode.js";import{getDistanceAttenuation}from"./LightUtils.js";import{uniform}from"../core/UniformNode.js";import{smoothstep}from"../math/MathNode.js";import{positionView}from"../accessors/Position.js";import{renderGroup}from"../core/UniformGroupNode.js";import{lightViewPosition,lightTargetDirection}from"../accessors/Lights.js";class SpotLightNode extends AnalyticLightNode{static get type(){return"SpotLightNode"}constructor(t=null){super(t),this.coneCosNode=uniform(0).setGroup(renderGroup),this.penumbraCosNode=uniform(0).setGroup(renderGroup),this.cutoffDistanceNode=uniform(0).setGroup(renderGroup),this.decayExponentNode=uniform(0).setGroup(renderGroup)}update(t){super.update(t);const{light:o}=this;this.coneCosNode.value=Math.cos(o.angle),this.penumbraCosNode.value=Math.cos(o.angle*(1-o.penumbra)),this.cutoffDistanceNode.value=o.distance,this.decayExponentNode.value=o.decay}getSpotAttenuation(t){const{coneCosNode:o,penumbraCosNode:e}=this;return smoothstep(o,e,t)}setup(t){super.setup(t);const o=t.context.lightingModel,{colorNode:e,cutoffDistanceNode:i,decayExponentNode:s,light:r}=this,n=lightViewPosition(r).sub(positionView),c=n.normalize(),u=c.dot(lightTargetDirection(r)),a=this.getSpotAttenuation(u),p=n.length(),d=getDistanceAttenuation({lightDistance:p,cutoffDistance:i,decayExponent:s}),h=e.mul(a).mul(d),l=t.context.reflectedLight;o.direct({lightDirection:c,lightColor:h,reflectedLight:l},t.stack,t)}}export default SpotLightNode;
//# sourceMappingURL=/sm/0c2a1ff0c648e0afe5eca3ac485b9a5d2062a7c07893f2a284dc77423bd10c78.map