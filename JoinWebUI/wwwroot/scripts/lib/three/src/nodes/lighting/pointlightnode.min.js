/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/nodes/lighting/PointLightNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import AnalyticLightNode from"./AnalyticLightNode.js";import{getDistanceAttenuation}from"./LightUtils.js";import{uniform}from"../core/UniformNode.js";import{lightViewPosition}from"../accessors/Lights.js";import{positionView}from"../accessors/Position.js";import{Fn}from"../tsl/TSLBase.js";import{renderGroup}from"../core/UniformGroupNode.js";export const directPointLight=Fn((({color:t,lightViewPosition:o,cutoffDistance:e,decayExponent:i},n)=>{const s=n.context.lightingModel,r=o.sub(positionView),c=r.normalize(),d=r.length(),a=getDistanceAttenuation({lightDistance:d,cutoffDistance:e,decayExponent:i}),h=t.mul(a),l=n.context.reflectedLight;s.direct({lightDirection:c,lightColor:h,reflectedLight:l},n.stack,n)}));class PointLightNode extends AnalyticLightNode{static get type(){return"PointLightNode"}constructor(t=null){super(t),this.cutoffDistanceNode=uniform(0).setGroup(renderGroup),this.decayExponentNode=uniform(0).setGroup(renderGroup)}update(t){const{light:o}=this;super.update(t),this.cutoffDistanceNode.value=o.distance,this.decayExponentNode.value=o.decay}setup(){directPointLight({color:this.colorNode,lightViewPosition:lightViewPosition(this.light),cutoffDistance:this.cutoffDistanceNode,decayExponent:this.decayExponentNode}).append()}}export default PointLightNode;
//# sourceMappingURL=/sm/8314fe13e56e9f289edff0a93952b88a6ad5ed5b6153a17ea957402f5fb000e9.map