/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/nodes/lighting/HemisphereLightNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import AnalyticLightNode from"./AnalyticLightNode.js";import{uniform}from"../core/UniformNode.js";import{mix}from"../math/MathNode.js";import{normalView}from"../accessors/Normal.js";import{lightPosition}from"../accessors/Lights.js";import{renderGroup}from"../core/UniformGroupNode.js";import{Color}from"../../math/Color.js";class HemisphereLightNode extends AnalyticLightNode{static get type(){return"HemisphereLightNode"}constructor(o=null){super(o),this.lightPositionNode=lightPosition(o),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=uniform(new Color).setGroup(renderGroup)}update(o){const{light:i}=this;super.update(o),this.lightPositionNode.object3d=i,this.groundColorNode.value.copy(i.groundColor).multiplyScalar(i.intensity)}setup(o){const{colorNode:i,groundColorNode:t,lightDirectionNode:r}=this,e=normalView.dot(r).mul(.5).add(.5),s=mix(t,i,e);o.context.irradiance.addAssign(s)}}export default HemisphereLightNode;
//# sourceMappingURL=/sm/2dc70717d363c9f4ac9d0a89268cba5cba51153ba69cc6ff1bfc829b2a696ead.map