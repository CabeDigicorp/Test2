/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/nodes/lighting/EnvironmentNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import LightingNode from"./LightingNode.js";import{cache}from"../core/CacheNode.js";import{roughness,clearcoatRoughness}from"../core/PropertyNode.js";import{cameraViewMatrix}from"../accessors/Camera.js";import{transformedClearcoatNormalView,transformedNormalView,transformedNormalWorld}from"../accessors/Normal.js";import{positionViewDirection}from"../accessors/Position.js";import{float}from"../tsl/TSLBase.js";import{reference}from"../accessors/ReferenceNode.js";import{transformedBentNormalView}from"../accessors/AccessorsUtils.js";import{pmremTexture}from"../pmrem/PMREMNode.js";const _envNodeCache=new WeakMap;class EnvironmentNode extends LightingNode{static get type(){return"EnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){const{material:t}=e;let r=this.envNode;if(r.isTextureNode||r.isMaterialReferenceNode){const e=r.isTextureNode?r.value:t[r.property];let o=_envNodeCache.get(e);void 0===o&&(o=pmremTexture(e),_envNodeCache.set(e,o)),r=o}const o=t.envMap?reference("envMapIntensity","float",e.material):reference("environmentIntensity","float",e.scene),a=!0===t.useAnisotropy||t.anisotropy>0?transformedBentNormalView:transformedNormalView,n=r.context(createRadianceContext(roughness,a)).mul(o),s=r.context(createIrradianceContext(transformedNormalWorld)).mul(Math.PI).mul(o),i=cache(n),c=cache(s);e.context.radiance.addAssign(i),e.context.iblIrradiance.addAssign(c);const m=e.context.lightingModel.clearcoatRadiance;if(m){const e=r.context(createRadianceContext(clearcoatRoughness,transformedClearcoatNormalView)).mul(o),t=cache(e);m.addAssign(t)}}}export default EnvironmentNode;const createRadianceContext=(e,t)=>{let r=null;return{getUV:()=>(null===r&&(r=positionViewDirection.negate().reflect(t),r=e.mul(e).mix(r,t).normalize(),r=r.transformDirection(cameraViewMatrix)),r),getTextureLevel:()=>e}},createIrradianceContext=e=>({getUV:()=>e,getTextureLevel:()=>float(1)});
//# sourceMappingURL=/sm/2cb929332e065ff1660fa04ee83012c8fe7487ad30696f44a55b1ffa655f1510.map