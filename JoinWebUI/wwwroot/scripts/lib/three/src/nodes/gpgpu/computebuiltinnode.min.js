/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/nodes/gpgpu/ComputeBuiltinNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Node from"../core/Node.js";import{nodeObject}from"../tsl/TSLBase.js";class ComputeBuiltinNode extends Node{static get type(){return"ComputeBuiltinNode"}constructor(e,t){super(t),this._builtinName=e}getHash(e){return this.getBuiltinName(e)}getNodeType(){return this.nodeType}setBuiltinName(e){return this._builtinName=e,this}getBuiltinName(){return this._builtinName}hasBuiltin(e){e.hasBuiltin(this._builtinName)}generate(e,t){const i=this.getBuiltinName(e),o=this.getNodeType(e);return"compute"===e.shaderStage?e.format(i,o,t):(console.warn(`ComputeBuiltinNode: Compute built-in value ${i} can not be accessed in the ${e.shaderStage} stage`),e.generateConst(o))}serialize(e){super.serialize(e),e.global=this.global,e._builtinName=this._builtinName}deserialize(e){super.deserialize(e),this.global=e.global,this._builtinName=e._builtinName}}export default ComputeBuiltinNode;const computeBuiltin=(e,t)=>nodeObject(new ComputeBuiltinNode(e,t));export const numWorkgroups=computeBuiltin("numWorkgroups","uvec3");export const workgroupId=computeBuiltin("workgroupId","uvec3");export const localId=computeBuiltin("localId","uvec3");export const subgroupSize=computeBuiltin("subgroupSize","uint");
//# sourceMappingURL=/sm/bc1cdc17b869daccb8b9c58a77c1119442cc309fe8ef0fae61e15fd96c9102fd.map