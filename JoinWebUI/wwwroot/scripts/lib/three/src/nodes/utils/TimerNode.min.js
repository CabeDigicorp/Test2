/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.169.0/src/nodes/utils/TimerNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import UniformNode from"../core/UniformNode.js";import{NodeUpdateType}from"../core/constants.js";import{nodeObject,nodeImmutable}from"../tsl/TSLBase.js";class TimerNode extends UniformNode{static get type(){return"TimerNode"}constructor(e=TimerNode.LOCAL,o=1,t=0){super(t),this.scope=e,this.scale=o,this.updateType=NodeUpdateType.FRAME}update(e){const o=this.scope,t=this.scale;o===TimerNode.LOCAL?this.value+=e.deltaTime*t:o===TimerNode.DELTA?this.value=e.deltaTime*t:o===TimerNode.FRAME?this.value=e.frameId:this.value=e.time*t}serialize(e){super.serialize(e),e.scope=this.scope,e.scale=this.scale}deserialize(e){super.deserialize(e),this.scope=e.scope,this.scale=e.scale}}TimerNode.LOCAL="local",TimerNode.GLOBAL="global",TimerNode.DELTA="delta",TimerNode.FRAME="frame";export default TimerNode;export const timerLocal=(e,o=0)=>nodeObject(new TimerNode(TimerNode.LOCAL,e,o));export const timerGlobal=(e,o=0)=>nodeObject(new TimerNode(TimerNode.GLOBAL,e,o));export const timerDelta=(e,o=0)=>nodeObject(new TimerNode(TimerNode.DELTA,e,o));export const frameId=nodeImmutable(TimerNode,TimerNode.FRAME).toUint();
//# sourceMappingURL=/sm/d2c678e4114761a938b17b43ca1e0c9f384564aedf683a398bd7577c6c49a7c5.map