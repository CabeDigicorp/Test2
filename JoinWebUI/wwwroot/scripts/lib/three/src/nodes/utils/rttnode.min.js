/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/nodes/utils/RTTNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{nodeObject}from"../tsl/TSLCore.js";import TextureNode from"../accessors/TextureNode.js";import{NodeUpdateType}from"../core/constants.js";import{uv}from"../accessors/UV.js";import NodeMaterial from"../../materials/nodes/NodeMaterial.js";import QuadMesh from"../../renderers/common/QuadMesh.js";import{RenderTarget}from"../../core/RenderTarget.js";import{Vector2}from"../../math/Vector2.js";import{HalfFloatType}from"../../constants.js";const _size=new Vector2;class RTTNode extends TextureNode{static get type(){return"RTTNode"}constructor(e,t=null,s=null,r={type:HalfFloatType}){const i=new RenderTarget(t,s,r);super(i.texture,uv()),this.node=e,this.width=t,this.height=s,this.renderTarget=i,this.textureNeedsUpdate=!0,this.autoUpdate=!0,this.updateMap=new WeakMap,this._rttNode=null,this._quadMesh=new QuadMesh(new NodeMaterial),this.updateBeforeType=NodeUpdateType.RENDER}get autoSize(){return null===this.width}setup(e){return this._rttNode=this.node.context(e.getSharedContext()),this._quadMesh.material.name="RTT",this._quadMesh.material.needsUpdate=!0,super.setup(e)}setSize(e,t){this.width=e,this.height=t;const s=e*this.pixelRatio,r=t*this.pixelRatio;this.renderTarget.setSize(s,r),this.textureNeedsUpdate=!0}setPixelRatio(e){this.pixelRatio=e,this.setSize(this.width,this.height)}updateBefore({renderer:e}){if(!1===this.textureNeedsUpdate&&!1===this.autoUpdate)return;if(this.textureNeedsUpdate=!1,!0===this.autoSize){this.pixelRatio=e.getPixelRatio();const t=e.getSize(_size);this.setSize(t.width,t.height)}this._quadMesh.material.fragmentNode=this._rttNode;const t=e.getRenderTarget();e.setRenderTarget(this.renderTarget),this._quadMesh.render(e),e.setRenderTarget(t)}clone(){const e=new TextureNode(this.value,this.uvNode,this.levelNode);return e.sampler=this.sampler,e.referenceNode=this,e}}export default RTTNode;export const rtt=(e,...t)=>nodeObject(new RTTNode(nodeObject(e),...t));export const convertToTexture=(e,...t)=>e.isTextureNode?e:rtt(e,...t);
//# sourceMappingURL=/sm/82d00f63bb24bf8a3995eb45f21ec8bea6883474b78b4c8a496e10e3741cbf8e.map