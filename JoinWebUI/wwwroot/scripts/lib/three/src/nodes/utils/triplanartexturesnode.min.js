/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/nodes/utils/TriplanarTexturesNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Node from"../core/Node.js";import{add}from"../math/OperatorNode.js";import{normalLocal}from"../accessors/Normal.js";import{positionLocal}from"../accessors/Position.js";import{texture}from"../accessors/TextureNode.js";import{nodeProxy,float,vec3}from"../tsl/TSLBase.js";class TriplanarTexturesNode extends Node{static get type(){return"TriplanarTexturesNode"}constructor(e,o=null,t=null,r=float(1),s=positionLocal,a=normalLocal){super("vec4"),this.textureXNode=e,this.textureYNode=o,this.textureZNode=t,this.scaleNode=r,this.positionNode=s,this.normalNode=a}setup(){const{textureXNode:e,textureYNode:o,textureZNode:t,scaleNode:r,positionNode:s,normalNode:a}=this;let l=a.abs().normalize();l=l.div(l.dot(vec3(1)));const u=s.yz.mul(r),i=s.zx.mul(r),d=s.xy.mul(r),n=e.value,x=null!==o?o.value:n,m=null!==t?t.value:n,c=texture(n,u).mul(l.x),p=texture(x,i).mul(l.y),N=texture(m,d).mul(l.z);return add(c,p,N)}}export default TriplanarTexturesNode;export const triplanarTextures=nodeProxy(TriplanarTexturesNode);export const triplanarTexture=(...e)=>triplanarTextures(...e);
//# sourceMappingURL=/sm/a8331bc7901add73a168c53ca9fdd3f8edc40f8a8316887c5e68ef2b32907e8c.map