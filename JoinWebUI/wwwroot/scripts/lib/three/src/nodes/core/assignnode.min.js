/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/nodes/core/AssignNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import TempNode from"../core/TempNode.js";import{addMethodChaining,nodeProxy}from"../tsl/TSLCore.js";import{vectorComponents}from"../core/constants.js";class AssignNode extends TempNode{static get type(){return"AssignNode"}constructor(e,o){super(),this.targetNode=e,this.sourceNode=o}hasDependencies(){return!1}getNodeType(e,o){return"void"!==o?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:o}=this;if(!1===e.isAvailable("swizzleAssign")&&o.isSplitNode&&o.components.length>1){const t=e.getTypeLength(o.node.getNodeType(e));return vectorComponents.join("").slice(0,t)!==o.components}return!1}generate(e,o){const{targetNode:t,sourceNode:s}=this,n=this.needsSplitAssign(e),i=t.getNodeType(e),d=t.context({assign:!0}).build(e),r=s.build(e,i),g=s.getNodeType(e),a=e.getDataFromNode(this);let p;if(!0===a.initialized)"void"!==o&&(p=d);else if(n){const s=e.getVarFromNode(this,null,i),n=e.getPropertyName(s);e.addLineFlowCode(`${n} = ${r}`,this);const g=t.node.context({assign:!0}).build(e);for(let o=0;o<t.components.length;o++){const s=t.components[o];e.addLineFlowCode(`${g}.${s} = ${n}[ ${o} ]`,this)}"void"!==o&&(p=d)}else p=`${d} = ${r}`,"void"!==o&&"void"!==g||(e.addLineFlowCode(p,this),"void"!==o&&(p=d));return a.initialized=!0,e.format(p,i,o)}}export default AssignNode;export const assign=nodeProxy(AssignNode);addMethodChaining("assign",assign);
//# sourceMappingURL=/sm/12d0c6f9d4f135b639aa64d362f9b3ea951fa7da3f7c4d339f845f6cf51c162a.map