/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/nodes/core/VaryingNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Node from"./Node.js";import{NodeShaderStage}from"./constants.js";import{addMethodChaining,nodeProxy}from"../tsl/TSLCore.js";class VaryingNode extends Node{static get type(){return"VaryingNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const t=e.getNodeProperties(this);let r=t.varying;if(void 0===r){const o=this.name,n=this.getNodeType(e);t.varying=r=e.getVaryingFromNode(this,o,n),t.node=this.node}return r.needsInterpolation||(r.needsInterpolation="fragment"===e.shaderStage),r}setup(e){this.setupVarying(e)}analyze(e){return this.setupVarying(e),this.node.analyze(e)}generate(e){const t=e.getNodeProperties(this),r=this.setupVarying(e);if(void 0===t.propertyName){const o=this.getNodeType(e),n=e.getPropertyName(r,NodeShaderStage.VERTEX);e.flowNodeFromShaderStage(NodeShaderStage.VERTEX,this.node,o,n),t.propertyName=n}return e.getPropertyName(r)}}export default VaryingNode;export const varying=nodeProxy(VaryingNode);addMethodChaining("varying",varying);
//# sourceMappingURL=/sm/9b3f6042876debeac7392cf18e2a59ce063d117fb9b3c23baba3fb99e994553d.map