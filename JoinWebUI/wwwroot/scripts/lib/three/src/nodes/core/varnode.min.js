/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/nodes/core/VarNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Node from"./Node.js";import{addMethodChaining,nodeProxy}from"../tsl/TSLCore.js";class VarNode extends Node{static get type(){return"VarNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{node:t,name:o}=this,r=e.getVarFromNode(this,o,e.getVectorType(this.getNodeType(e))),a=e.getPropertyName(r),d=t.build(e,r.type);return e.addLineFlowCode(`${a} = ${d}`,this),a}}export default VarNode;const createVar=nodeProxy(VarNode);addMethodChaining("toVar",((...e)=>createVar(...e).append()));export const temp=e=>(console.warn('TSL: "temp" is deprecated. Use ".toVar()" instead.'),createVar(e));addMethodChaining("temp",temp);
//# sourceMappingURL=/sm/15d6ecf6fb3582f3408782f43bf58afac6c94201b88599c1ac136c3a7c52d411.map