/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/nodes/accessors/BatchNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Node from"../core/Node.js";import{normalLocal}from"./Normal.js";import{positionLocal}from"./Position.js";import{nodeProxy,vec3,mat3,mat4,int,ivec2,float,Fn}from"../tsl/TSLBase.js";import{textureLoad}from"./TextureNode.js";import{textureSize}from"./TextureSizeNode.js";import{tangentLocal}from"./Tangent.js";import{instanceIndex,drawIndex}from"../core/IndexNode.js";import{varyingProperty}from"../core/PropertyNode.js";class BatchNode extends Node{static get type(){return"BatchNode"}constructor(t){super("void"),this.batchMesh=t,this.batchingIdNode=null}setup(t){null===this.batchingIdNode&&(null===t.getDrawIndex()?this.batchingIdNode=instanceIndex:this.batchingIdNode=drawIndex);const e=Fn((([t])=>{const e=textureSize(textureLoad(this.batchMesh._indirectTexture),0),o=int(t).modInt(int(e)),n=int(t).div(int(e));return textureLoad(this.batchMesh._indirectTexture,ivec2(o,n)).x})).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]}),o=e(int(this.batchingIdNode)),n=this.batchMesh._matricesTexture,i=textureSize(textureLoad(n),0),r=float(o).mul(4).toInt().toVar(),a=r.modInt(i),d=r.div(int(i)),s=mat4(textureLoad(n,ivec2(a,d)),textureLoad(n,ivec2(a.add(1),d)),textureLoad(n,ivec2(a.add(2),d)),textureLoad(n,ivec2(a.add(3),d))),c=this.batchMesh._colorsTexture;if(null!==c){const t=Fn((([t])=>{const e=textureSize(textureLoad(c),0).x,o=t,n=o.modInt(e),i=o.div(e);return textureLoad(c,ivec2(n,i)).rgb})).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]}),e=t(o);varyingProperty("vec3","vBatchColor").assign(e)}const u=mat3(s);positionLocal.assign(s.mul(positionLocal));const m=normalLocal.div(vec3(u[0].dot(u[0]),u[1].dot(u[1]),u[2].dot(u[2]))),x=u.mul(m).xyz;normalLocal.assign(x),t.hasGeometryAttribute("tangent")&&tangentLocal.mulAssign(u)}}export default BatchNode;export const batch=nodeProxy(BatchNode);
//# sourceMappingURL=/sm/c601269d64a27927ea4d3d5d7202a87f50e0b891c65ef263afbf2cc6d5411ec4.map