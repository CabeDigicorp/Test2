/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/nodes/accessors/StorageTextureNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import TextureNode from"./TextureNode.js";import{nodeProxy}from"../tsl/TSLBase.js";import{GPUStorageTextureAccess}from"../../renderers/webgpu/utils/WebGPUConstants.js";class StorageTextureNode extends TextureNode{static get type(){return"StorageTextureNode"}constructor(e,t,r=null){super(e,t),this.storeNode=r,this.isStorageTextureNode=!0,this.access=GPUStorageTextureAccess.WriteOnly}getInputType(){return"storageTexture"}setup(e){super.setup(e);e.getNodeProperties(this).storeNode=this.storeNode}setAccess(e){return this.access=e,this}generate(e,t){let r;return r=null!==this.storeNode?this.generateStore(e):super.generate(e,t),r}toReadOnly(){return this.setAccess(GPUStorageTextureAccess.ReadOnly)}toWriteOnly(){return this.setAccess(GPUStorageTextureAccess.WriteOnly)}generateStore(e){const t=e.getNodeProperties(this),{uvNode:r,storeNode:s}=t,o=super.generate(e,"property"),u=r.build(e,"uvec2"),n=s.build(e,"vec4"),a=e.generateTextureStore(e,o,u,n);e.addLineFlowCode(a,this)}}export default StorageTextureNode;export const storageTexture=nodeProxy(StorageTextureNode);export const textureStore=(e,t,r)=>{const s=storageTexture(e,t,r);return null!==r&&s.append(),s};
//# sourceMappingURL=/sm/25d912ca11c71d2f463e8a736e78e1215f0bd52b9ff71733c57140175612ac63.map