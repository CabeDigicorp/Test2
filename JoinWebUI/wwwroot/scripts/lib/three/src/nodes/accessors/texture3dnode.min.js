/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/nodes/accessors/Texture3DNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import TextureNode from"./TextureNode.js";import{nodeProxy,vec3,Fn,If}from"../tsl/TSLBase.js";const normal=Fn((({texture:e,uv:r})=>{const t=1e-4,s=vec3().toVar();return If(r.x.lessThan(t),(()=>{s.assign(vec3(1,0,0))})).ElseIf(r.y.lessThan(t),(()=>{s.assign(vec3(0,1,0))})).ElseIf(r.z.lessThan(t),(()=>{s.assign(vec3(0,0,1))})).ElseIf(r.x.greaterThan(.9999),(()=>{s.assign(vec3(-1,0,0))})).ElseIf(r.y.greaterThan(.9999),(()=>{s.assign(vec3(0,-1,0))})).ElseIf(r.z.greaterThan(.9999),(()=>{s.assign(vec3(0,0,-1))})).Else((()=>{const t=.01,u=e.uv(r.add(vec3(-.01,0,0))).r.sub(e.uv(r.add(vec3(t,0,0))).r),n=e.uv(r.add(vec3(0,-.01,0))).r.sub(e.uv(r.add(vec3(0,t,0))).r),a=e.uv(r.add(vec3(0,0,-.01))).r.sub(e.uv(r.add(vec3(0,0,t))).r);s.assign(vec3(u,n,a))})),s.normalize()}));class Texture3DNode extends TextureNode{static get type(){return"Texture3DNode"}constructor(e,r=null,t=null){super(e,r,t),this.isTexture3DNode=!0}getInputType(){return"texture3D"}getDefaultUV(){return vec3(.5,.5,.5)}setUpdateMatrix(){}setupUV(e,r){return r}generateUV(e,r){return r.build(e,"vec3")}normal(e){return normal({texture:this,uv:e})}}export default Texture3DNode;export const texture3D=nodeProxy(Texture3DNode);
//# sourceMappingURL=/sm/7a5126d7edf24d14a42f609ebe21eec6c9ce928c497b5e39b1da06292a2debae.map