/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/nodes/accessors/UniformArrayNode.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{nodeObject}from"../tsl/TSLBase.js";import{NodeUpdateType}from"../core/constants.js";import{getValueType}from"../core/NodeUtils.js";import ArrayElementNode from"../utils/ArrayElementNode.js";import BufferNode from"./BufferNode.js";class UniformArrayElementNode extends ArrayElementNode{static get type(){return"UniformArrayElementNode"}constructor(e,t){super(e,t),this.isArrayBufferElementNode=!0}generate(e){const t=super.generate(e),r=this.getNodeType();return e.format(t,"vec4",r)}}class UniformArrayNode extends BufferNode{static get type(){return"UniformArrayNode"}constructor(e,t=null){super(null,"vec4"),this.array=e,this.elementType=t,this._elementType=null,this._elementLength=0,this.updateType=NodeUpdateType.RENDER,this.isArrayBufferNode=!0}getElementType(){return this.elementType||this._elementType}getElementLength(){return this._elementLength}update(){const{array:e,value:t}=this,r=this.getElementLength(),n=this.getElementType();if(1===r)for(let r=0;r<e.length;r++){t[4*r]=e[r]}else if("color"===n)for(let r=0;r<e.length;r++){const n=4*r,o=e[r];t[n]=o.r,t[n+1]=o.g,t[n+2]=o.b||0}else for(let r=0;r<e.length;r++){const n=4*r,o=e[r];t[n]=o.x,t[n+1]=o.y,t[n+2]=o.z||0,t[n+3]=o.w||0}}setup(e){const t=this.array.length;this._elementType=null===this.elementType?getValueType(this.array[0]):this.elementType,this._elementLength=e.getTypeLength(this._elementType);let r=Float32Array;return"i"===this._elementType.charAt(0)?r=Int32Array:"u"===this._elementType.charAt(0)&&(r=Uint32Array),this.value=new r(4*t),this.bufferCount=t,this.bufferType=e.changeComponentType("vec4",e.getComponentType(this._elementType)),super.setup(e)}element(e){return nodeObject(new UniformArrayElementNode(this,nodeObject(e)))}}export default UniformArrayNode;export const uniformArray=(e,t)=>nodeObject(new UniformArrayNode(e,t));export const uniforms=(e,t)=>(console.warn("TSL.UniformArrayNode: uniforms() has been renamed to uniformArray()."),nodeObject(new UniformArrayNode(e,t)));
//# sourceMappingURL=/sm/97fc86ded8a1bceea06ec5bf915ff2c6f9c3423af336b122fac2526a2f34c917.map