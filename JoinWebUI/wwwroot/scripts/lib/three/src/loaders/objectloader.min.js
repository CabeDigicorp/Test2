/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/loaders/ObjectLoader.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{UVMapping,CubeReflectionMapping,CubeRefractionMapping,EquirectangularReflectionMapping,EquirectangularRefractionMapping,CubeUVReflectionMapping,RepeatWrapping,ClampToEdgeWrapping,MirroredRepeatWrapping,NearestFilter,NearestMipmapNearestFilter,NearestMipmapLinearFilter,LinearFilter,LinearMipmapNearestFilter,LinearMipmapLinearFilter}from"../constants.js";import{InstancedBufferAttribute}from"../core/InstancedBufferAttribute.js";import{Color}from"../math/Color.js";import{Object3D}from"../core/Object3D.js";import{Group}from"../objects/Group.js";import{InstancedMesh}from"../objects/InstancedMesh.js";import{BatchedMesh}from"../objects/BatchedMesh.js";import{Sprite}from"../objects/Sprite.js";import{Points}from"../objects/Points.js";import{Line}from"../objects/Line.js";import{LineLoop}from"../objects/LineLoop.js";import{LineSegments}from"../objects/LineSegments.js";import{LOD}from"../objects/LOD.js";import{Mesh}from"../objects/Mesh.js";import{SkinnedMesh}from"../objects/SkinnedMesh.js";import{Bone}from"../objects/Bone.js";import{Skeleton}from"../objects/Skeleton.js";import{Shape}from"../extras/core/Shape.js";import{Fog}from"../scenes/Fog.js";import{FogExp2}from"../scenes/FogExp2.js";import{HemisphereLight}from"../lights/HemisphereLight.js";import{SpotLight}from"../lights/SpotLight.js";import{PointLight}from"../lights/PointLight.js";import{DirectionalLight}from"../lights/DirectionalLight.js";import{AmbientLight}from"../lights/AmbientLight.js";import{RectAreaLight}from"../lights/RectAreaLight.js";import{LightProbe}from"../lights/LightProbe.js";import{OrthographicCamera}from"../cameras/OrthographicCamera.js";import{PerspectiveCamera}from"../cameras/PerspectiveCamera.js";import{Scene}from"../scenes/Scene.js";import{CubeTexture}from"../textures/CubeTexture.js";import{Texture}from"../textures/Texture.js";import{Source}from"../textures/Source.js";import{DataTexture}from"../textures/DataTexture.js";import{ImageLoader}from"./ImageLoader.js";import{LoadingManager}from"./LoadingManager.js";import{AnimationClip}from"../animation/AnimationClip.js";import{MaterialLoader}from"./MaterialLoader.js";import{LoaderUtils}from"./LoaderUtils.js";import{BufferGeometryLoader}from"./BufferGeometryLoader.js";import{Loader}from"./Loader.js";import{FileLoader}from"./FileLoader.js";import*as Geometries from"../geometries/Geometries.js";import{getTypedArray}from"../utils.js";import{Box3}from"../math/Box3.js";import{Sphere}from"../math/Sphere.js";class ObjectLoader extends Loader{constructor(e){super(e)}load(e,t,r,i){const a=this,o=""===this.path?LoaderUtils.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const n=new FileLoader(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials),n.load(e,(function(r){let o=null;try{o=JSON.parse(r)}catch(t){return void 0!==i&&i(t),void console.error("THREE:ObjectLoader: Can't parse "+e+".",t.message)}const n=o.metadata;if(void 0===n||void 0===n.type||"geometry"===n.type.toLowerCase())return void 0!==i&&i(new Error("THREE.ObjectLoader: Can't load "+e)),void console.error("THREE.ObjectLoader: Can't load "+e);a.parse(o,t)}),r,i)}async loadAsync(e,t){const r=""===this.path?LoaderUtils.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||r;const i=new FileLoader(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials);const a=await i.loadAsync(e,t),o=JSON.parse(a),n=o.metadata;if(void 0===n||void 0===n.type||"geometry"===n.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+e);return await this.parseAsync(o)}parse(e,t){const r=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),a=this.parseGeometries(e.geometries,i),o=this.parseImages(e.images,(function(){void 0!==t&&t(d)})),n=this.parseTextures(e.textures,o),s=this.parseMaterials(e.materials,n),d=this.parseObject(e.object,a,s,n,r),m=this.parseSkeletons(e.skeletons,d);if(this.bindSkeletons(d,m),this.bindLightTargets(d),void 0!==t){let e=!1;for(const t in o)if(o[t].data instanceof HTMLImageElement){e=!0;break}!1===e&&t(d)}return d}async parseAsync(e){const t=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,r),a=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,a),n=this.parseMaterials(e.materials,o),s=this.parseObject(e.object,i,n,o,t),d=this.parseSkeletons(e.skeletons,s);return this.bindSkeletons(s,d),this.bindLightTargets(s),s}parseShapes(e){const t={};if(void 0!==e)for(let r=0,i=e.length;r<i;r++){const i=(new Shape).fromJSON(e[r]);t[i.uuid]=i}return t}parseSkeletons(e,t){const r={},i={};if(t.traverse((function(e){e.isBone&&(i[e.uuid]=e)})),void 0!==e)for(let t=0,a=e.length;t<a;t++){const a=(new Skeleton).fromJSON(e[t],i);r[a.uuid]=a}return r}parseGeometries(e,t){const r={};if(void 0!==e){const i=new BufferGeometryLoader;for(let a=0,o=e.length;a<o;a++){let o;const n=e[a];switch(n.type){case"BufferGeometry":case"InstancedBufferGeometry":o=i.parse(n);break;default:n.type in Geometries?o=Geometries[n.type].fromJSON(n,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${n.type}"`)}o.uuid=n.uuid,void 0!==n.name&&(o.name=n.name),void 0!==n.userData&&(o.userData=n.userData),r[n.uuid]=o}}return r}parseMaterials(e,t){const r={},i={};if(void 0!==e){const a=new MaterialLoader;a.setTextures(t);for(let t=0,o=e.length;t<o;t++){const o=e[t];void 0===r[o.uuid]&&(r[o.uuid]=a.parse(o)),i[o.uuid]=r[o.uuid]}}return i}parseAnimations(e){const t={};if(void 0!==e)for(let r=0;r<e.length;r++){const i=e[r],a=AnimationClip.parse(i);t[a.uuid]=a}return t}parseImages(e,t){const r=this,i={};let a;function o(e){if("string"==typeof e){const t=e;return function(e){return r.manager.itemStart(e),a.load(e,(function(){r.manager.itemEnd(e)}),void 0,(function(){r.manager.itemError(e),r.manager.itemEnd(e)}))}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:r.resourcePath+t)}return e.data?{data:getTypedArray(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){const r=new LoadingManager(t);a=new ImageLoader(r),a.setCrossOrigin(this.crossOrigin);for(let t=0,r=e.length;t<r;t++){const r=e[t],a=r.url;if(Array.isArray(a)){const e=[];for(let t=0,r=a.length;t<r;t++){const r=o(a[t]);null!==r&&(r instanceof HTMLImageElement?e.push(r):e.push(new DataTexture(r.data,r.width,r.height)))}i[r.uuid]=new Source(e)}else{const e=o(r.url);i[r.uuid]=new Source(e)}}}return i}async parseImagesAsync(e){const t=this,r={};let i;async function a(e){if("string"==typeof e){const r=e,a=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(r)?r:t.resourcePath+r;return await i.loadAsync(a)}return e.data?{data:getTypedArray(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){i=new ImageLoader(this.manager),i.setCrossOrigin(this.crossOrigin);for(let t=0,i=e.length;t<i;t++){const i=e[t],o=i.url;if(Array.isArray(o)){const e=[];for(let t=0,r=o.length;t<r;t++){const r=o[t],i=await a(r);null!==i&&(i instanceof HTMLImageElement?e.push(i):e.push(new DataTexture(i.data,i.width,i.height)))}r[i.uuid]=new Source(e)}else{const e=await a(i.url);r[i.uuid]=new Source(e)}}}return r}parseTextures(e,t){function r(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}const i={};if(void 0!==e)for(let a=0,o=e.length;a<o;a++){const o=e[a];void 0===o.image&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),void 0===t[o.image]&&console.warn("THREE.ObjectLoader: Undefined image",o.image);const n=t[o.image],s=n.data;let d;Array.isArray(s)?(d=new CubeTexture,6===s.length&&(d.needsUpdate=!0)):(d=s&&s.data?new DataTexture:new Texture,s&&(d.needsUpdate=!0)),d.source=n,d.uuid=o.uuid,void 0!==o.name&&(d.name=o.name),void 0!==o.mapping&&(d.mapping=r(o.mapping,TEXTURE_MAPPING)),void 0!==o.channel&&(d.channel=o.channel),void 0!==o.offset&&d.offset.fromArray(o.offset),void 0!==o.repeat&&d.repeat.fromArray(o.repeat),void 0!==o.center&&d.center.fromArray(o.center),void 0!==o.rotation&&(d.rotation=o.rotation),void 0!==o.wrap&&(d.wrapS=r(o.wrap[0],TEXTURE_WRAPPING),d.wrapT=r(o.wrap[1],TEXTURE_WRAPPING)),void 0!==o.format&&(d.format=o.format),void 0!==o.internalFormat&&(d.internalFormat=o.internalFormat),void 0!==o.type&&(d.type=o.type),void 0!==o.colorSpace&&(d.colorSpace=o.colorSpace),void 0!==o.minFilter&&(d.minFilter=r(o.minFilter,TEXTURE_FILTER)),void 0!==o.magFilter&&(d.magFilter=r(o.magFilter,TEXTURE_FILTER)),void 0!==o.anisotropy&&(d.anisotropy=o.anisotropy),void 0!==o.flipY&&(d.flipY=o.flipY),void 0!==o.generateMipmaps&&(d.generateMipmaps=o.generateMipmaps),void 0!==o.premultiplyAlpha&&(d.premultiplyAlpha=o.premultiplyAlpha),void 0!==o.unpackAlignment&&(d.unpackAlignment=o.unpackAlignment),void 0!==o.compareFunction&&(d.compareFunction=o.compareFunction),void 0!==o.userData&&(d.userData=o.userData),i[o.uuid]=d}return i}parseObject(e,t,r,i,a){let o,n,s;function d(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function m(e){if(void 0!==e){if(Array.isArray(e)){const t=[];for(let i=0,a=e.length;i<a;i++){const a=e[i];void 0===r[a]&&console.warn("THREE.ObjectLoader: Undefined material",a),t.push(r[a])}return t}return void 0===r[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),r[e]}}function c(e){return void 0===i[e]&&console.warn("THREE.ObjectLoader: Undefined texture",e),i[e]}switch(e.type){case"Scene":o=new Scene,void 0!==e.background&&(Number.isInteger(e.background)?o.background=new Color(e.background):o.background=c(e.background)),void 0!==e.environment&&(o.environment=c(e.environment)),void 0!==e.fog&&("Fog"===e.fog.type?o.fog=new Fog(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(o.fog=new FogExp2(e.fog.color,e.fog.density)),""!==e.fog.name&&(o.fog.name=e.fog.name)),void 0!==e.backgroundBlurriness&&(o.backgroundBlurriness=e.backgroundBlurriness),void 0!==e.backgroundIntensity&&(o.backgroundIntensity=e.backgroundIntensity),void 0!==e.backgroundRotation&&o.backgroundRotation.fromArray(e.backgroundRotation),void 0!==e.environmentIntensity&&(o.environmentIntensity=e.environmentIntensity),void 0!==e.environmentRotation&&o.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":o=new PerspectiveCamera(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(o.focus=e.focus),void 0!==e.zoom&&(o.zoom=e.zoom),void 0!==e.filmGauge&&(o.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(o.filmOffset=e.filmOffset),void 0!==e.view&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new OrthographicCamera(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(o.zoom=e.zoom),void 0!==e.view&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new AmbientLight(e.color,e.intensity);break;case"DirectionalLight":o=new DirectionalLight(e.color,e.intensity),o.target=e.target||"";break;case"PointLight":o=new PointLight(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new RectAreaLight(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new SpotLight(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),o.target=e.target||"";break;case"HemisphereLight":o=new HemisphereLight(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=(new LightProbe).fromJSON(e);break;case"SkinnedMesh":n=d(e.geometry),s=m(e.material),o=new SkinnedMesh(n,s),void 0!==e.bindMode&&(o.bindMode=e.bindMode),void 0!==e.bindMatrix&&o.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(o.skeleton=e.skeleton);break;case"Mesh":n=d(e.geometry),s=m(e.material),o=new Mesh(n,s);break;case"InstancedMesh":n=d(e.geometry),s=m(e.material);const t=e.count,r=e.instanceMatrix,i=e.instanceColor;o=new InstancedMesh(n,s,t),o.instanceMatrix=new InstancedBufferAttribute(new Float32Array(r.array),16),void 0!==i&&(o.instanceColor=new InstancedBufferAttribute(new Float32Array(i.array),i.itemSize));break;case"BatchedMesh":n=d(e.geometry),s=m(e.material),o=new BatchedMesh(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,s),o.geometry=n,o.perObjectFrustumCulled=e.perObjectFrustumCulled,o.sortObjects=e.sortObjects,o._drawRanges=e.drawRanges,o._reservedRanges=e.reservedRanges,o._visibility=e.visibility,o._active=e.active,o._bounds=e.bounds.map((e=>{const t=new Box3;t.min.fromArray(e.boxMin),t.max.fromArray(e.boxMax);const r=new Sphere;return r.radius=e.sphereRadius,r.center.fromArray(e.sphereCenter),{boxInitialized:e.boxInitialized,box:t,sphereInitialized:e.sphereInitialized,sphere:r}})),o._maxInstanceCount=e.maxInstanceCount,o._maxVertexCount=e.maxVertexCount,o._maxIndexCount=e.maxIndexCount,o._geometryInitialized=e.geometryInitialized,o._geometryCount=e.geometryCount,o._matricesTexture=c(e.matricesTexture.uuid),void 0!==e.colorsTexture&&(o._colorsTexture=c(e.colorsTexture.uuid));break;case"LOD":o=new LOD;break;case"Line":o=new Line(d(e.geometry),m(e.material));break;case"LineLoop":o=new LineLoop(d(e.geometry),m(e.material));break;case"LineSegments":o=new LineSegments(d(e.geometry),m(e.material));break;case"PointCloud":case"Points":o=new Points(d(e.geometry),m(e.material));break;case"Sprite":o=new Sprite(m(e.material));break;case"Group":o=new Group;break;case"Bone":o=new Bone;break;default:o=new Object3D}if(o.uuid=e.uuid,void 0!==e.name&&(o.name=e.name),void 0!==e.matrix?(o.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(void 0!==e.position&&o.position.fromArray(e.position),void 0!==e.rotation&&o.rotation.fromArray(e.rotation),void 0!==e.quaternion&&o.quaternion.fromArray(e.quaternion),void 0!==e.scale&&o.scale.fromArray(e.scale)),void 0!==e.up&&o.up.fromArray(e.up),void 0!==e.castShadow&&(o.castShadow=e.castShadow),void 0!==e.receiveShadow&&(o.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.intensity&&(o.shadow.intensity=e.shadow.intensity),void 0!==e.shadow.bias&&(o.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(o.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(o.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&o.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(o.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(o.visible=e.visible),void 0!==e.frustumCulled&&(o.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(o.renderOrder=e.renderOrder),void 0!==e.userData&&(o.userData=e.userData),void 0!==e.layers&&(o.layers.mask=e.layers),void 0!==e.children){const n=e.children;for(let e=0;e<n.length;e++)o.add(this.parseObject(n[e],t,r,i,a))}if(void 0!==e.animations){const t=e.animations;for(let e=0;e<t.length;e++){const r=t[e];o.animations.push(a[r])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(o.autoUpdate=e.autoUpdate);const t=e.levels;for(let e=0;e<t.length;e++){const r=t[e],i=o.getObjectByProperty("uuid",r.object);void 0!==i&&o.addLevel(i,r.distance,r.hysteresis)}}return o}bindSkeletons(e,t){0!==Object.keys(t).length&&e.traverse((function(e){if(!0===e.isSkinnedMesh&&void 0!==e.skeleton){const r=t[e.skeleton];void 0===r?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(r,e.bindMatrix)}}))}bindLightTargets(e){e.traverse((function(t){if(t.isDirectionalLight||t.isSpotLight){const r=t.target,i=e.getObjectByProperty("uuid",r);t.target=void 0!==i?i:new Object3D}}))}}const TEXTURE_MAPPING={UVMapping:UVMapping,CubeReflectionMapping:CubeReflectionMapping,CubeRefractionMapping:CubeRefractionMapping,EquirectangularReflectionMapping:EquirectangularReflectionMapping,EquirectangularRefractionMapping:EquirectangularRefractionMapping,CubeUVReflectionMapping:CubeUVReflectionMapping},TEXTURE_WRAPPING={RepeatWrapping:RepeatWrapping,ClampToEdgeWrapping:ClampToEdgeWrapping,MirroredRepeatWrapping:MirroredRepeatWrapping},TEXTURE_FILTER={NearestFilter:NearestFilter,NearestMipmapNearestFilter:NearestMipmapNearestFilter,NearestMipmapLinearFilter:NearestMipmapLinearFilter,LinearFilter:LinearFilter,LinearMipmapNearestFilter:LinearMipmapNearestFilter,LinearMipmapLinearFilter:LinearMipmapLinearFilter};export{ObjectLoader};
//# sourceMappingURL=/sm/62b26442b9220bcb4f36ecfd8bb9d0c25c0fb3e801e3dc34b8e1791b1ad9b860.map