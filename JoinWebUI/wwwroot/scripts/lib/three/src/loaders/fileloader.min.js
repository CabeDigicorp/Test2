/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/loaders/FileLoader.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Cache}from"./Cache.js";import{Loader}from"./Loader.js";const loading={};class HttpError extends Error{constructor(e,t){super(e),this.response=t}}class FileLoader extends Loader{constructor(e){super(e)}load(e,t,r,o){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=Cache.get(e);if(void 0!==s)return this.manager.itemStart(e),setTimeout((()=>{t&&t(s),this.manager.itemEnd(e)}),0),s;if(void 0!==loading[e])return void loading[e].push({onLoad:t,onProgress:r,onError:o});loading[e]=[],loading[e].push({onLoad:t,onProgress:r,onError:o});const n=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,i=this.responseType;fetch(n).then((t=>{if(200===t.status||0===t.status){if(0===t.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===t.body||void 0===t.body.getReader)return t;const r=loading[e],o=t.body.getReader(),s=t.headers.get("X-File-Size")||t.headers.get("Content-Length"),n=s?parseInt(s):0,a=0!==n;let i=0;const d=new ReadableStream({start(e){!function t(){o.read().then((({done:o,value:s})=>{if(o)e.close();else{i+=s.byteLength;const o=new ProgressEvent("progress",{lengthComputable:a,loaded:i,total:n});for(let e=0,t=r.length;e<t;e++){const t=r[e];t.onProgress&&t.onProgress(o)}e.enqueue(s),t()}}),(t=>{e.error(t)}))}()}});return new Response(d)}throw new HttpError(`fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`,t)})).then((e=>{switch(i){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then((e=>(new DOMParser).parseFromString(e,a)));case"json":return e.json();default:if(void 0===a)return e.text();{const t=/charset="?([^;"\s]*)"?/i.exec(a),r=t&&t[1]?t[1].toLowerCase():void 0,o=new TextDecoder(r);return e.arrayBuffer().then((e=>o.decode(e)))}}})).then((t=>{Cache.add(e,t);const r=loading[e];delete loading[e];for(let e=0,o=r.length;e<o;e++){const o=r[e];o.onLoad&&o.onLoad(t)}})).catch((t=>{const r=loading[e];if(void 0===r)throw this.manager.itemError(e),t;delete loading[e];for(let e=0,o=r.length;e<o;e++){const o=r[e];o.onError&&o.onError(t)}this.manager.itemError(e)})).finally((()=>{this.manager.itemEnd(e)})),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}export{FileLoader};
//# sourceMappingURL=/sm/e4a1b909c915a21ead729305497b84d1a79c0168397e8314c8058a5053692dfa.map