/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/math/Line3.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Vector3}from"./Vector3.js";import*as MathUtils from"./MathUtils.js";const _startP=new Vector3,_startEnd=new Vector3;class Line3{constructor(t=new Vector3,s=new Vector3){this.start=t,this.end=s}set(t,s){return this.start.copy(t),this.end.copy(s),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,s){return this.delta(s).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,s){_startP.subVectors(t,this.start),_startEnd.subVectors(this.end,this.start);const r=_startEnd.dot(_startEnd);let e=_startEnd.dot(_startP)/r;return s&&(e=MathUtils.clamp(e,0,1)),e}closestPointToPoint(t,s,r){const e=this.closestPointToPointParameter(t,s);return this.delta(r).multiplyScalar(e).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}export{Line3};
//# sourceMappingURL=/sm/790f5e272324bfcecd35c189bdce3ea956c7bb6e1958883839a68276dd45f4a0.map