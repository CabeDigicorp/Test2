/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three@0.170.0/src/math/Vector2.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import*as MathUtils from"./MathUtils.js";class Vector2{constructor(t=0,h=0){Vector2.prototype.isVector2=!0,this.x=t,this.y=h}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,h){return this.x=t,this.y=h,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,h){switch(t){case 0:this.x=h;break;case 1:this.y=h;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,h){return this.x=t.x+h.x,this.y=t.y+h.y,this}addScaledVector(t,h){return this.x+=t.x*h,this.y+=t.y*h,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,h){return this.x=t.x-h.x,this.y=t.y-h.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const h=this.x,s=this.y,i=t.elements;return this.x=i[0]*h+i[3]*s+i[6],this.y=i[1]*h+i[4]*s+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,h){return this.x=Math.max(t.x,Math.min(h.x,this.x)),this.y=Math.max(t.y,Math.min(h.y,this.y)),this}clampScalar(t,h){return this.x=Math.max(t,Math.min(h,this.x)),this.y=Math.max(t,Math.min(h,this.y)),this}clampLength(t,h){const s=this.length();return this.divideScalar(s||1).multiplyScalar(Math.max(t,Math.min(h,s)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const h=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===h)return Math.PI/2;const s=this.dot(t)/h;return Math.acos(MathUtils.clamp(s,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const h=this.x-t.x,s=this.y-t.y;return h*h+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,h){return this.x+=(t.x-this.x)*h,this.y+=(t.y-this.y)*h,this}lerpVectors(t,h,s){return this.x=t.x+(h.x-t.x)*s,this.y=t.y+(h.y-t.y)*s,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,h=0){return this.x=t[h],this.y=t[h+1],this}toArray(t=[],h=0){return t[h]=this.x,t[h+1]=this.y,t}fromBufferAttribute(t,h){return this.x=t.getX(h),this.y=t.getY(h),this}rotateAround(t,h){const s=Math.cos(h),i=Math.sin(h),r=this.x-t.x,e=this.y-t.y;return this.x=r*s-e*i+t.x,this.y=r*i+e*s+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}export{Vector2};
//# sourceMappingURL=/sm/68ce3b57fb839ccffe3e78ea77bdab650d7c2366e25c651b8759ff99c88cc66d.map