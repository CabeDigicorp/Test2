<Window x:Class="MasterDetailWpf.AttributoFilterDetailWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MasterDetailWpf"
        xmlns:commons="clr-namespace:Commons;assembly=DigiCorp.Commons"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        lex:LocalizeDictionary.OutputMissingKeys="True"
        lex:LocalizeDictionary.DesignCulture="en"
        lex:ResxLocalizationProvider.DefaultAssembly="DigiCorp.CommonResources"
        lex:ResxLocalizationProvider.DefaultDictionary="Strings"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen" 
        Title="{Binding Attributo.Etichetta}" Height="500" Width="650"
        MinHeight="500" MinWidth="650">
    <!--<Window.DataContext>
        <local:AttributoFilterDetailView/>
    </Window.DataContext>-->
    <Window.Resources>
        <Style TargetType="{x:Type Control}" x:Key="baseStyle">
            <Setter Property="FontSize" Value="12" />
        </Style>
        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource baseStyle}"></Style>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource baseStyle}"></Style>
        <Style TargetType="{x:Type ListView}" BasedOn="{StaticResource baseStyle}"></Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style TargetType="Button" x:Key="menuButtonStyle">
            <Setter Property="Height" Value="50"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TabControl Grid.Row="0" Margin="5">
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{lex:Loc Trova}"/>
                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Visibility="{Binding IsFilterTypesVisible, Converter={StaticResource VisibilityConverter}}">
                        <ComboBox Margin="5" ItemsSource="{Binding FilterTypes}" DisplayMemberPath="Name"
                                  SelectedItem="{Binding CurrentFilterType}">

                        </ComboBox>
                    </Grid>
                    <Grid Grid.Row="1" Visibility="{Binding IsConditionsFilterType, Converter={StaticResource InverseVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBox Text="{Binding TextSearched, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Row="0" Margin="5">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding SubmitEnterCommand}" Key="Enter"/>
                            </TextBox.InputBindings>
                        </TextBox>
                        <CheckBox Content="{lex:Loc Seleziona tutti}" IsThreeState="True" IsChecked="{Binding IsAllChecked, Mode=TwoWay}"
                              Background="Transparent" HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="0" Margin="5"
                              Visibility="{Binding AllowValoriUnivoci, Converter={StaticResource VisibilityConverter}}"/> <!--IsEnabled="{Binding IsAllCheckedEnabled}"-->

                        <ListView x:Name="ValoriFiltro"  SelectionMode="Single" ItemsSource="{Binding ValoriFilter, Mode=TwoWay}" Grid.Row="2" Margin="5"
                              Visibility="{Binding IsValoriUnivociVisible, Converter={StaticResource VisibilityConverter}}">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <CheckBox Content="{Binding Valore.V}" IsChecked="{Binding IsChecked, Mode=TwoWay}" IsEnabled="{Binding IsCheckEnabled, Mode=TwoWay}" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Stretch" />
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <TextBlock Text="{Binding ListViewPlaceholderText}" Grid.Row="2"  Visibility="{Binding IsValoriUnivociLoading, Converter={StaticResource VisibilityConverter}}"
                                    VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="Gray"/>
                    </Grid>
                    <Grid Grid.Row="1" Visibility="{Binding IsConditionsFilterType, Converter={StaticResource VisibilityConverter}}">
                        <local:ValoreConditionsGroupCtrl x:Name="RootConditionsCtrl" Margin="5"/>
                    </Grid>
                    <StackPanel Orientation="Horizontal" FlowDirection="RightToLeft" Grid.Row="2">
                        <Button Name="Find" Content="{lex:Loc Ok}" Click="Find_Click" Width="100" Margin="5"/>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Visibility="{Binding ReplaceInTextEnabled, Converter={StaticResource VisibilityConverter}}">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{lex:Loc Sostituisci nel testo}"/>
                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Trova:" Grid.Row="0" Margin="5"/>
                    <TextBox Text="{Binding TextToReplace, Mode=TwoWay}" Grid.Row="1" Margin="5"  IsEnabled="{Binding ReplaceInTextEnabled}"/>
                    <TextBlock Text="Sostituisci con:" Grid.Row="2" Margin="5"/>
                    <TextBox Text="{Binding ReplaceNewText, Mode=TwoWay}" Grid.Row="3" Margin="5"  IsEnabled="{Binding ReplaceInTextEnabled}"/>
                    <StackPanel Grid.Row="4" Orientation="Horizontal" Margin="0,5,0,5">
                        <Button Content="{lex:Loc Tutte le entità}" Command="{Binding ReplaceInTextInAllEntitiesCommand}" Margin="5" Width="100" IsEnabled="{Binding ReplaceInTextEnabled}"/>
                        <Button Content="{lex:Loc Entità corrente}" Command="{Binding ReplaceInTextInCurrentEntityCommand}" Margin="5" Width="100" IsEnabled="{Binding ReplaceInTextEnabled}"/>
                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
